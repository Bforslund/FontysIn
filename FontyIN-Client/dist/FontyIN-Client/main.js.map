{"version":3,"sources":["./src/app/services/message/message.service.ts","./src/app/update-profile-about/update-profile-about.component.ts","./src/app/update-profile-about/update-profile-about.component.html","./src/app/post/post.validator.ts","./src/app/user-settings/user-settings.component.ts","./src/app/user-settings/user-settings.component.html","./src/app/user/user.component.ts","./src/app/user/user.component.html","./src/app/errors/forbidden/forbidden.component.ts","./src/app/errors/forbidden/forbidden.component.html","./src/app/classes/Profile/Privacy.ts","./src/app/registration/registration.component.ts","./src/app/registration/registration.component.html","./src/app/newsfeed/newsfeed.component.ts","./src/app/newsfeed/newsfeed.component.html","./src/app/errors/not-found/not-found.component.ts","./src/app/errors/not-found/not-found.component.html","./src/app/pipes/date-ago.pipe.ts","./src/app/profile/dialog-add-education/dialog-add-education.component.ts","./src/app/profile/dialog-add-education/dialog-add-education.component.html","./src/app/services/errors/error.service.ts","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/profile/add-information/add-information.component.ts","./src/app/profile/add-information/add-information.component.html","./src/environments/environment.ts","./src/app/pipes/filter.pipe.ts","./src/app/messages/messages.component.ts","./src/app/messages/messages.component.html","./src/app/update-post/update-post.component.ts","./src/app/update-post/update-post.component.html","./src/app/services/data.service.ts","./src/app/filter-users/filter-users.component.ts","./src/app/filter-users/filter-users.component.html","./src/app/classes/Profile/Education.ts","./src/app/newsfeed/post.validator.ts","./src/app/update-profile-experience/update-profile-experience.component.ts","./src/app/update-profile-experience/update-profile-experience.component.html","./src/app/profile/dialog-change-dp/dialog-change-dp.component.ts","./src/app/profile/dialog-change-dp/dialog-change-dp.component.html","./src/app/profile/dialog-add-skill/dialog-add-skill.component.ts","./src/app/profile/dialog-add-skill/dialog-add-skill.component.html","./src/app/connection/connection.component.ts","./src/app/connection/connection.component.html","./src/app/auth/auth.guard.ts","./src/app/errors/server-error.interceptor.ts","./src/app/errors/offline/offline.component.ts","./src/app/errors/offline/offline.component.html","./src/app/delete-conversation/delete-conversation.component.ts","./src/app/delete-conversation/delete-conversation.component.html","./node_modules/moment/locale sync ^\\.\\/.*$","./src/app/app.component.ts","./src/app/app.component.html","./src/app/messages/selected-message/selected-message.component.ts","./src/app/messages/selected-message/selected-message.component.html","./src/app/post-details/post-details.component.ts","./src/app/post-details/post-details.component.html","./src/app/profile/profile.component.ts","./src/app/profile/profile.component.html","./src/app/errors/unexpected-error/unexpected-error.component.ts","./src/app/errors/unexpected-error/unexpected-error.component.html","./src/app/delete-connection/delete-connection.component.ts","./src/app/delete-connection/delete-connection.component.html","./src/app/post/update-post-dialog/update-post-dialog.component.ts","./src/app/post/update-post-dialog/update-post-dialog.component.html","./src/app/directives/material-elevation.directive.ts","./src/app/app.module.ts","./src/app/delete-education/delete-education.component.ts","./src/app/delete-education/delete-education.component.html","./src/app/services/profile/profile.service.ts","./src/app/update-profile-education/update-profile-education.component.ts","./src/app/update-profile-education/update-profile-education.component.html","./src/app/profile/dialog-add-profile/dialog-add-profile.component.ts","./src/app/profile/dialog-add-profile/dialog-add-profile.component.html","./src/app/classes/Profile/User.ts","./src/app/classes/Profile/About.ts","./src/app/header/header.component.ts","./src/app/header/header.component.html","./src/app/post/post.component.ts","./src/app/post/post.component.html","./src/app/errors/bad-request/bad-request.component.ts","./src/app/errors/bad-request/bad-request.component.html","./src/app/classes/Profile/Resume.ts","./src/app/classes/Profile/Experience.ts","./src/app/delete-skill/delete-skill.component.ts","./src/app/delete-skill/delete-skill.component.html","./src/app/services/posts.service.ts","./src/app/profile/dialog-add-experience/dialog-add-experience.component.ts","./src/app/profile/dialog-add-experience/dialog-add-experience.component.html","./src/app/comment-username/comment-username.component.ts","./src/app/comment-username/comment-username.component.html","./src/app/services/user.service.ts","./src/app/services/errors/notification.service.ts","./src/app/services/filter/filter.service.ts","./src/app/delete-experience/delete-experience.component.ts","./src/app/delete-experience/delete-experience.component.html","./src/app/services/contact/contact.service.ts","./src/app/app-routing.module.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/errors/internal-server-error/internal-server-error.component.ts","./src/app/errors/internal-server-error/internal-server-error.component.html","./src/app/pipes/search.pipe.ts","./src/app/start-conversation/start-conversation.component.ts","./src/app/start-conversation/start-conversation.component.html","./src/app/cv-builder/cv-builder.component.ts","./src/app/cv-builder/cv-builder.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { DataService } from '../data.service';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { UserService } from '../user.service';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class MessageService extends DataService {\r\n  info = new BehaviorSubject('information');\r\n\r\n    constructor(http: HttpClient, \r\n                private userService: UserService) {\r\n        super('http://localhost:9090/users/' + userService.getUserIdOfLoggedIn() + '/messages', http);\r\n    }\r\n\r\n    getId() {\r\n\t\tlet id = this.userService.getUserIdOfLoggedIn()\r\n\r\n\t\treturn id;\r\n\t}\r\n\r\n  //delete conversation in messaging page\r\n  public deleteConversation(userId, conversationId){\r\n    return this.http.delete('http://localhost:9090/users/1/messages/user/' + this.getId() + '/conversation/' + conversationId);\r\n  }\r\n\r\n  //start new conversation with new contact\r\n  public startConversation(data){\r\n    return this.http.post('http://localhost:9090/users/1/messages/newConversation/', data).toPromise().then(data => {\r\n      console.log(\"In the message service: \" + data);\r\n    });   \r\n  }\r\n\r\n  // Used to refresh both parent and child componenets\r\n  getInfo(): Observable<string>{\r\n    return this.info.asObservable();\r\n  }\r\n\r\n  getInfoValue(): string{\r\n    return this.info.getValue();\r\n  }\r\n\r\n  setInfo(value: string){\r\n    this.info.next(value);\r\n  }\r\n}\r\n","import { Component, Inject, InjectionToken } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { ProfileService } from '../services/profile/profile.service';\r\nimport { About } from '../classes/Profile/About';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\n@Component({\r\n  selector: 'app-update-profile-about',\r\n  templateUrl: './update-profile-about.component.html',\r\n  styleUrls: ['./update-profile-about.component.css']\r\n})\r\nexport class UpdateProfileAboutComponent {\r\n  id: number;\r\n  notification = null; \r\n  constructor(  private service: ProfileService, public dialogRef: MatDialogRef<UpdateProfileAboutComponent>,@Inject(MAT_DIALOG_DATA) public data: any) { }\r\n  about = new About(1, 1, \"hello\");\r\n  ngOnInit(): void {\r\nconsole.log(this.data.about.id);\r\n    this.id = this.data.about.id\r\n    this.service.GetOneAbout(this.id)\r\n    .subscribe((data)=>{\r\n      console.log(data);\r\n     this.about = <About>data;\r\n    });\r\n\r\n  }\r\n  \r\n  updateAbout(){\r\n  \r\n    this.service.updateAbout(this.about, this.id).subscribe(\r\n      (res: any) => {\r\n        console.log(\"updated\");\r\n      });\r\n      this.dialogRef.close();\r\n}\r\n\r\n}\r\n","\r\n<div class=\"container h-100 d-flex justify-content-center\">\r\n    <form (ngSubmit)=\"updateAbout()\" #AboutForm=\"ngForm\">\r\n \r\n\r\n        <div class=\"d-flex justify-content-between align-items-center experience\">\r\n            <h2 class=\"text-right\">Edit About</h2>\r\n        </div>\r\n        <div class=\"row mt-2\">\r\n            <div class=\"col-md-12\"><label class=\"labels\">About you</label>\r\n                <input type=\"text\" class=\"form-control\" id=\"content\"\r\n                required\r\n                [(ngModel)]=\"about.content\" name=\"content\"\r\n                #content=\"ngModel\">\r\n                \r\n            </div>\r\n        </div>\r\n        \r\n        <div class=\"mt-5 text-center\"><button class=\"btn btn-primary profile-button\" type=\"submit\" [disabled]=\"!AboutForm.valid\">Save</button></div>\r\n        \r\n    </form>\r\n    \r\n</div>","import { AbstractControl, ValidationErrors } from \"@angular/forms\";\r\n\r\nexport class PostValidator {\r\n  static cannotContainSpace(control: AbstractControl): ValidationErrors | null {\r\n    if ((control.value as string).replace(/\\s/g, \"\").length == 0) {\r\n      return { cannotContainSpace: true };\r\n    }\r\n\r\n    return null;\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { User } from '../classes/Profile/User';\r\nimport { Address } from '../classes/Profile/Address';\r\nimport { privacy } from '../classes/Profile/Privacy';\r\n\r\nimport { ProfileService } from '../services/profile/profile.service';\r\nclass Setting {\r\n type: string;\r\n}\r\n@Component({\r\n  selector: 'app-user-settings',\r\n  templateUrl: './user-settings.component.html',\r\n  styleUrls: ['./user-settings.component.css']\r\n})\r\nexport class UserSettingsComponent implements OnInit {\r\n  privacySetting: Setting[] = [\r\n    { type: 'EVERYONE'}, {type: 'CONNECTIONS'}, {type: 'ONLYME'}];\r\n\r\n  constructor( private service: ProfileService) { }\r\n  notificationP = null;\r\n  isChecked = true;\r\n  id:string;\r\n  user = new User(3);\r\n  privacy = new privacy(1, 1, \"\", \"\", \"\",false);\r\n\r\n  ngOnInit(): void {\r\n    this.id = localStorage.getItem('userId');\r\n\r\n    this.service.GetOnePrivacy()\r\n    .subscribe((data)=>{\r\n      console.log(data);\r\n    this.privacy = <privacy>data;\r\n    if(this.privacy.hideFromSearch){\r\n      this.isChecked = false;\r\n    }else{\r\n      this.isChecked = true;\r\n    }\r\n    });\r\n \r\n  }\r\n\r\nshowNotificationP() {\r\n  this.notificationP = { class: 'text-primary', message: 'updated!' };\r\n\r\n}\r\n\r\nupdatePrivacy(){\r\n  this.hideEverything();\r\n  console.log(this.privacy);\r\n  this.service.updatePrivacy(this.privacy).subscribe(\r\n    (res: any) => {\r\n      this.showNotificationP();\r\n    });\r\n}\r\nhideEverything(){\r\n  if(this.isChecked){\r\n    this.privacy.hideFromSearch = false;\r\n  }else{\r\n    this.privacy.hideFromSearch = true;\r\n  }\r\n}\r\n\r\n}\r\n","<div class=\"container p-0\">\r\n\r\n    <h1 class=\"h3 mb-3\">Settings</h1>\r\n\r\n    <div class=\"row\">\r\n        <div class=\"col-md-5 col-xl-4\">\r\n\r\n            <div class=\"card\">\r\n                <div class=\"card-header\">\r\n                    <h5 class=\"card-title mb-0\">Profile Settings</h5>\r\n                </div>\r\n\r\n                <div class=\"list-group list-group-flush\" role=\"tablist\">\r\n                  \r\n                \r\n                    <a class=\"list-group-item list-group-item-action active\" data-toggle=\"list\" href=\"#privacy\" role=\"tab\">\r\n                      Privacy and safety\r\n                    </a>\r\n                   \r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"col-md-7 col-xl-8\">\r\n            <div class=\"tab-content\">\r\n                \r\n                <div class=\"tab-pane active\" id=\"privacy\" role=\"tabpanel\">\r\n\r\n                    <div class=\"card\">\r\n                        <div class=\"card-header\">\r\n                            <div class=\"mt-5 text-center\">\r\n                        </div>\r\n                            <div class=\"card-actions float-right\">\r\n                              \r\n                            </div>\r\n                            <h5 class=\"card-title mb-0\">Privacy</h5>\r\n                        </div>\r\n                    \r\n                        \r\n                        <div class=\"card-body\">\r\n                            <mat-slide-toggle [(ngModel)]=\"isChecked\">Show me in search</mat-slide-toggle>\r\n                            <form (ngSubmit)=\"updatePrivacy()\" #PrivacyForm=\"ngForm\">\r\n                                \r\n                            <label class=\"labels\">Who can see my experience?</label>\r\n                                                \r\n                            <select id=\"experienceSetting\" name=\"experienceSetting\" [(ngModel)]=\"privacy.experienceSetting\"\r\n                    class=\"form-control\">\r\n                    <option *ngFor=\"let types of privacySetting\" [value]=\"types.type\">\r\n                    {{types.type}}\r\n                    </option>\r\n                    </select>\r\n                           <label class=\"labels\">Who can see my education?</label>\r\n                            \r\n                                                <select id=\"educationSetting\"name=\"educationSetting\" [(ngModel)]=\"privacy.educationSetting\"\r\n                                class=\"form-control\">\r\n                        <option *ngFor=\"let types of privacySetting\" [value]=\"types.type\">\r\n                            {{types.type}}\r\n                        </option>\r\n                        </select>\r\n\r\n                    \r\n                    <label class=\"labels\">Who can see my skills?</label>\r\n                                                \r\n                        <select id=\"skillSetting\" name=\"skillSetting\" [(ngModel)]=\"privacy.skillSetting\"\r\n                    class=\"form-control\">\r\n                    <option *ngFor=\"let types of privacySetting\" [value]=\"types.type\">\r\n                    {{types.type}}\r\n                    </option>\r\n                    </select>\r\n                 \r\n                    <div class=\"mt-5 text-center\"><span><button class=\"btn btn-primary profile-button\"  type=\"submit\">Save Settings</button></span>\r\n                        <span *ngIf=\"notificationP\" class=\"elementToFadeInAndOut\">\r\n                            <i class=\"fas fa-check-circle {{notificationP.class}}\"></i>\r\n                            {{notificationP.message}}\r\n                        </span>\r\n                    \r\n                    </div>\r\n\r\n                          \r\n                         \r\n                </form>\r\n                        </div>\r\n                    \r\n                    </div>\r\n\r\n                    \r\n\r\n                </div>\r\n\r\n\r\n               \r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n</div>","import { ContactService } from '../services/contact/contact.service';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\n\r\n@Component({\r\n  selector: 'app-user',\r\n  templateUrl: './user.component.html',\r\n  styleUrls: ['./user.component.css']\r\n})\r\nexport class UserComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n}\r\n","<p>user works!</p>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-forbidden',\r\n  templateUrl: './forbidden.component.html',\r\n  styleUrls: ['./forbidden.component.css']\r\n})\r\nexport class ForbiddenComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n      \r\n  }\r\n\r\n}\r\n","<div class=\"illustration\">\r\n    <div class=\"gandalf-body\">\r\n            <div class=\"gandalf-moustache\"></div>\r\n        <div class=\"gandalf-beard\"></div>\r\n    </div>\r\n    <div class=\"gandalf-feet\"></div>\r\n    <div class=\"gandalf-hand-left\"></div>\r\n    <div class=\"gandalf-hand-right\"></div>\r\n    <div class=\"sword\"></div>\r\n    <div class=\"spear\"></div>\r\n    <div class=\"spear-head\"></div>\r\n    <div class=\"message\">\r\n    <h2>You Shall Not Pass</h2>\r\n    <p>403 Forbidden</p>\r\n    </div>\r\n</div>","  \r\nexport class privacy{\r\n    constructor(\r\n        public id: number,\r\n        public userId: number,\r\n        public educationSetting: string,\r\n        public experienceSetting: string,\r\n        public skillSetting: string,\r\n        public hideFromSearch:boolean,\r\n    ) {  }\r\n}","import { ProfileService } from 'src/app/services/profile/profile.service';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport {\r\n  MatSnackBar,\r\n  MatSnackBarHorizontalPosition,\r\n  MatSnackBarVerticalPosition,\r\n} from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\nimport { DialogAddProfileComponent } from '../profile/dialog-add-profile/dialog-add-profile.component';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { User } from '../classes/Profile/User';\r\nimport { UserService } from '../services/user.service';\r\n\r\n@Component({\r\n  selector: 'app-registration',\r\n  templateUrl: './registration.component.html',\r\n  styleUrls: ['./registration.component.css']\r\n})\r\nexport class RegistrationComponent implements OnInit {\r\n\r\n  departments: Object[];\r\n  fontysLocations: Object[];\r\n\r\n  jobType = [\r\n    {name: \"Teacher\"},\r\n    {name: \"Student\"},\r\n    {name: \"FontysStaff\"}\r\n  ]\r\n  newAddressToAdd: {};\r\n  newUser:{};\r\n  foundUser: User;\r\n  token:string;\r\n  loggedIn:boolean;\r\n  isLoginError : boolean = false;\r\n  user = new User(3);\r\n  \r\n  constructor(private profileService: ProfileService,\r\n    private _snackBar: MatSnackBar,\r\n    private router: Router,\r\n    public dialog: MatDialog,\r\n    private service: UserService) { }\r\n\r\n    public inputValidator(event: any) {\r\n      //console.log(event.target.value);\r\n      const pattern = /^[a-zA-Z]*$/;   \r\n      //let inputChar = String.fromCharCode(event.charCode)\r\n      if (!pattern.test(event.target.value)) {\r\n        event.target.value = event.target.value.replace(/[^a-zA-Z]/g, \"\");\r\n        // invalid character, prevent input\r\n  \r\n      }\r\n    }\r\n\r\n  onSubmitRegistration(data){\r\n    console.log(data);\r\n    // this.newAddressToAdd = {\r\n    //   \"streetName\": data.streetName,\r\n    //   \"houseNumber\": data.houseNr,\r\n    //   \"city\": data.city,\r\n    //   \"zipCode\": data.zipcode\r\n    // }\r\n    // this.profileService.addAddress(<JSON>this.newAddressToAdd)\r\n    //   .subscribe(\r\n        // newAddress => {\r\n        //   {\r\n            this.newUser ={\r\n              \"departmentId\": data.department,\r\n              \"email\": data.email,\r\n              \"firstName\": data.firstName,\r\n              \"img\": \"\",\r\n              \"lastName\": data.lastName,\r\n              \"locationId\": data.fontysLocation,\r\n              \"password\": data.password,\r\n              \"userNumber\": data.userNumber,\r\n              \"userType\": data.employementType\r\n            }\r\n            this.profileService.addNewUser(<JSON>this.newUser).subscribe(response=>{\r\n              this._snackBar.open('Congratulations, You are now FontysIN user', 'End now', {\r\n                duration: 2000,\r\n              });\r\n              \r\n              // this.router.navigate(['']),\r\n              this.foundUser = <User>response;\r\n              console.log(this.foundUser);\r\n\r\n              this.login(data.email, data.password);\r\n\r\n              \r\n            },\r\n            (error: Response) => {\r\n              if(error.status === 409){\r\n                  this._snackBar.open('This user already exists', 'End now', {\r\n                    duration: 3000,\r\n                  });\r\n                }\r\n                else{\r\n                  this._snackBar.open('Wrong data provided', 'End now', {\r\n                    duration: 3000,\r\n                  });\r\n                } \r\n            })\r\n  }\r\n  login(email, password){\r\n    this.token = btoa(email+':'+password);\r\n      this.service.login(email, password)\r\n      .subscribe(\r\n        (res: any) => {\r\n          console.log(this.token);\r\n          this.user = <User>res;\r\n        localStorage.setItem('userToken', this.token);\r\n        localStorage.setItem('userId', this.user.id.toString());\r\n        \r\n        // location.reload();\r\n        console.log(\"testing loging -----------------\");\r\n        console.log(this.user);\r\n        this.router.navigate(['posts']);\r\n        window.location.href = '/posts';\r\n        // this.delay();\r\n        },\r\n        (error: Response) => {\r\n          if(error.status === 404){\r\n            console.log(\"not found\");\r\n            this.isLoginError = true;\r\n          }\r\n        }\r\n    );\r\n  }\r\n    \r\n  ngOnInit(): void {\r\n    this.profileService.getFontysLocations().subscribe(response=>{\r\n      this.fontysLocations = <Object[]>response;\r\n      console.log(this.fontysLocations);\r\n    })\r\n\r\n    this.profileService.getFontysDepartments().subscribe(response=>{\r\n      this.departments = <Object[]>response;\r\n      console.log(this.departments);\r\n    })\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n    \r\n   \r\n    <form \r\n     #userData=\"ngForm\" \r\n     class=\"text-center\"\r\n     (ngSubmit)=\"onSubmitRegistration(userData.value)\">  \r\n     <h1> Register </h1><br>  \r\n     <mat-divider></mat-divider>\r\n    <div class=\"row\">\r\n        <div class=\"col\">\r\n            <mat-form-field class=\"input-full-width\">\r\n                <!-- <input required matInput \r\n                type=\"text\" \r\n                name=\"firstName\" \r\n                ngModel \r\n                placeholder=\"First Name\">  -->\r\n\r\n                <input matInput \r\n                    required\r\n                    type=\"text\" \r\n                    [(ngModel)]=\"userData.firstName\" \r\n                    name=\"firstName\" \r\n                    placeholder=\"First Name\" \r\n                 \r\n                    #firstName=\"ngModel\" \r\n                    pattern=\"[a-zA-Z]+\" ng-pattern-restrict />\r\n                    <div *ngIf=\"firstName.invalid && (userData.submitted || firstName.touched)\" class=\"alert alert-danger\">\r\n                    <div *ngIf=\"firstName.errors.required\"> Last Name is required. </div>\r\n                    <div *ngIf=\"firstName.errors.pattern\"> Can only contain Alphabets</div>\r\n                    </div>\r\n            </mat-form-field>\r\n\r\n            <mat-form-field class=\"input-full-width\">\r\n            <input required matInput \r\n                type=\"text\" \r\n                [(ngModel)]=\"userData.lastName\" \r\n                name=\"lastName\" \r\n                placeholder=\"Last Name\"  \r\n            \r\n                #lastName=\"ngModel\" \r\n                pattern=\"[a-zA-Z]+\" ng-pattern-restrict />\r\n                <div *ngIf=\"lastName.invalid && (userData.submitted || lastName.touched)\" class=\"alert alert-danger\">\r\n                    <div *ngIf=\"lastName.errors.required\"> Last Name is required. </div>\r\n                    <div *ngIf=\"lastName.errors.pattern\"> Can only contain Alphabets</div>\r\n                    </div>\r\n            </mat-form-field>\r\n\r\n            <mat-form-field class=\"input-full-width\">     \r\n                <mat-select required name=\"employementType\" ngModel>\r\n                    <mat-option value=\"\" disabled>User Type </mat-option>\r\n                    <mat-option *ngFor = \"let l of jobType\" [value]=\"l.name\">\r\n                        {{l.name}}\r\n                    </mat-option>\r\n                </mat-select>\r\n            </mat-form-field>  \r\n        \r\n\r\n            <mat-form-field class=\"input-full-width\">     \r\n            <mat-select required name=\"fontysLocation\" ngModel>\r\n                <mat-option value=\"\" disabled>Fontys Location </mat-option>\r\n                <mat-option *ngFor = \"let l of fontysLocations\" [value]=\"l.id\">\r\n                    {{l.city}}\r\n                </mat-option>\r\n            </mat-select>\r\n            </mat-form-field> \r\n\r\n            <mat-form-field class=\"input-full-width\">\r\n                <mat-select required name=\"department\" ngModel>\r\n                    <mat-option value=\"\" disabled>Department </mat-option>\r\n                    <mat-option *ngFor = \"let l of departments\" [value]=\"l.id\">\r\n                        {{l.name}}\r\n                    </mat-option>\r\n                </mat-select>\r\n            </mat-form-field>\r\n            \r\n        </div>\r\n        <div class=\"col\">\r\n            <mat-form-field class=\"input-full-width\">\r\n                <input required matInput \r\n                    type=\"text\" \r\n                    name=\"userNumber\" \r\n                    ngModel \r\n                    placeholder=\"PCN\"> \r\n            </mat-form-field>\r\n            <mat-form-field class=\"input-full-width\">\r\n                <!-- <input required matInput \r\n                    type=\"email\" \r\n                    name=\"email\" \r\n                    ngModel \r\n                    placeholder=\"Email\">  -->\r\n                    <input required matInput \r\n                        type=\"text\" \r\n                        [(ngModel)]=\"userData.email\" \r\n                        name=\"email\" \r\n                        placeholder=\"Email\"  \r\n                       \r\n                        #email=\"ngModel\" \r\n\r\n                        pattern=\"^\\w+([\\.-]?\\w+)*@([student|staff]+)*\\.([fontys]+)*\\.([nl]+)+$\">\r\n                        <div class=\"alert alert-danger\" [hidden]=\"email.valid || email.untouched\">\r\n                            <div  *ngIf=\"email.errors && email.errors.required\">\r\n                                Email is required\r\n                            </div>\r\n                            <div  *ngIf=\"email.errors && email.errors.pattern\">\r\n                                Email is invalid\r\n                            </div>\r\n                        </div>\r\n\r\n                        <!-- <div *ngIf=\"email.invalid && (userData.submitted || email.touched)\" class=\"alert alert-danger\">\r\n\r\n                            <div *ngIf=\"email.errors.required\"> Last Name is required. </div>\r\n                            <div *ngIf=\"email.includes('@')\"> Email is not correct. </div>\r\n                    </div> -->\r\n                    \r\n            </mat-form-field>\r\n            <mat-form-field class=\"form-group input-full-width\"> \r\n                <input matInput \r\n                    type=\"password\" \r\n                    [(ngModel)]=\"userData.password\" \r\n                    name=\"password\" \r\n                    placeholder=\"Password\" \r\n                    class=\"form-control\" \r\n                    required\r\n                    #password=\"ngModel\" \r\n                    pattern=\"(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}\" />\r\n                <div *ngIf=\"password.invalid && (userData.submitted || password.touched)\" class=\"alert alert-danger\">\r\n                <div *ngIf=\"password.errors.required\"> Password is required. </div>\r\n                <div *ngIf=\"password.errors.pattern\"> Must contain at least one number and one uppercase and lowercase letter, and at least 8 or more characters.</div>\r\n                </div>\r\n            </mat-form-field>\r\n        \r\n            <mat-form-field class=\"form-group input-full-width\">\r\n                <input matInput \r\n                    type=\"password\" \r\n                    [(ngModel)]=\"userData.confirmpassword\" \r\n                    name=\"confirmpassword\" \r\n                    placeholder=\"Confirm Password\" \r\n                    class=\"form-control\" \r\n                    required \r\n                    #confirmpassword=\"ngModel\" \r\n                    pattern=\"{{ password.value }}\" />\r\n                <div *ngIf=\" confirmpassword.invalid && (userData.submitted || confirmpassword.touched)\" class=\"alert alert-danger\">\r\n                <div *ngIf=\"confirmpassword.errors.required\"> Confirm password is required. </div>\r\n                <div *ngIf=\"confirmpassword.errors.pattern\"> Password & Confirm Password does not match.</div>\r\n                </div>\r\n            </mat-form-field> \r\n\r\n\r\n           \r\n        </div>\r\n    </div>\r\n        <button \r\n        mdbBtn \r\n        type=\"submit\"  \r\n        rounded=\"true\" \r\n        id=\"submitButton\" \r\n        [disabled]=\"!userData.valid\"> submit\r\n    </button>  \r\n    <a id=\"link\" href=\"#\">Already a member??</a>\r\n</form>\r\n        \r\n\r\n</div>\r\n\r\n\r\n","import { PostsService} from '../services/posts.service';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { User } from '../classes/Profile/User';\r\nimport { ProfileService } from '../services/profile/profile.service';\r\nimport { FormControl, Validators } from '@angular/forms';\r\nimport { PostValidator} from './post.validator';\r\nimport { UserService} from '../services/user.service'\r\n\r\nexport interface Post {\r\n  content: string;\r\n  date: string;\r\n  id: number;\r\n  userId: number;\r\n  image: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-newsfeed',\r\n  templateUrl: './newsfeed.component.html',\r\n  styleUrls: ['./newsfeed.component.css']\r\n})\r\nexport class NewsfeedComponent implements OnInit {\r\n\r\n  form = new FormGroup({\r\n    postText: new FormControl('', [Validators.required, PostValidator.cannotContainSpace]),\r\n    \r\n    \r\n   });\r\n\r\n  constructor(private postService: PostsService, private profileService: ProfileService,private formBuilder: FormBuilder, private userService : UserService) { }\r\n\r\n  \r\n  userID = this.userService.getUserIdOfLoggedIn();\r\n  data = {};\r\n  content : String;\r\n  public user : User;\r\n  allposts : Post[];\r\n  \r\n  \r\n  createPost() {\r\n    const formData = new FormData();\r\n    formData.append('file', this.uploadForm.get('profile').value);\r\n    \r\n   \r\n\r\n   if(this.uploadForm.get('profile').value.name != null){\r\n    this.postService.uploadPicture(this.userId, formData).subscribe((data)=>\r\n    { \r\n        this.postUrl =<string> data;\r\n        console.log(\"data\");\r\n        console.log(this.postUrl);\r\n    });\r\n    this.data = {\r\n      \"content\": this.content,\r\n      \"id\": 5,\r\n      \"userId\": this.userID,\r\n      \"image\": \"assets/\"+this.userId+this.uploadForm.get('profile').value.name\r\n      };\r\n   } else {\r\n    this.data = {\r\n      \"content\": this.content,\r\n      \"id\": 5,\r\n      \"userId\": this.userID,\r\n      \"image\": \"\"\r\n      };\r\n   }\r\n    this.postService.newPost(<JSON>this.data);\r\n    console.log(this.data);\r\n    window.location.reload();\r\n  }\r\n\r\n  deletePost(id){\r\n    this.postService.deletePost(id);\r\n    window.location.reload()\r\n  }\r\n\r\n\r\n  userId : number;\r\n  postUrl : string;\r\n  foundUser: User;\r\n  uploadForm: FormGroup;\r\n\r\n\r\n  onFileSelect(event) {\r\n    if (event.target.files.length > 0) {\r\n      const file = event.target.files[0];\r\n      this.uploadForm.get('profile').setValue(file);\r\n\r\n      \r\n      var reader = new FileReader();\r\n      reader.onload = (event: any) => {\r\n        this.postUrl = event.target.result;\r\n      }\r\n      reader.readAsDataURL(event.target.files[0]);\r\n    }\r\n    \r\n  }\r\n  \r\n  lenImg(){\r\n    if(this.postUrl?.length >0){\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  closeImg(){\r\n    this.postUrl = \"\";\r\n  }\r\n  \r\n\r\n\r\n\r\n\r\n\r\n\r\n  ngOnInit(): void {\r\n  \r\n    this.userId = parseInt(localStorage.getItem(\"userId\"));\r\n    this.uploadForm = this.formBuilder.group({\r\n      profile: ['']\r\n    });\r\n    this.postService.getNewsfeed(this.userID)\r\n     .subscribe((data)=>{\r\n     console.log(data);\r\n      this.allposts = <Post[]> data;\r\n      console.log(\"posts\");\r\n    console.log(this.allposts);\r\n   });\r\n   \r\n\r\n  }\r\n  \r\n\r\n}\r\n","<div class=\"container\">\r\n    <br />\r\n    <br />\r\n    <br />\r\n    <br />\r\n\r\n    <div id=\"creatPostBlock\">\r\n        <form name=\"form\" [formGroup]=\"form\" (ngSubmit)=\"form.valid\">\r\n            <div class=\"form-group\">\r\n                \r\n                <textarea [(ngModel)]=\"content\" placeholder=\"Your awesome post...\" id=\"newPostText\" formControlName=\"postText\" [ngClass]=\"{'is-invalid':form.get('postText').touched && form.get('postText').invalid}\" required ></textarea> <br />\r\n       \r\n                <div class=\"invalid-feedback\">\r\n                    <div>You need to write something first</div>\r\n                </div>\r\n            </div>\r\n            <button (click)=\"createPost()\" class=\"postBtn\" [disabled]=\"!form.valid\">Post</button>\r\n            \r\n        </form>\r\n        \r\n\r\n        <form [formGroup]=\"uploadForm\" >\r\n            \r\n          \r\n            <div>\r\n                <input style=\"display: none;\" type=\"file\" name=\"profile\" (change)=\"onFileSelect($event)\" #selectPicture />\r\n            </div>\r\n            <div class=\"buttons\">\r\n                <button class=\"uploadBtn\" type=\"button\" rounded=\"true\" (click)=\"selectPicture.click()\"></button>\r\n                \r\n            </div>\r\n            <br><br>\r\n            <div style=\"text-align: center;\">\r\n                <div *ngIf=\"lenImg()\"> <a style=\"float: right;\" (click)=\"closeImg()\">x</a></div>\r\n            <img src=\"{{postUrl}}\" id=\"post-image-select\">\r\n            \r\n            </div>\r\n            \r\n        </form>\r\n        \r\n        \r\n        <br />\r\n        <br />\r\n    </div>\r\n\r\n    <hr />\r\n    <br />\r\n    <br />\r\n    <br />\r\n</div>\r\n\r\n<div class=\"container\">\r\n    <div *ngFor=\"let p of allposts \">\r\n        <app-post [id]=\"p.id\" [post]=\"p\"></app-post>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { take } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-not-found',\r\n  templateUrl: './not-found.component.html',\r\n  styleUrls: ['./not-found.component.css']\r\n})\r\nexport class NotFoundComponent implements OnInit {\r\n\r\n  path: string;\r\n\r\n  constructor(private route: ActivatedRoute) {}\r\n\r\n  ngOnInit() {\r\n    this.route.data.pipe(take(1))\r\n      .subscribe((data: { path: string }) => {\r\n        this.path = data.path;\r\n      });\r\n  }\r\n\r\n}\r\n","<div class=\"face\">\r\n\t<div class=\"band\">\r\n\t\t<div class=\"red\"></div>\r\n\t\t<div class=\"white\"></div>\r\n\t\t<div class=\"blue\"></div>\r\n\t</div>\r\n\t<div class=\"eyes\"></div>\r\n\t<div class=\"dimples\"></div>\r\n\t<div class=\"mouth\"></div>\r\n</div>\r\n\r\n<h1>Oops! You are lost!</h1>\r\n<h2>The page you are looking for does not exist</h2>","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { DatePipe } from '@angular/common'\r\nimport * as moment from 'moment';\r\n\r\n@Pipe({\r\n    name: 'dateAgo',\r\n    pure: true\r\n})\r\nexport class DateAgoPipe implements PipeTransform {\r\n\r\n    transform(value: any, args?: any): any {\r\n        console.log(\"VALUE \" + value);\r\n\r\n        if (value) {\r\n            const seconds = Math.floor((+new Date() - +new Date(value)) / 1000);\r\n            if(seconds > 86400) { // bigger than a day\r\n                // value = \r\n                // value = new Date().toISOString().slice(0,10);\r\n                // value = moment(value, \"MM-DD-YYYY\");\r\n                value = moment(value).format('ll');\r\n\r\n                return value;\r\n            }\r\n            if (seconds < 29) // less than 30 seconds ago will show as 'Just now'\r\n                return 'Just now';\r\n            const intervals = {\r\n                'year': 31536000,\r\n                'month': 2592000,\r\n                'week': 604800,\r\n                'day': 86400,\r\n                'hour': 3600,\r\n                'minute': 60,\r\n                'second': 1\r\n            };\r\n            let counter;\r\n            for (const i in intervals) {\r\n                counter = Math.floor(seconds / intervals[i]);\r\n                if (counter > 0) \r\n                    if (counter === 1) {\r\n                        return counter + ' ' + i + ' ago'; // singular (1 day ago)\r\n                    } else {\r\n                        return counter + ' ' + i + 's ago'; // plural (2 days ago)\r\n                    }\r\n                \r\n\r\n\r\n            }\r\n        }\r\n        return value;\r\n    }\r\n\r\n}\r\n","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { ProfileService } from 'src/app/services/profile/profile.service';\r\nimport {\r\n  MatSnackBar,\r\n  MatSnackBarHorizontalPosition,\r\n  MatSnackBarVerticalPosition,\r\n} from '@angular/material/snack-bar';\r\n\r\n\r\n@Component({\r\n  selector: 'app-dialog-add-education',\r\n  templateUrl: './dialog-add-education.component.html',\r\n  styleUrls: ['./dialog-add-education.component.css']\r\n})\r\nexport class DialogAddEducationComponent implements OnInit {\r\n \r\n  userId: number;\r\n  profileId: number;\r\n  educationToAdd = {};\r\n\r\n  years = [\r\n    {year : 2010},\r\n    {year : 2011},\r\n    {year : 2012},\r\n    {year : 2013},\r\n    {year : 2014},\r\n    {year : 2015}\r\n  ]\r\n\r\n  constructor(private profileService: ProfileService,  \r\n    public dialogRef: MatDialogRef<DialogAddEducationComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    private _snackBar: MatSnackBar) { }\r\n\r\n  CloseDialog(){\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.userId = this.data.User.id;\r\n    this.profileId = this.data.Profile;\r\n\r\n    console.log(this.userId);\r\n    console.log(this.profileId);\r\n  }\r\n\r\n  onSubmitEducation(data)\r\n  {\r\n    \r\n   this.educationToAdd = {\r\n     \"degreeEducation\": data.degreeEducation,\r\n     \"descriptionEducation\": data.descriptionEducation,\r\n     \"endYearEducation\": parseInt(data.startYearEducation),\r\n     \"fieldStudy\": data.fieldStudy,\r\n     \"profileId\": this.profileId,\r\n     \"school\": data.school,\r\n     \"startYearEducation\": parseInt(data.endYearEducation)\r\n     }\r\n     this.profileService.addEducation(<JSON>this.educationToAdd, this.userId, this.profileId)\r\n     this.CloseDialog()\r\n  }\r\n\r\n}\r\n","<h1>Add Education</h1>\r\n<form  class=\"text-center border-silver\" #userEducation=\"ngForm\" (ngSubmit)=\"onSubmitEducation(userEducation.value)\">                               \r\n    <mat-form-field class=\"input-full-width\">\r\n    <input required matInput type=\"text\" name=\"school\" ngModel placeholder=\"School/University\" > \r\n    </mat-form-field>\r\n\r\n    <mat-form-field class=\"input-full-width\">\r\n        <mat-select required name=\"startYearEducation\" ngModel> \r\n            <mat-option value=\"\" disabled>Starting Year </mat-option>\r\n            <mat-option *ngFor = \"let l of years\" [value]=\"l.year\">\r\n                {{l.year}}\r\n            </mat-option>\r\n        </mat-select>\r\n    </mat-form-field>\r\n\r\n    <mat-form-field class=\"input-full-width\">\r\n        <mat-select required name=\"endYearEducation\" ngModel>\r\n            <mat-option value=\"\" disabled>Ending Year </mat-option>\r\n            <mat-option *ngFor = \"let l of years\" [value]=\"l.year\">\r\n                {{l.year}}\r\n            </mat-option>\r\n        </mat-select>\r\n    </mat-form-field>\r\n    <br>\r\n    \r\n\r\n    <mat-form-field class=\"input-full-width\">\r\n    <input required matInput type=\"text\" name=\"degreeEducation\" ngModel placeholder=\"Degree\">\r\n    </mat-form-field>\r\n    <br> \r\n\r\n    <mat-form-field class=\"input-full-width\">\r\n    <input required matInput type=\"text\" name=\"fieldStudy\" ngModel  placeholder=\"Field\"> \r\n    </mat-form-field>\r\n    <br>\r\n\r\n    <mat-form-field class=\"input-full-width\">\r\n    <input required matInput type=\"text\" name=\"descriptionEducation\" ngModel placeholder=\"ex: I have had a very good experience\"> \r\n    </mat-form-field>\r\n    <br>\r\n    <button \r\n        [disabled] = \"!userEducation.valid\"\r\n        mdbBtn \r\n        type=\"submit\"  \r\n        rounded=\"true\" \r\n        id=\"submitButton\"\r\n        id=\"submitButton\" > submit\r\n    </button>\r\n    <button mdbBtn type=\"button\" class=\"closeButton\" (click)=\"CloseDialog()\">Close</button>   \r\n</form>","import { HttpErrorResponse } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ErrorService {\r\n\r\n  \tgetClientMessage(error: Error): string {\r\n\t\treturn error.message ? error.message : error.toString();\r\n  \t}\r\n\r\n  \tgetServerMessage(error: HttpErrorResponse): string {\r\n\t\tlet message = `Error Code: ${error.status},  Message: ${error.error}`\r\n\t\treturn message;\r\n  \t} \r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>home works!</p>\r\n","import { Component, OnInit, Input, Output, EventEmitter} from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-add-information',\r\n  templateUrl: './add-information.component.html',\r\n  styleUrls: ['./add-information.component.css']\r\n})\r\nexport class AddInformationComponent implements OnInit {\r\n\r\n  @Output() passedEvent = new EventEmitter();\r\n  \r\n // parentPosts: any[]=[];\r\n experienceToAdd = {};\r\n\r\n  constructor() { }\r\n\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  PassEvent(){\r\n    this.passedEvent.emit();\r\n   // console.log(this.passedEvent);\r\n\r\n  }\r\n\r\n  onSubmitExperience(data){\r\n    // this.passedEvent = data;\r\n    // this.passedEvent.emit();\r\n    console.log(data);\r\n    this.experienceToAdd = {\r\n      \"company\": data.company,\r\n      \"descriptionExperience\": data.descriptionExperience,\r\n      \"employmentType\":data.employementType,\r\n      \"endDateExperience\": data.endDateExperience,\r\n      \"id\":43,\r\n      \"profileId\":\"\",\r\n      \"locationId\": data.locationId,\r\n      \"startDateExperience\": data.startDateExperience,\r\n      \"title\": data.title\r\n       }\r\n  }\r\n  \r\n}\r\n","<p>add-information works!</p>\r\n\r\n<!-- <button (click) = \"PassEvent()\"> press</button> -->\r\n<button type=\"button\" class=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#myModal\" id=\"buttonAdd\">+</button>\r\n    <!-- The Modal -->\r\n    <div class=\"modal fade\" id=\"myModal\">\r\n        <div class=\"modal-dialog\">\r\n        <div class=\"modal-content\">\r\n        \r\n            <!-- Modal Header -->\r\n            <div class=\"modal-header\">\r\n            <h4 class=\"modal-title\">Add Experience</h4>\r\n            <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\r\n            </div>\r\n            \r\n            <!-- Modal body -->\r\n            <div class=\"modal-body\"> \r\n                <form  class=\"text-center border border-silver\" #userExperience=\"ngForm\" (ngSubmit)=\"onSubmitExperience(userExperience.value)\"> \r\n                    <label ><h3>Company</h3> </label> <br>\r\n                        <input type=\"text\" name=\"company\" ngModel placeholder=\"Company\"> <br>\r\n                   \r\n                   \r\n                    <label ><h3>Title</h3></label> <br>\r\n                    <input type=\"text\" name=\"title\" ngModel placeholder=\"title\"> <br>\r\n                   \r\n                    <!-- <label>\r\n                        Employement Type\r\n                    </label> <br>\r\n                    <input list=\"employementTypes\" name=\"employementType\">\r\n                        <datalist id=\"employementTypes\">\r\n                            <option value=\"FullTime\">\r\n                            <option value=\"PartTime\">\r\n                            <option value=\"FreeLancer\">\r\n                        </datalist>    -->\r\n                        \r\n                       \r\n                    <label ><h3>Job Type</h3></label>  <br>\r\n                        <input type=\"text\" name=\"employementType\" ngModel placeholder=\"title\"> <br>\r\n                    \r\n                    <br>\r\n                    <label> <h3>Location Id </h3> </label> <br>\r\n                    <input type=\"text\" name=\"locationId\" ngModel placeholder=\"locationId\"> <br> \r\n\r\n                    <label> <h3> Start Date </h3></label> <br>\r\n                    <input type=\"date\" name=\"startDateExperience\" ngModel placeholder=\"startDateExperience\"> <br>\r\n                    <label ><h3> End Date </h3></label> <br>\r\n                    <input type=\"date\" name=\"endDateExperience\" ngModel placeholder=\"endDateExperience\"> <br>\r\n                    <label ><h3> description </h3></label> <br>\r\n                    <input type=\"text\" name=\"descriptionExperience\" ngModel placeholder=\"descriptionExperience\"> <br> <br>\r\n                    <button type=\"submit\" id=\"submitButton\" > submit </button>\r\n                    \r\n                </form> \r\n\r\n                <app-profile [expToAdd]=\"experienceToAdd\"></app-profile>\r\n                \r\n            Modal body..\r\n            <!-- <button type=\"button\" (click)=\"CreateExperience()\" class=\"btn btn-dark\" id=\"buttonAdd\">+</button> --> -->\r\n            </div>\r\n\r\n            \r\n            <!-- Modal footer -->\r\n            <div class=\"modal-footer\">\r\n            <button type=\"button\" class=\"btn btn-danger\" data-dismiss=\"modal\">Close</button>\r\n            </div>\r\n            \r\n        </div>\r\n        </div>\r\n        \r\n    </div>","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","// filter.pipe.ts\r\n\r\nimport { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({ name: 'appFilter' })\r\nexport class FilterPipe implements PipeTransform {\r\n  /**\r\n   * Transform\r\n   *\r\n   * @param {any[]} items\r\n   * @param {string} searchText\r\n   * @returns {any[]}\r\n   */\r\n  transform(items: any[], searchText: string): any[] {\r\n    let userId : number = parseInt(localStorage.getItem(\"userId\"));\r\n\r\n    if (!items) {\r\n      return [];\r\n    }\r\n    if (!searchText) {\r\n      return items;\r\n    }\r\n    searchText = searchText.toString().toLowerCase();\r\n    console.log(searchText);\r\n\r\n    return items.filter(it => {\r\n      let user = it.user.id == userId ? it.friend: it.user;\r\n      // if(loggedInUser)\r\n      let fullName = user.firstName + ' ' + user.lastName;\r\n      console.log(fullName);\r\n      return fullName.toString().toLowerCase().indexOf(searchText) >= 0;\r\n    });\r\n  }\r\n}","import { Conversation } from './../classes/Message/Conversation';\r\nimport { MessageService } from './../services/message/message.service';\r\nimport { AfterViewChecked, AfterViewInit, Component, ElementRef, OnInit, ViewChild } from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { StartConversationComponent } from '../start-conversation/start-conversation.component';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { UserService } from '../services/user.service';\r\n\r\n@Component({\r\n  selector: 'app-messages',\r\n  templateUrl: './messages.component.html',\r\n  styleUrls: ['./messages.component.css']\r\n})\r\nexport class MessagesComponent implements OnInit {\r\n\tconversations: Conversation[];\r\n\r\n\tdefaultElevation = 3;\r\n\traisedElevation = 5;    \r\n\tposition = new FormControl('below');\r\n\r\n    @ViewChild('scrollable') private scrollable: ElementRef;\r\n    disableScrollDown = false;\r\n\r\n    // Selected conversation\r\n    selectedConversation: Conversation;\r\n    selectedIndex = -1;\r\n\r\n    userId:number = this.userService.getUserIdOfLoggedIn();\r\n\r\n\t// @ViewChild('scrollable') private scrollable: ElementRef;\r\n\t// private shouldScrollDown: boolean;\r\n\r\n\r\n\r\n\tconstructor(private messageService: MessageService,\r\n        private userService: UserService,\r\n\t\tprivate router: Router,\r\n\t\tprivate route: ActivatedRoute,\r\n\t\tpublic dialog: MatDialog) { }\r\n\t\r\n\t\tngOnInit(): void {\r\n\r\n\t\t\tthis.messageService.getInfo().subscribe(val => {\r\n\t\t\t\tconsole.log(\"Get information: \" + val);\r\n\t\t\t\tthis.getMessages();\r\n\t\t\t})\r\n\t\t\tthis.getMessages();\r\n\t\t}\r\n\t\r\n\t\tgetMessages(){\r\n\t\t\tthis.messageService.getAll()\r\n\t\t\t.subscribe((data) => {\r\n\t\t\t\tthis.conversations = <Conversation[]>data;\r\n\t\r\n\t\t\t\t// Show first conversation\r\n\t\t\t\tif(this.conversations.length > 0) {\r\n\t\t\t\t\tthis.router.navigate([this.conversations[0].id], {relativeTo: this.route});\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\r\n\r\n\tpublic get width() {\r\n\t  return window.innerWidth;\r\n\t}\r\n\r\n    // When a conversation is selected\r\n    onSelected(conversation, index) {\r\n        this.selectedConversation = conversation;\r\n        this.selectedIndex = index;\r\n\r\n        // Redirect and pass the cselected conversation object\r\n        this.router.navigate([conversation.id], {relativeTo: this.route});\r\n\t}\r\n\t\r\n\t// Start new Conversation Dialog\r\n\topenDialogStartConversation(){\r\n\r\n\t\tconst dialogRef = this.dialog.open(StartConversationComponent, {\r\n\t\t\tmaxWidth: '50%',\r\n\t\t\t}); \r\n\t\t\tdialogRef.afterClosed()\r\n\t\t\t.subscribe(res => {\r\n\t\t\t\tthis.ngOnInit()\r\n\r\n                // Show last conversation\r\n                // this.router.navigate([this.conversations[this.conversations.length - 1].id], {relativeTo: this.route});\r\n\t\t\t});\r\n\r\n\t}\r\n\r\n\r\n    // Scroll\r\n    onScroll() {\r\n        let element = this.scrollable.nativeElement;\r\n        let atBottom = element.scrollHeight - element.scrollTop === element.clientHeight;\r\n        if (this.disableScrollDown && atBottom) {\r\n            this.disableScrollDown = false;\r\n        } else {\r\n            this.disableScrollDown = true;\r\n        }\r\n    }\r\n}\r\n","<div class=\"container border my-5\" \r\n\tappMaterialElevation \r\n\t[defaultElevation]=\"defaultElevation\" \r\n\t[raisedElevation]=\"raisedElevation\"\r\n\t[ngClass]=\"{ 'desktop-view': width >= 768, 'mobile-view': width < 768 \r\n}\"\r\n>\r\n\t<div class=\"flex-container\">\r\n\t\t<!-- Messages list -->\r\n\t\t<div class=\"item\">\r\n\t\t\t<div>\r\n\t\t\t\t<div id=\"icons\">\r\n\t\t\t\t\t<mat-icon \r\n\t\t\t\t\t\taria-hidden=\"false\" \r\n\t\t\t\t\t\taria-label=\"Example chat icon\" \r\n\t\t\t\t\t\tmatTooltip=\"Chat with someone new\" \r\n\t\t\t\t\t\t[matTooltipPosition]=\"position.value\"\r\n\t\t\t\t\t\t(click)=\"openDialogStartConversation()\">\r\n\t\t\t\t\t\tchat\r\n\t\t\t\t\t</mat-icon>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<hr class=\"heading-divider\">\r\n            <div class=\"scroll-viewport\" #scrollable (scroll)=\"onScroll()\">  \r\n                <div *ngFor=\"let conversation of conversations; let i = index;\">\r\n                    <div class=\"messages\" (click)=\"onSelected(conversation, i)\" [class.active]=\"selectedIndex == i\">\r\n                        <!-- Loop -->\r\n                        <img class=\"conversation-img\"\r\n                            [src]=\"userId != conversation.firstUser.id ? conversation.firstUser.image : conversation.secondUser.image\"\r\n                            onerror=\"this.src='assets/placeholder.png'\">\r\n                        <div class=\"firend-desc message-item\">\r\n                            <h3 class=\"friend-name\">\r\n                                {{ userId != conversation.firstUser.id ? conversation.firstUser.firstName + ' ' + conversation.firstUser.lastName :   conversation.secondUser.firstName + ' ' + conversation.secondUser.lastName }}\r\n\r\n                            </h3>\r\n                            <h4>Student at Fontys of Applied Sciences</h4>\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n                    <hr class=\"conversation-divider\">\r\n                </div>\r\n            </div>\r\n\r\n\t\t</div>\r\n\r\n  \t\t<mat-divider [vertical]=\"true\"></mat-divider>\r\n\r\n\t\t<!-- Selected message -->\r\n\t\t<div class=\"selected-message\">\r\n            <!-- Selected message -->\r\n            <router-outlet></router-outlet>\r\n\t\t</div>\r\n\t</div>\t\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute, RouterModule, Routes  } from '@angular/router';\r\nimport { PostsService} from '../services/posts.service';\r\n\r\nexport interface Post {\r\n  content: string;\r\n  date: string;\r\n  id: number;\r\n  userId: number;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-update-post',\r\n  templateUrl: './update-post.component.html',\r\n  styleUrls: ['./update-post.component.css']\r\n})\r\nexport class UpdatePostComponent implements OnInit {\r\n\r\n  constructor(private route: ActivatedRoute, private routes: Router,\r\n              private postService: PostsService) { }\r\n\r\n  postId = 0;\r\n  post: Post;\r\n  newContent: String;\r\n  data = {};\r\n\r\n  saveVal(item){\r\n    this.newContent = item.target.value;\r\n  }\r\n\r\n  updatePost(){\r\n    this.data = {\r\n      \"content\": this.newContent,\r\n      \"date\": this.post.date,\r\n      \"id\": this.postId,\r\n      \"userId\": localStorage.getItem(\"userId\")\r\n      };\r\n    this.postService.updatePost(<JSON>this.data,this.postId);\r\n\r\n     this.routes.navigate(['/posts']);\r\n    \r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.postId = parseInt(this.route.snapshot.paramMap.get('id'));\r\n    console.log(this.postId)\r\n    this.postService.getPost(this.postId)\r\n     .subscribe((data)=>{\r\n     console.log(data);\r\n      this.post = <Post>data;\r\n   });\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n    <br>\r\n    <div id=\"creatPostBlock\">\r\n    <textarea #newContent placeholder=\"Your awesome post...\" id = \"newPostText\" (keyup)=\"saveVal($event)\">{{post.content}}</textarea> <br>\r\n    <button (click)=\"updatePost()\" class = \"postBtn\">update</button>\r\n    <br>\r\n    <br>\r\n    \r\n    </div>\r\n    \r\n  \r\n  </div>","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { map } from 'rxjs/operators';\r\nimport { UserService } from './user.service';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DataService {\r\n  http: HttpClient;\r\n\r\n  httpOptions = {\r\n    headers: new HttpHeaders({'Content-Type': 'application/json'})\r\n  }\r\n  readLocalStorageValue() {\r\n    if(localStorage.getItem(\"userToken\") != null){\r\n      this.httpOptions.headers = this.httpOptions.headers.set('Authorization',  localStorage.getItem(\"userToken\"));\r\n    };\r\n}\r\n\r\n  constructor(private url: string, \r\n              http: HttpClient) {\r\n    this.http = http;\r\n    this.readLocalStorageValue();\r\n    console.log(\"http option in data service \" + this.httpOptions);\r\n   }\r\n\r\n  getAll() {\r\n      console.log(\"Get all contacts \" + this.url);\r\n      console.log(this.httpOptions);\r\n    return this.http.get(this.url, this.httpOptions)\r\n      .pipe(\r\n        // transform this response object to an array of js objects\r\n        map(response => response)\r\n      )\r\n  }\r\n\r\n  get(id: number) {\r\n      return this.http.get(this.url + \"/\" + id, this.httpOptions)\r\n        .pipe(\r\n            map(response => response)\r\n        )\r\n    }\r\n\r\n\r\n  create(resource: {}) {\r\n      console.log(resource)\r\n    return this.http.post(this.url, JSON.stringify(resource), this.httpOptions)\r\n      .pipe(\r\n        map(response => response)\r\n      )\r\n  }\r\n\r\n  \r\n  update(resource) {\r\n    return this.http.patch(this.url + '/' + resource.id, JSON.stringify(resource), this.httpOptions)\r\n      .pipe(\r\n        map(response => response)\r\n      )\r\n  }\r\n\r\n\r\n  delete(id) {\r\n    return this.http.delete(this.url + '/' + id, this.httpOptions)\r\n      .pipe(\r\n        map(response => response)\r\n      )\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { User } from '../classes/Profile/User';\r\nimport { UserDTO } from '../classes/Profile/UserDTO';\r\nimport { FilterService } from '../services/filter/filter.service';\r\n\r\n@Component({\r\n  selector: 'app-filter-users',\r\n  templateUrl: './filter-users.component.html',\r\n  styleUrls: ['./filter-users.component.css']\r\n})\r\nexport class FilterUsersComponent implements OnInit {\r\n\r\n  years: Object[] = [\r\n    {value: '1996-1', viewValue: '1996'},\r\n    {value: '1997-2', viewValue: '1997'},\r\n    {value: '1998-3', viewValue: '1998'},\r\n    {value: '1999-4', viewValue: '1999'},\r\n    {value: '2000-5', viewValue: '2000'},\r\n    {value: '2001-6', viewValue: '2001'},\r\n    {value: '2002-7', viewValue: '2002'},\r\n    {value: '2003-8', viewValue: '2003'},\r\n    {value: '2004-9', viewValue: '2004'},\r\n    {value: '2005-10', viewValue: '2005'},\r\n    {value: '2006-11', viewValue: '2006'},\r\n    {value: '2007-12', viewValue: '2007'},\r\n    {value: '2008-13', viewValue: '2008'},\r\n    {value: '2009-14', viewValue: '2009'},\r\n    {value: '2010-15', viewValue: '2010'},\r\n    {value: '2011-16', viewValue: '2011'},\r\n    {value: '2012-17', viewValue: '2012'},\r\n    {value: '2013-18', viewValue: '2013'},\r\n    {value: '2014-19', viewValue: '2014'},\r\n    {value: '2015-20', viewValue: '2015'},\r\n    {value: '2016-21', viewValue: '2016'},\r\n    {value: '2017-22', viewValue: '2017'},\r\n    {value: '2018-23', viewValue: '2018'},\r\n    {value: '2019-24', viewValue: '2019'},\r\n    {value: '2020-25', viewValue: '2020'}\r\n  ];\r\n\r\n  departments: Object[] = [\r\n    {value: '1', viewValue: 'ICT'},\r\n    {value: '2', viewValue: 'Pedagogy'},\r\n    {value: '3', viewValue: 'Buisness'},\r\n    {value: '4', viewValue: 'Economy'}\r\n  ];\r\n\r\n  locations: Object[] = [\r\n    {value: '1', viewValue: 'Eindhoven'},\r\n    {value: '2', viewValue: 'Venlo'},\r\n    {value: '3', viewValue: 'Tilburg'}\r\n  ];\r\n\r\n  StudentDisabled: boolean;\r\n  EmployeeDisabled: boolean;\r\n\r\n  loggedInUser: number = 3;\r\n\r\n  constructor(private filterService: FilterService,\r\n              private route: ActivatedRoute) { \r\n                this.StudentDisabled = false;\r\n                this.EmployeeDisabled = false;\r\n              }\r\n\r\n\r\n  ngOnInit(): void { \r\n    \r\n  }\r\n\r\n  searchText = '';\r\n  TypeSelection: String;\r\n  syearSelection: String;\r\n  wyearSelection: String;\r\n  departmentSelection: String;\r\n  locationSelection: String;\r\n  users: UserDTO[]; \r\n  user: UserDTO;\r\n\r\n  \r\n\r\n  combinedFilter(){\r\n\r\n    console.log(this.searchText);\r\n\r\n    if(this.TypeSelection != null && this.syearSelection != null && this.locationSelection != null && this.departmentSelection != null){\r\n      console.log(\"Student Year\");\r\n      this.filterService.filterUsersByTypeLocationDepartmentStudyYear(this.TypeSelection, this.syearSelection, this.locationSelection, this.departmentSelection).subscribe((data)=>\r\n      {\r\n        this.users = <UserDTO[]>data;\r\n        console.log(this.users);\r\n      });\r\n    }\r\n\r\n    else if(this.TypeSelection != null && this.wyearSelection != null && this.locationSelection != null && this.departmentSelection != null){\r\n         console.log(\"Employee Year\");\r\n        this.filterService.filterUsersByTypeLocationDepartmentWorkYearFontysStaff(this.TypeSelection, this.wyearSelection, this.locationSelection, this.departmentSelection).subscribe((data)=>\r\n        {\r\n          this.users = <UserDTO[]>data;\r\n          console.log(this.users);\r\n        });\r\n    }\r\n\r\n    \r\n    else if(this.searchText != null && this.TypeSelection != null && this.locationSelection != null && this.departmentSelection != null){\r\n      console.log(\"using search box in combining the search\");\r\n      this.filterService.filterUsersByTypeLocationDepartmentName(this.searchText, this.locationSelection, this.departmentSelection, this.TypeSelection).subscribe((data)=>\r\n      {\r\n        this.users = <UserDTO[]>data;\r\n        console.log(this.users);\r\n      });\r\n    }\r\n\r\n    else if(this.TypeSelection != null && this.locationSelection != null && this.departmentSelection != null){\r\n      console.log(\"Users wothout year\");\r\n      this.filterService.filterUsersByTypeLocationDepartment(this.TypeSelection, this.locationSelection, this.departmentSelection).subscribe((data)=>\r\n      {\r\n        this.users = <UserDTO[]>data;\r\n        console.log(this.users);\r\n      });\r\n    } \r\n\r\n  }\r\n\r\n  getUsersByFirstNameChars(){\r\n\r\n    if (this.searchText != null){\r\n      this.filterService.filterUsersByName(this.searchText).subscribe((data)=>\r\n      {\r\n       this.users=<UserDTO[]>data;\r\n        console.log(this.users);     \r\n      });\r\n    }\r\n\r\n  }\r\n  \r\n  getUsersByType(){\r\n\r\n    if (this.TypeSelection == \"Student\"){\r\n\r\n      this.filterService.filterByUserType(this.TypeSelection).subscribe((data)=>\r\n      {\r\n        this.users=<UserDTO[]>data;\r\n        this.StudentDisabled = true;\r\n        this.EmployeeDisabled = false;\r\n        console.log(this.users);      \r\n      });\r\n\r\n    }\r\n\r\n    else{\r\n      this.filterService.filterByUserType(this.TypeSelection).subscribe((data)=>\r\n      {\r\n        this.users=<UserDTO[]>data;\r\n        this.StudentDisabled = false;\r\n        this.EmployeeDisabled = true;\r\n        console.log(this.users);      \r\n      });\r\n    }\r\n    \r\n  }\r\n\r\n\r\n  getUsersByStudyYear(){\r\n    this.filterService.filterUsersByStartStudyYear(this.syearSelection).subscribe((data)=>\r\n    {\r\n     this.users=<UserDTO[]>data;\r\n      console.log(this.users);     \r\n    });\r\n  }\r\n\r\n  getUsersByWorkYear(){\r\n    this.filterService.filterUsersByStartWorkYear(this.wyearSelection).subscribe((data)=>\r\n    {\r\n     this.users=<UserDTO[]>data;\r\n      console.log(this.users);  \r\n    });\r\n  }\r\n\r\n  getUsersByLocation(){\r\n    this.filterService.filterUserByLocation(this.locationSelection).subscribe((data)=>\r\n    {\r\n      this.users=<UserDTO[]>data; \r\n      console.log(this.users);      \r\n    });\r\n  }\r\n\r\n  getUsersByDepartment(){\r\n    this.filterService.filterUserByDepartment(this.departmentSelection).subscribe((data)=>\r\n    {\r\n      this.users=<UserDTO[]>data; \r\n      console.log(this.users);      \r\n    });\r\n  }\r\n\r\n  ClearFilters(){\r\n    window.location.reload();\r\n  }\r\n\r\n  foundDataByUserType(){\r\n    return this.TypeSelection;\r\n  }\r\n\r\n  foundDataByYear(){\r\n    return this.syearSelection;\r\n  }\r\n\r\n  foundDataByDepartment(){\r\n    return this.departmentSelection;\r\n  }\r\n\r\n  foundDataByLocation(){\r\n    return this.locationSelection;\r\n  }\r\n\r\n  foundDataByStartWorkYear(){\r\n    return this.wyearSelection;\r\n  }\r\n\r\n  foundDataByInput(){\r\n    return this.searchText;\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n  <div class=\"row\">\r\n    \r\n    <div class=\"col-sm\">\r\n      <mat-card class=\"filter-card\">\r\n\r\n        <div>\r\n          <button class = \"float-right\" mat-icon-button ria-label=\"\" (click)=\"ClearFilters()\"><mat-icon matTooltip=\"Clear filters\"> cleaning_services </mat-icon></button>\r\n        </div>\r\n\r\n\r\n        <mat-card-header>\r\n          <mat-card-title>Filter Users:</mat-card-title>\r\n        </mat-card-header>\r\n    \r\n        <mat-card-content>\r\n    \r\n          <p>\r\n            <mat-radio-group aria-label=\"Select an option\" [(ngModel)]=\"TypeSelection\" (ngModelChange)=\"getUsersByType()\"> \r\n              <br>\r\n              <label>User Type</label> \r\n              <br>\r\n              <mat-radio-button type=\"radio\" name=\"filter\" value=\"Student\">Student</mat-radio-button>\r\n              <mat-radio-button type=\"radio\" name=\"filter\" value=\"Teacher\">Teacher</mat-radio-button>\r\n              <mat-radio-button type=\"radio\" name=\"filter\" value=\"FontysStaff\">FontysStaff</mat-radio-button>\r\n              <br>\r\n            </mat-radio-group>\r\n          </p>\r\n    \r\n          <br>\r\n          <h4>Start Study Year *Student</h4>\r\n          <mat-form-field appearance=\"fill\">\r\n            <mat-label>Year</mat-label>\r\n            <mat-select [disabled]=\"!StudentDisabled\" ng-model [(ngModel)]=\"syearSelection\" (ngModelChange)=\"foundDataByYear()\">\r\n              <mat-option *ngFor=\"let y of years\" name=\"filter\" [value]=\"y.viewValue\" (click)=\"getUsersByStudyYear()\">\r\n                {{y.viewValue}}\r\n                \r\n              </mat-option>\r\n            </mat-select>\r\n          </mat-form-field>\r\n\r\n          <br>\r\n          <h4>Start Work Year  *Fontys staff</h4>\r\n          <mat-form-field appearance=\"fill\">\r\n            <mat-label>Year</mat-label>\r\n            <mat-select [disabled]=\"!EmployeeDisabled\" ng-model [(ngModel)]=\"wyearSelection\" (ngModelChange)=\"foundDataByStartWorkYear()\">\r\n              <mat-option *ngFor=\"let y of years\" name=\"filter\" [value]=\"y.viewValue\" (click)=\"getUsersByWorkYear()\">\r\n                {{y.viewValue}} \r\n                \r\n              </mat-option>\r\n            </mat-select>\r\n          </mat-form-field>\r\n\r\n          <br>\r\n          <h4>Location</h4>\r\n          <mat-form-field appearance=\"fill\">\r\n            <mat-label>Location</mat-label>\r\n            <mat-select ng-model [(ngModel)]=\"locationSelection\" (ngModelChange)=\"foundDataByLocation()\">\r\n              <mat-option *ngFor=\"let l of locations\" name=\"filter\" [value]=\"l.value\" (click)=\"getUsersByLocation()\">\r\n                {{l.viewValue}}\r\n              </mat-option>\r\n            </mat-select>\r\n          </mat-form-field>\r\n    \r\n          <br>\r\n          <h4>Department</h4>\r\n          <mat-form-field appearance=\"fill\">\r\n            <mat-label>Department</mat-label>\r\n            <mat-select ng-model [(ngModel)]=\"departmentSelection\" (ngModelChange)=\"foundDataByDepartment()\">\r\n              <mat-option *ngFor=\"let d of departments\" [value]=\"d.value\"  name=\"filter\" (click)=\"getUsersByDepartment()\">\r\n                {{d.viewValue}}\r\n              </mat-option>\r\n            </mat-select>\r\n          </mat-form-field>\r\n    \r\n        </mat-card-content>\r\n\r\n        <div class=\"actions\">\r\n\r\n          <!-- mat-mini-fab aria-label=\"Example icon button with a filter list icon\" -->\r\n          <button type=\"button\" class=\"btn btn-primary\" (click)=\"combinedFilter()\">Show Results</button>\r\n\r\n          <!-- mat-mini-fab aria-label=\"Example icon button with a cleaning services icon\" -->\r\n          <!-- <button class = \"float-right\" mat-icon-button ria-label=\"\" (click)=\"ClearFilters()\"><mat-icon matTooltip=\"Clear filters\"> cleaning_services </mat-icon></button> -->\r\n\r\n        </div>\r\n        \r\n      </mat-card>\r\n\r\n    </div>\r\n\r\n    <div class=\"col-sm\">\r\n      <mat-card class=\"found-card\">\r\n\r\n        <form class=\"example-form float-right\">\r\n          <mat-form-field class=\"example-full-width\">\r\n            <mat-label>Search</mat-label>\r\n            <input type=\"text\" matInput placeholder=\"Search\"\r\n            id=\"search-text\" \r\n            aria-describedby=\"search-text\" \r\n            name=\"searchText\"\r\n            [(ngModel)]=\"searchText\" \r\n            autofocus>\r\n          </mat-form-field>\r\n\r\n          <button class=\"float-right\" mat-icon-button ria-label=\"\" (click)=\"getUsersByFirstNameChars()\">\r\n            <mat-icon>search</mat-icon>\r\n          </button>\r\n\r\n        </form>\r\n\r\n        <mat-card-header>\r\n\r\n          <mat-card-title>Users:</mat-card-title>\r\n          \r\n        </mat-card-header>\r\n\r\n\r\n          <mat-list>  \r\n               \r\n              <tr id=\"testUser\"  *ngFor=\"let user of users\">\r\n            \r\n                <td class=\"font-italic\"> \r\n\r\n                  <div [routerLink]=\"['/users', user.id, 'profiles', user.profileId]\" >\r\n\r\n                    <div>\r\n                      <img class=\"userImage\" src=\"{{user.image}}\" onerror=\"this.src='assets/placeholder.png'\"> {{user.firstName}} {{user.lastName}}<br>\r\n                    </div>              \r\n                  </div>\r\n\r\n                  <br>\r\n\r\n                    Fontys University of Applied Sciences\r\n                  \r\n                  <br>\r\n                  <br>\r\n                  <mat-divider></mat-divider>\r\n                  <br>\r\n                </td>\r\n\r\n              </tr>\r\n            \r\n          </mat-list>\r\n\r\n        <mat-card-content>\r\n\r\n\r\n        </mat-card-content>\r\n\r\n      </mat-card> \r\n    </div>\r\n\r\n  </div>\r\n</div>\r\n\r\n\r\n\r\n","import { constructor } from 'process';\r\n\r\nexport class Education{\r\n    constructor( \r\n        public id: number,\r\n        public   profileId: number,\r\n        public  school: string,\r\n        public  startYearEducation: number,\r\n        public  endYearEducation: number,\r\n        public   degreeEducation: string,\r\n        public   fieldStudy: string,\r\n        public   descriptionEducation: string,\r\n      ) {  }\r\n}\r\n\r\n\r\n","import { AbstractControl, ValidationErrors } from \"@angular/forms\";\r\n\r\nexport class PostValidator {\r\n  static cannotContainSpace(control: AbstractControl): ValidationErrors | null {\r\n    if ((control.value as string).replace(/\\s/g, \"\").length == 0) {\r\n      return { cannotContainSpace: true };\r\n    }\r\n\r\n    return null;\r\n  }\r\n}\r\n","import { Component, Inject, InjectionToken } from '@angular/core';\r\nimport { ProfileService } from '../services/profile/profile.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { employmentType } from './../classes/Profile/EmploymentType';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\n\r\nimport { Experience } from './../classes/Profile/Experience';\r\n@Component({\r\n  selector: 'app-update-profile-experience',\r\n  templateUrl: './update-profile-experience.component.html',\r\n  styleUrls: ['./update-profile-experience.component.css']\r\n})\r\nexport class UpdateProfileExperienceComponent  {\r\n  typeOfEmployment: employmentType[] = [\r\n    { type:  'FullTime'}, {type: 'PartTime'}, {type: 'FreeLancer'}];\r\n    years = [\r\n      {year : 2010},\r\n      {year : 2011},\r\n      {year : 2012},\r\n      {year : 2013},\r\n      {year : 2014},\r\n      {year : 2015},\r\n      {year : 2016},\r\n      {year : 2017},\r\n      {year : 2018},\r\n      {year : 2019},\r\n      {year : 2020},\r\n      {year : 2021},\r\n      {year : 2022},\r\n      {year : 2023},\r\n      {year : 2024},\r\n      {year : 2025},\r\n      \r\n  \r\n    ]\r\n  id: number;\r\n  notification = null; \r\n  constructor( private service: ProfileService,  public dialogRef: MatDialogRef<UpdateProfileExperienceComponent>,@Inject(MAT_DIALOG_DATA) public data: any) { }\r\n  experience = new Experience(1, 1, \"Kassa medewerker\", \"Shell\", \"Fulltime\", \"Idk\", 1999, 2000,  \"Working at gas station\" )\r\n  ngOnInit(): void {\r\n\r\n    this.id = this.data.experience.id;\r\n    \r\n    this.service.GetOneExperience(this.id)\r\n    .subscribe((data)=>{\r\n      console.log(data);\r\n     this.experience = <Experience>data;\r\n    });\r\n  }\r\n\r\n  updateExperience(){\r\n    this.service.updateExperience(this.experience, this.id).subscribe(\r\n      (res: any) => {\r\n         console.log(\"updated\");\r\n      });\r\n      this.dialogRef.close();\r\n  }\r\n\r\n}\r\n","\r\n<div class=\"container h-100 d-flex justify-content-center\">\r\n<form (ngSubmit)=\"updateExperience()\" #ExperienceForm=\"ngForm\">\r\n    <div class=\"d-flex justify-content-between align-items-center mb-3\">\r\n        <h2 class=\"text-right\">Edit your Experience</h2>\r\n    </div>\r\n    <div class=\"row mt-3\">\r\n        <div class=\"col-md-12\"><label class=\"labels\">Company</label>\r\n            <input type=\"text\" class=\"form-control\" id=\"company\"\r\n            required\r\n            [(ngModel)]=\"experience.company\" name=\"company\"\r\n            #company=\"ngModel\">\r\n        </div>\r\n        <div class=\"col-md-12\"><label class=\"labels\">Employment type</label>\r\n            <select id=\"employmentType\" name=\"employmentType\" [(ngModel)]=\"experience.employmentType\"\r\n            class=\"form-control\">\r\n      <option *ngFor=\"let types of typeOfEmployment\" [value]=\"types.type\">\r\n        {{types.type}}\r\n      </option>\r\n    </select>\r\n\r\n\r\n    \r\n        </div>\r\n        <div class=\"col-md-12\"><label class=\"labels\">Location</label>\r\n            <input type=\"text\" class=\"form-control\" id=\"location\"\r\n        required\r\n        [(ngModel)]=\"experience.location\" name=\"location\"\r\n        #location=\"ngModel\">\r\n        </div>\r\n    </div>\r\n    <div class=\"row mt-3\">\r\n        <div class=\"col-md-12\"><label class=\"labels\">Start year</label>\r\n            <select id=\"startDateExperience\" name=\"startDateExperience\" [(ngModel)]=\"experience.startDateExperience\"\r\n            class=\"form-control\">\r\n            <option *ngFor=\"let y of years\" [value]=\"y.year\">\r\n            {{y.year}}\r\n            </option>\r\n            </select>\r\n        </div>\r\n        <div class=\"col-md-12\"><label class=\"labels\">End year</label>\r\n            <select id=\"endDateExperience\" name=\"endDateExperience\" [(ngModel)]=\"experience.endDateExperience\"\r\n            class=\"form-control\">\r\n            <option *ngFor=\"let y of years\" [value]=\"y.year\">\r\n            {{y.year}}\r\n            </option>\r\n            </select>\r\n        </div>\r\n        <div class=\"col-md-12\"><label class=\"labels\">Title</label>\r\n            <input type=\"text\" class=\"form-control\" id=\"title\"\r\n            required\r\n            [(ngModel)]=\"experience.title\" name=\"title\"\r\n            #title=\"ngModel\">\r\n        </div>\r\n        <div class=\"col-md-12\"><label class=\"labels\">Description</label>\r\n            <input type=\"text\" class=\"form-control\" id=\"descriptionExperience\"\r\n        required\r\n        [(ngModel)]=\"experience.descriptionExperience\" name=\"descriptionExperience\"\r\n        #descriptionExperience=\"ngModel\">\r\n        </div>\r\n    </div>\r\n    <div class=\"mt-5 text-center\"><button class=\"btn btn-primary profile-button\" type=\"submit\"  [disabled]=\"!ExperienceForm.valid\">Save</button></div>\r\n    \r\n</form>\r\n</div>","import { User } from './../../classes/Profile/User';\r\nimport { Component, Inject, OnInit } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { ProfileService } from 'src/app/services/profile/profile.service';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-dialog-change-dp',\r\n  templateUrl: './dialog-change-dp.component.html',\r\n  styleUrls: ['./dialog-change-dp.component.css']\r\n})\r\nexport class DialogChangeDpComponent implements OnInit {\r\n\r\n  userId : number;\r\n  profileUrl : string;\r\n  foundUser: User;\r\n  uploadForm: FormGroup;\r\n  constructor(private profileService: ProfileService,  \r\n    public dialogRef: MatDialogRef<DialogChangeDpComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    private _snackBar: MatSnackBar,\r\n    private formBuilder: FormBuilder) { }\r\n\r\n    onFileSelect(event) {\r\n      if (event.target.files.length > 0) {\r\n        const file = event.target.files[0];\r\n        this.uploadForm.get('profile').setValue(file);\r\n        \r\n        var reader = new FileReader();\r\n        reader.onload = (event: any) => {\r\n          this.profileUrl = event.target.result;\r\n        }\r\n        reader.readAsDataURL(event.target.files[0]);\r\n      }\r\n    }\r\n    onSubmit() {\r\n      const formData = new FormData();\r\n      formData.append('file', this.uploadForm.get('profile').value);\r\n    \r\n     this.profileService.uploadPicture(this.userId, formData).subscribe((data)=>\r\n     { \r\n         this.profileUrl =<string> data;\r\n         console.log(\"data\");\r\n         console.log(this.profileUrl);\r\n     },\r\n     (error: Response) => {\r\n       console.log(\"Error\");\r\n       console.log(error);\r\n       if(error.status === 409){\r\n           this._snackBar.open('Already Exist!!', 'End now', {\r\n             duration: 1000,\r\n           });\r\n         } \r\n     });\r\n    }\r\n    \r\n    \r\n  ngOnInit(): void {\r\n    // this.userId = this.data.User.id;\r\n    this.userId = parseInt(localStorage.getItem(\"userId\"));\r\n    this.profileService.getUser(this.userId).subscribe(response=>{\r\n      this.foundUser=<User>response;\r\n      this.profileUrl = this.foundUser.image;\r\n      // this.userImage = this.foundUser.userImage;\r\n      console.log(\"Found User\");\r\n      console.log(this.foundUser);\r\n    });\r\n    this.uploadForm = this.formBuilder.group({\r\n      profile: ['']\r\n    });\r\n  }\r\n\r\n}\r\n","\r\n<div class=\"container\">\r\n    <h1>Profile Picture</h1>\r\n    <img width=\"100%\" src=\"{{profileUrl}}\">    \r\n\r\n      <form [formGroup] = \"uploadForm\" (ngSubmit)=\"onSubmit()\">      \r\n        <div>\r\n          <input style=\"display: none;\"  \r\n            type=\"file\"\r\n            name=\"profile\" \r\n            (change)=\"onFileSelect($event)\"\r\n            class=\"select-profile-picture\" \r\n            #selectPicture/>\r\n          </div> \r\n            <div class=\"buttons\">\r\n              <button \r\n                mdbBtn \r\n                type=\"button\"  \r\n                rounded=\"true\" \r\n                (click) = \"selectPicture.click()\">  Change Picture\r\n            </button>\r\n              <button \r\n                mdbBtn \r\n                type=\"submit\"  \r\n                rounded=\"true\" \r\n                id=\"submitButton\"> submit\r\n            </button>\r\n            </div>      \r\n        \r\n       \r\n      </form>\r\n  </div>","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { ProfileService } from 'src/app/services/profile/profile.service';\r\nimport { DialogAddEducationComponent } from '../dialog-add-education/dialog-add-education.component';\r\n\r\n@Component({\r\n  selector: 'app-dialog-add-skill',\r\n  templateUrl: './dialog-add-skill.component.html',\r\n  styleUrls: ['./dialog-add-skill.component.css']\r\n})\r\nexport class DialogAddSkillComponent implements OnInit {\r\n\r\n  userId: number;\r\n  profileId: number;\r\n  skillToAdd: {};\r\n\r\n  constructor(private profileService: ProfileService,  \r\n    public dialogRef: MatDialogRef<DialogAddEducationComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    private _snackBar: MatSnackBar) { }\r\n\r\n    CloseDialog(){\r\n      this.dialogRef.close();\r\n    }\r\n  \r\n    ngOnInit(): void {\r\n      this.userId = this.data.User.id;\r\n      this.profileId = this.data.Profile;\r\n  \r\n      console.log(this.userId);\r\n      console.log(this.profileId);\r\n    }\r\n    onSubmitSkill(data)\r\n    {\r\n      \r\n     this.skillToAdd = {\r\n          \"id\": 17,\r\n          \"name\": data.skill,\r\n          \"profileId\": this.profileId\r\n      }\r\n       this.profileService.addSkill(<JSON>this.skillToAdd, this.userId, this.profileId)\r\n       this.CloseDialog();\r\n    }\r\n\r\n}\r\n","<h1>Add skill</h1>\r\n<form  class=\"text-center border-silver\" #userSkill=\"ngForm\" (ngSubmit)= \"onSubmitSkill(userSkill.value)\"> \r\n    <label ><h3>Skill</h3> </label> \r\n    <mat-form-field class=\"input-full-width\">\r\n        <input matInput type=\"text\" name=\"skill\" ngModel placeholder=\"C#\"> \r\n    </mat-form-field>\r\n    <button \r\n        mdbBtn \r\n        type=\"submit\"  \r\n        rounded=\"true\" \r\n        id=\"submitButton\"\r\n        id=\"submitButton\" > submit\r\n    </button>\r\n    <button mdbBtn type=\"button\" class=\"closeButton\" (click)=\"CloseDialog()\">Close</button>   \r\n</form>","import { Contact } from '../classes/Contact';\r\nimport { DeleteConnectionComponent } from './../delete-connection/delete-connection.component';\r\nimport { ContactService } from './../services/contact/contact.service';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { User } from '../classes/Profile/User';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { FormControl } from '@angular/forms';\r\nimport { UserService } from '../services/user.service';\r\n\r\n@Component({\r\n  selector: 'app-connection',\r\n  templateUrl: './connection.component.html',\r\n  styleUrls: ['./connection.component.css']\r\n})\r\nexport class ConnectionComponent implements OnInit {\r\n  searchText = '';\r\n\r\n  userId:number = this.userService.getUserIdOfLoggedIn();\r\n  contacts: Contact[];\r\n  requests: Contact[];\r\n\r\n  position = new FormControl('below');\r\n\r\n  defaultElevation = 3;\r\n  raisedElevation = 5;\r\n\r\n\r\n\r\n  constructor(private contactService: ContactService,\r\n              private userService: UserService,\r\n              private dialog: MatDialog\r\n    ) { }\r\n\r\n  ngOnInit(): void {\r\n    // GET ACCEPTED CONTACTS\r\n    this.getAcceptedContacts();\r\n\r\n    // GET REQUESTS\r\n    this.getRequests();\r\n \r\n  }\r\n\r\n  // GO TO MESSAGES\r\n  message() {\r\n    // navigate to message with query param username\r\n  }\r\n\r\n\r\n  // GET CONTACTS\r\n  getAcceptedContacts() {\r\n    this.contactService.getAcceptedContacts()\r\n    .subscribe(\r\n      contacts => {\r\n        this.contacts = <Contact[]>contacts;\r\n        console.log(\"All contacts \" + this.contacts);\r\n      }\r\n    )\r\n  }\r\n\r\n\r\n  // GET REQUESTS\r\n  getRequests() {\r\n      this.contactService.getContactRequests()\r\n      .subscribe(requests => {\r\n        this.requests = <Contact[]>requests;\r\n\r\n        console.log(\"Requests \" + this.requests);\r\n      })\r\n  }\r\n\r\n  // ACCEPT REQUEST\r\n  accept(contact: Contact) {\r\n    contact.isAccepted = true;\r\n\r\n    this.contactService.update(contact)\r\n      .subscribe(\r\n        () => {\r\n\r\n          this.getRequests();\r\n          this.getAcceptedContacts();\r\n        }\r\n      )\r\n  }\r\n\r\n\r\n  // REJECT REQUEST\r\n  reject(contact: Contact) {\r\n\r\n    this.contactService.delete(contact.id)\r\n      .subscribe(\r\n        updatedContact => {\r\n          console.log(updatedContact);\r\n\r\n          this.getRequests();\r\n        }\r\n      )\r\n  }\r\n\r\n\r\n  // DELETE DIALOG\r\n  openDialog(connection: User): void {\r\n    const dialogRef = this.dialog.open(DeleteConnectionComponent, {\r\n      maxWidth: '50%',\r\n      data: {connection: connection}\r\n    });\r\n\r\n    dialogRef.afterClosed()\r\n      .subscribe(result => {\r\n        // empty input\r\n        // this.searchForm.reset('');\r\n\r\n        this.getAcceptedContacts();  \r\n    });\r\n  }\r\n\r\n\r\n}","<div class=\"container border my-5\" appMaterialElevation [defaultElevation]=\"defaultElevation\" [raisedElevation]=\"raisedElevation\">\r\n\t<!-- <h1 id=\"heading\">My Connections ({{ contacts?.length }})</h1> -->\r\n\t<mat-tab-group animationDuration=\"1000ms\">\r\n\t\t<mat-tab label=\"My Connections\">\r\n  \r\n\t\t\t<h1 class=\"heading\">My Connections ({{ contacts?.length }})</h1>\r\n\r\n\t\t\t<form class=\"example-form\">\r\n\t\t\t\t<mat-form-field class=\"example-full-width\">\r\n\t\t\t\t  <mat-label>Search</mat-label>\r\n\t\t\t\t  <input type=\"text\" matInput placeholder=\"Connection's Name\"\r\n\t\t\t\t  id=\"search-text\" \r\n\t\t\t\t  aria-describedby=\"search-text\" \r\n\t\t\t\t  [(ngModel)]=\"searchText\" \r\n\t\t\t\t  name=\"searchText\"\r\n\t\t\t\t  autofocus>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t  </form>\r\n\t\t\r\n\t\t\t<hr class=\"headingLine\">\r\n\t\t\t\r\n\t\t\t<div *ngFor=\"let contact of contacts | appFilter: searchText\" class=\"connection\">\r\n\t\t\t\t<img class=\"item\" \r\n\t\t\t\t\tsrc=\"{{userId == contact.friend.id ? contact.user.image: contact.friend.image}}\"\r\n\t\t\t\t\tonerror=\"this.src='assets/placeholder.png'\">\r\n\t\t\t\t<div class=\"item connectionDesc\" \r\n\t\t\t\t\t[routerLink]=\"['/users', userId == contact.friend.id ? contact.user.id: contact.friend.id, 'profiles', userId == contact.friend.id ? contact.user.profileId: contact.friend.profileId]\">\r\n\t\t\t\t\t  <h3 class=\"connectionName\">\r\n\t\t\t\t\t\t{{ userId == contact.friend.id ? contact.user.firstName + ' ' + contact.user.lastName: contact.friend.firstName + ' ' + contact.friend.lastName}} \r\n\t\t\t\t\t  </h3>\r\n                      {{contact.user.profileId}}\r\n                        {{contact.friend.profileId}}\r\n\r\n\t\t\t\t\t  <h4>Student at Fontys of Applied Sciences</h4>\r\n\t\t\t\t\t<hr class=\"dividerConnections\">\r\n\r\n\t\t\t\t</div>\r\n\t\t\t\t<mat-icon \r\n\t\t\t\t  aria-hidden=\"false\" \r\n\t\t\t\t  aria-label=\"Example chat icon\" \r\n\t\t\t\t  [routerLink]=\"['/users', 1, '\r\n\t\t\t\t  messages']\"\r\n\t\t\t\t  matTooltip=\"Go to messages\" \r\n\t\t\t\t[routerLink]=\"['/users', 1, '\r\n\t\t\t\t  messages']\"\r\n\t\t\t\t  [matTooltipPosition]=\"position.value\">\r\n\t\t\t\t  chat\r\n\t\t\t\t</mat-icon>\r\n\t\t\t\t<mat-icon \r\n\t\t\t\t  aria-hidden=\"false\" \r\n\t\t\t\t  aria-label=\"Example remove_circle_outline icon\" \r\n\t\t\t\t  (click)=\"openDialog(contact)\"\r\n\t\t\t\t  matTooltip=\"Delete connection\" \r\n\t\t\t\t  [matTooltipPosition]=\"position.value\">\r\n\t\t\t\t  remove_circle_outline\r\n\t\t\t\t</mat-icon>\r\n\t\t\r\n\t\t\r\n\t\t\t</div>\r\n\t\t  \r\n\t\t</mat-tab>\r\n\t\t<mat-tab>\r\n\t\t  <ng-template mat-tab-label>\r\n\t\t\t<span [matBadge]=\"requests?.length\" matBadgeOverlap=\"false\" matBadgeSize=\"small\">Requests</span>\r\n\r\n\t\t  </ng-template>\r\n\r\n\t\t\t<h1 class=\"heading\">Requests ({{ requests?.length }})</h1>\r\n\t\t\t<hr class=\"headingLine\">\r\n\r\n\t\t\t<div *ngFor=\"let request of requests, let i = index\" class=\"connection\">\r\n\t\t\t\t<img class=\"item\" \r\n\t\t\t\t\tsrc=\"{{userId == request.friend.id ? request.user.image: request.friend.image}}\"\r\n\t\t\t\t\tonerror=\"this.src='assets/placeholder.png'\">\r\n\t\t\t\t<div class=\"item connectionDesc\">\r\n\t\t\t\t  <h3 class=\"connectionName\"\r\n\t\t\t\t\t  [routerLink]=\"['/users', userId == request.friend.id ? request.user.id: request.friend.id, 'profiles', userId == request.friend.id ? request.user.profileId: request.friend.profileId]\">\r\n\t\t\t\t\t{{ userId == request.friend.id ? request.user.firstName + ' ' + request.user.lastName: request.friend.firstName + ' ' + request.friend.lastName}} \r\n\t\t\t\t  </h3>\r\n\t\t\t\t  <h4>Student at Fontys of Applied Sciences</h4>\r\n\t\t\t\t\t<hr class=\"dividerConnections\">\r\n\t\t\r\n\t\t\t\t</div>\r\n\t\t\t\t<!-- Accept -->\r\n\t\t\t\t<mat-icon \r\n\t\t\t\t  aria-hidden=\"false\" \r\n\t\t\t\t  aria-label=\"Example add_circle_outline icon\" \r\n\t\t\t\t  (click)=\"accept(requests[i])\" \r\n\t\t\t\t  matTooltip=\"Accept the request\" \r\n\t\t\t\t  [matTooltipPosition]=\"position.value\">\r\n\t\t\t\t  add_circle_outline\r\n\t\t\t\t</mat-icon>\r\n\t\t\t\t<!-- Reject -->\r\n\t\t\t\t<mat-icon \r\n\t\t\t\t  aria-hidden=\"false\" \r\n\t\t\t\t  aria-label=\"Example cancel icon\" \r\n\t\t\t\t  (click)=\"reject(requests[i])\" \r\n\t\t\t\t  matTooltip=\"Reject the request\" \r\n\t\t\t\t  [matTooltipPosition]=\"position.value\">\r\n\t\t\t\t  cancel\r\n\t\t\t\t</mat-icon>\r\n\t\t\r\n\t\t\t</div>\r\n\t\t</mat-tab>\r\n\t  </mat-tab-group>\r\n\r\n      {{ contacts | json }}\r\n</div>","import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n\r\n  readLocalStorageValue() {\r\n    return localStorage.getItem('userToken');\r\n  }\r\n  constructor(private router: Router) {}\r\n  canActivate(\r\n    next: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\r\n      if(this.readLocalStorageValue() != null){\r\n        return true;\r\n      }else{\r\n        this.router.navigate(['/']);\r\n        return false;\r\n      }\r\n\r\n  }\r\n  \r\n}\r\n","import { Injectable, Injector } from '@angular/core';\r\nimport {\r\n  HttpRequest,\r\n  HttpHandler,\r\n  HttpEvent,\r\n  HttpInterceptor,\r\n  HttpErrorResponse\r\n} from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { retry, catchError } from 'rxjs/operators';\r\nimport { Router } from '@angular/router';\r\nimport { ErrorService } from '../services/errors/error.service';\r\nimport { NotificationService } from '../services/errors/notification.service';\r\n\r\n@Injectable()\r\nexport class ServerErrorInterceptor implements HttpInterceptor {\r\n\tconstructor(private injector: Injector,\r\n\t\t\tprivate router: Router) { }\r\n\r\n\r\n\tintercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n\t\treturn next.handle(request)\r\n\t\t\t.pipe(\r\n\t\t\t\tcatchError((error: HttpErrorResponse) => {\r\n\t\t\t\t\tconst errorService = this.injector.get(ErrorService); // gets the error message\r\n\t\t\t\t\tconst notifier = this.injector.get(NotificationService); // show a pop up on screen\r\n\t\t\t\t\t// Check type of error\r\n\t\t\t\t\tif (error instanceof HttpErrorResponse) { // Server or connection error happened\r\n\t\t\t\t\t\tconsole.log(\"ERROR \" + error.status);\r\n\t\t\t\t\t\tif (!navigator.onLine) {\r\n\t\t\t\t\t\t\tconsole.log(\"offline\")\r\n\t\t\t\t\t\t\t// Handle offline error\r\n\t\t\t\t\t\t\tthis.router.navigate(['offline']);\r\n\t\t\t\t\t\t} \r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tconsole.log(\"server error\")\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tif(error.status == 401) { // Unauthorized\r\n\t\t\t\t\t\t\t\tthis.router.navigate(['login']);\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\telse if(error.status == 403) { // Forbidden\r\n\t\t\t\t\t\t\t\tthis.router.navigate(['forbidden']);\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\telse if (error.status == 404) { // Not found\r\n\t\t\t\t\t\t\t\tthis.router.navigate(['not-found']);\r\n\t\t\t\t\t\t\t}\r\n\t\t\r\n\t\t\t\t\t\t\telse if(error.status == 500) { // Internal server error\r\n\t\t\t\t\t\t\t\tthis.router.navigate(['internal-server-error']);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse if(error.status == 0) { // Unexpected error (Server is down)\r\n\t\t\t\t\t\t\t\tthis.router.navigate(['unexpected-error']);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse { // other\r\n\t\t\t\t\t\t\t\tlet message = errorService.getServerMessage(error);\r\n\t\t\t\t\t\t\t\tnotifier.showError(message);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse { // Handle Client Error (Angular Error, ReferenceError...)     \r\n\t\t\t\t\t\tconsole.log(\"client error\")\r\n\r\n\t\t\t\t\t\tlet message = errorService.getClientMessage(error);\r\n\t\t\t\t\t\tnotifier.showError(message);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn throwError(error.message);\r\n\t\t\t\t}\r\n\t\t\t)\r\n\t\t)\r\n\t}\r\n}","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-offline',\r\n  templateUrl: './offline.component.html',\r\n  styleUrls: ['./offline.component.css']\r\n})\r\nexport class OfflineComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div id=\"container\">\r\n    <img src=\"assets/offline.jpg\" alt=\"\">\r\n    <h1>Slow or No internet connection</h1>\r\n    <p>Please check your internet settings.</p>\r\n</div>","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MessageService } from '../services/message/message.service';\r\n\r\n@Component({\r\n  selector: 'app-delete-conversation',\r\n  templateUrl: './delete-conversation.component.html',\r\n  styleUrls: ['./delete-conversation.component.css']\r\n})\r\nexport class DeleteConversationComponent implements OnInit {\r\n\r\n  constructor(\r\n    private messageService: MessageService,\r\n    public dialogRef: MatDialogRef<DeleteConversationComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any) {\r\n      console.log(data);\r\n    }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  loggedInUser = 1;\r\n\r\n  // delete conversation\r\n  deleteConversation(){\r\n\r\n    this.messageService.deleteConversation(this.loggedInUser, this.data.conversation.id).subscribe();\r\n    console.log(this.loggedInUser + \" \" + this.data.conversation.id + \" \" + \"Deleted :)\");\r\n\r\n    // Close dialog\r\n    this.dialogRef.close();\r\n\r\n  }\r\n\r\n  //close dialog \r\n  noClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n}\r\n","<div id=\"confirm\" mat-dialog-content>\r\n    <p> Do you want to delete this Conversation?</p>\r\n  </div>\r\n  <div mat-dialog-actions>\r\n      <button mat-raised-button cdkFocusInitial (click)=\"deleteConversation()\">Yes</button>\r\n      <button mat-raised-button (click)=\"noClick()\">No</button>  \r\n  </div> ","var map = {\n\t\"./af\": \"K/tc\",\n\t\"./af.js\": \"K/tc\",\n\t\"./ar\": \"jnO4\",\n\t\"./ar-dz\": \"o1bE\",\n\t\"./ar-dz.js\": \"o1bE\",\n\t\"./ar-kw\": \"Qj4J\",\n\t\"./ar-kw.js\": \"Qj4J\",\n\t\"./ar-ly\": \"HP3h\",\n\t\"./ar-ly.js\": \"HP3h\",\n\t\"./ar-ma\": \"CoRJ\",\n\t\"./ar-ma.js\": \"CoRJ\",\n\t\"./ar-sa\": \"gjCT\",\n\t\"./ar-sa.js\": \"gjCT\",\n\t\"./ar-tn\": \"bYM6\",\n\t\"./ar-tn.js\": \"bYM6\",\n\t\"./ar.js\": \"jnO4\",\n\t\"./az\": \"SFxW\",\n\t\"./az.js\": \"SFxW\",\n\t\"./be\": \"H8ED\",\n\t\"./be.js\": \"H8ED\",\n\t\"./bg\": \"hKrs\",\n\t\"./bg.js\": \"hKrs\",\n\t\"./bm\": \"p/rL\",\n\t\"./bm.js\": \"p/rL\",\n\t\"./bn\": \"kEOa\",\n\t\"./bn-bd\": \"loYQ\",\n\t\"./bn-bd.js\": \"loYQ\",\n\t\"./bn.js\": \"kEOa\",\n\t\"./bo\": \"0mo+\",\n\t\"./bo.js\": \"0mo+\",\n\t\"./br\": \"aIdf\",\n\t\"./br.js\": \"aIdf\",\n\t\"./bs\": \"JVSJ\",\n\t\"./bs.js\": \"JVSJ\",\n\t\"./ca\": \"1xZ4\",\n\t\"./ca.js\": \"1xZ4\",\n\t\"./cs\": \"PA2r\",\n\t\"./cs.js\": \"PA2r\",\n\t\"./cv\": \"A+xa\",\n\t\"./cv.js\": \"A+xa\",\n\t\"./cy\": \"l5ep\",\n\t\"./cy.js\": \"l5ep\",\n\t\"./da\": \"DxQv\",\n\t\"./da.js\": \"DxQv\",\n\t\"./de\": \"tGlX\",\n\t\"./de-at\": \"s+uk\",\n\t\"./de-at.js\": \"s+uk\",\n\t\"./de-ch\": \"u3GI\",\n\t\"./de-ch.js\": \"u3GI\",\n\t\"./de.js\": \"tGlX\",\n\t\"./dv\": \"WYrj\",\n\t\"./dv.js\": \"WYrj\",\n\t\"./el\": \"jUeY\",\n\t\"./el.js\": \"jUeY\",\n\t\"./en-au\": \"Dmvi\",\n\t\"./en-au.js\": \"Dmvi\",\n\t\"./en-ca\": \"OIYi\",\n\t\"./en-ca.js\": \"OIYi\",\n\t\"./en-gb\": \"Oaa7\",\n\t\"./en-gb.js\": \"Oaa7\",\n\t\"./en-ie\": \"4dOw\",\n\t\"./en-ie.js\": \"4dOw\",\n\t\"./en-il\": \"czMo\",\n\t\"./en-il.js\": \"czMo\",\n\t\"./en-in\": \"7C5Q\",\n\t\"./en-in.js\": \"7C5Q\",\n\t\"./en-nz\": \"b1Dy\",\n\t\"./en-nz.js\": \"b1Dy\",\n\t\"./en-sg\": \"t+mt\",\n\t\"./en-sg.js\": \"t+mt\",\n\t\"./eo\": \"Zduo\",\n\t\"./eo.js\": \"Zduo\",\n\t\"./es\": \"iYuL\",\n\t\"./es-do\": \"CjzT\",\n\t\"./es-do.js\": \"CjzT\",\n\t\"./es-mx\": \"tbfe\",\n\t\"./es-mx.js\": \"tbfe\",\n\t\"./es-us\": \"Vclq\",\n\t\"./es-us.js\": \"Vclq\",\n\t\"./es.js\": \"iYuL\",\n\t\"./et\": \"7BjC\",\n\t\"./et.js\": \"7BjC\",\n\t\"./eu\": \"D/JM\",\n\t\"./eu.js\": \"D/JM\",\n\t\"./fa\": \"jfSC\",\n\t\"./fa.js\": \"jfSC\",\n\t\"./fi\": \"gekB\",\n\t\"./fi.js\": \"gekB\",\n\t\"./fil\": \"1ppg\",\n\t\"./fil.js\": \"1ppg\",\n\t\"./fo\": \"ByF4\",\n\t\"./fo.js\": \"ByF4\",\n\t\"./fr\": \"nyYc\",\n\t\"./fr-ca\": \"2fjn\",\n\t\"./fr-ca.js\": \"2fjn\",\n\t\"./fr-ch\": \"Dkky\",\n\t\"./fr-ch.js\": \"Dkky\",\n\t\"./fr.js\": \"nyYc\",\n\t\"./fy\": \"cRix\",\n\t\"./fy.js\": \"cRix\",\n\t\"./ga\": \"USCx\",\n\t\"./ga.js\": \"USCx\",\n\t\"./gd\": \"9rRi\",\n\t\"./gd.js\": \"9rRi\",\n\t\"./gl\": \"iEDd\",\n\t\"./gl.js\": \"iEDd\",\n\t\"./gom-deva\": \"qvJo\",\n\t\"./gom-deva.js\": \"qvJo\",\n\t\"./gom-latn\": \"DKr+\",\n\t\"./gom-latn.js\": \"DKr+\",\n\t\"./gu\": \"4MV3\",\n\t\"./gu.js\": \"4MV3\",\n\t\"./he\": \"x6pH\",\n\t\"./he.js\": \"x6pH\",\n\t\"./hi\": \"3E1r\",\n\t\"./hi.js\": \"3E1r\",\n\t\"./hr\": \"S6ln\",\n\t\"./hr.js\": \"S6ln\",\n\t\"./hu\": \"WxRl\",\n\t\"./hu.js\": \"WxRl\",\n\t\"./hy-am\": \"1rYy\",\n\t\"./hy-am.js\": \"1rYy\",\n\t\"./id\": \"UDhR\",\n\t\"./id.js\": \"UDhR\",\n\t\"./is\": \"BVg3\",\n\t\"./is.js\": \"BVg3\",\n\t\"./it\": \"bpih\",\n\t\"./it-ch\": \"bxKX\",\n\t\"./it-ch.js\": \"bxKX\",\n\t\"./it.js\": \"bpih\",\n\t\"./ja\": \"B55N\",\n\t\"./ja.js\": \"B55N\",\n\t\"./jv\": \"tUCv\",\n\t\"./jv.js\": \"tUCv\",\n\t\"./ka\": \"IBtZ\",\n\t\"./ka.js\": \"IBtZ\",\n\t\"./kk\": \"bXm7\",\n\t\"./kk.js\": \"bXm7\",\n\t\"./km\": \"6B0Y\",\n\t\"./km.js\": \"6B0Y\",\n\t\"./kn\": \"PpIw\",\n\t\"./kn.js\": \"PpIw\",\n\t\"./ko\": \"Ivi+\",\n\t\"./ko.js\": \"Ivi+\",\n\t\"./ku\": \"JCF/\",\n\t\"./ku.js\": \"JCF/\",\n\t\"./ky\": \"lgnt\",\n\t\"./ky.js\": \"lgnt\",\n\t\"./lb\": \"RAwQ\",\n\t\"./lb.js\": \"RAwQ\",\n\t\"./lo\": \"sp3z\",\n\t\"./lo.js\": \"sp3z\",\n\t\"./lt\": \"JvlW\",\n\t\"./lt.js\": \"JvlW\",\n\t\"./lv\": \"uXwI\",\n\t\"./lv.js\": \"uXwI\",\n\t\"./me\": \"KTz0\",\n\t\"./me.js\": \"KTz0\",\n\t\"./mi\": \"aIsn\",\n\t\"./mi.js\": \"aIsn\",\n\t\"./mk\": \"aQkU\",\n\t\"./mk.js\": \"aQkU\",\n\t\"./ml\": \"AvvY\",\n\t\"./ml.js\": \"AvvY\",\n\t\"./mn\": \"lYtQ\",\n\t\"./mn.js\": \"lYtQ\",\n\t\"./mr\": \"Ob0Z\",\n\t\"./mr.js\": \"Ob0Z\",\n\t\"./ms\": \"6+QB\",\n\t\"./ms-my\": \"ZAMP\",\n\t\"./ms-my.js\": \"ZAMP\",\n\t\"./ms.js\": \"6+QB\",\n\t\"./mt\": \"G0Uy\",\n\t\"./mt.js\": \"G0Uy\",\n\t\"./my\": \"honF\",\n\t\"./my.js\": \"honF\",\n\t\"./nb\": \"bOMt\",\n\t\"./nb.js\": \"bOMt\",\n\t\"./ne\": \"OjkT\",\n\t\"./ne.js\": \"OjkT\",\n\t\"./nl\": \"+s0g\",\n\t\"./nl-be\": \"2ykv\",\n\t\"./nl-be.js\": \"2ykv\",\n\t\"./nl.js\": \"+s0g\",\n\t\"./nn\": \"uEye\",\n\t\"./nn.js\": \"uEye\",\n\t\"./oc-lnc\": \"Fnuy\",\n\t\"./oc-lnc.js\": \"Fnuy\",\n\t\"./pa-in\": \"8/+R\",\n\t\"./pa-in.js\": \"8/+R\",\n\t\"./pl\": \"jVdC\",\n\t\"./pl.js\": \"jVdC\",\n\t\"./pt\": \"8mBD\",\n\t\"./pt-br\": \"0tRk\",\n\t\"./pt-br.js\": \"0tRk\",\n\t\"./pt.js\": \"8mBD\",\n\t\"./ro\": \"lyxo\",\n\t\"./ro.js\": \"lyxo\",\n\t\"./ru\": \"lXzo\",\n\t\"./ru.js\": \"lXzo\",\n\t\"./sd\": \"Z4QM\",\n\t\"./sd.js\": \"Z4QM\",\n\t\"./se\": \"//9w\",\n\t\"./se.js\": \"//9w\",\n\t\"./si\": \"7aV9\",\n\t\"./si.js\": \"7aV9\",\n\t\"./sk\": \"e+ae\",\n\t\"./sk.js\": \"e+ae\",\n\t\"./sl\": \"gVVK\",\n\t\"./sl.js\": \"gVVK\",\n\t\"./sq\": \"yPMs\",\n\t\"./sq.js\": \"yPMs\",\n\t\"./sr\": \"zx6S\",\n\t\"./sr-cyrl\": \"E+lV\",\n\t\"./sr-cyrl.js\": \"E+lV\",\n\t\"./sr.js\": \"zx6S\",\n\t\"./ss\": \"Ur1D\",\n\t\"./ss.js\": \"Ur1D\",\n\t\"./sv\": \"X709\",\n\t\"./sv.js\": \"X709\",\n\t\"./sw\": \"dNwA\",\n\t\"./sw.js\": \"dNwA\",\n\t\"./ta\": \"PeUW\",\n\t\"./ta.js\": \"PeUW\",\n\t\"./te\": \"XLvN\",\n\t\"./te.js\": \"XLvN\",\n\t\"./tet\": \"V2x9\",\n\t\"./tet.js\": \"V2x9\",\n\t\"./tg\": \"Oxv6\",\n\t\"./tg.js\": \"Oxv6\",\n\t\"./th\": \"EOgW\",\n\t\"./th.js\": \"EOgW\",\n\t\"./tk\": \"Wv91\",\n\t\"./tk.js\": \"Wv91\",\n\t\"./tl-ph\": \"Dzi0\",\n\t\"./tl-ph.js\": \"Dzi0\",\n\t\"./tlh\": \"z3Vd\",\n\t\"./tlh.js\": \"z3Vd\",\n\t\"./tr\": \"DoHr\",\n\t\"./tr.js\": \"DoHr\",\n\t\"./tzl\": \"z1FC\",\n\t\"./tzl.js\": \"z1FC\",\n\t\"./tzm\": \"wQk9\",\n\t\"./tzm-latn\": \"tT3J\",\n\t\"./tzm-latn.js\": \"tT3J\",\n\t\"./tzm.js\": \"wQk9\",\n\t\"./ug-cn\": \"YRex\",\n\t\"./ug-cn.js\": \"YRex\",\n\t\"./uk\": \"raLr\",\n\t\"./uk.js\": \"raLr\",\n\t\"./ur\": \"UpQW\",\n\t\"./ur.js\": \"UpQW\",\n\t\"./uz\": \"Loxo\",\n\t\"./uz-latn\": \"AQ68\",\n\t\"./uz-latn.js\": \"AQ68\",\n\t\"./uz.js\": \"Loxo\",\n\t\"./vi\": \"KSF8\",\n\t\"./vi.js\": \"KSF8\",\n\t\"./x-pseudo\": \"/X5v\",\n\t\"./x-pseudo.js\": \"/X5v\",\n\t\"./yo\": \"fzPg\",\n\t\"./yo.js\": \"fzPg\",\n\t\"./zh-cn\": \"XDpg\",\n\t\"./zh-cn.js\": \"XDpg\",\n\t\"./zh-hk\": \"SatO\",\n\t\"./zh-hk.js\": \"SatO\",\n\t\"./zh-mo\": \"OmwH\",\n\t\"./zh-mo.js\": \"OmwH\",\n\t\"./zh-tw\": \"kOpN\",\n\t\"./zh-tw.js\": \"kOpN\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"RnhZ\";","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'FontyIN-Client';\r\n\r\n  readLocalStorageValue() {\r\n    return localStorage.getItem('userToken');\r\n}\r\nuserIsLogged(){\r\n  if(this.readLocalStorageValue() != null){\r\n   return true;\r\n  }else{\r\n   return false;\r\n  }\r\n}\r\n \r\n\r\n}\r\n","\r\n<app-header  *ngIf=\"userIsLogged()\"></app-header>\r\n\r\n<router-outlet></router-outlet>","import { MessageService } from './../../services/message/message.service';\r\nimport { Conversation } from './../../classes/Message/Conversation';\r\nimport { AfterViewChecked, Component, ElementRef, OnInit, ViewChild } from '@angular/core';\r\nimport { ActivatedRoute, Router, Params } from '@angular/router';\r\nimport { FormControl } from '@angular/forms';\r\nimport * as moment from 'moment';\r\nimport { DeleteConversationComponent } from 'src/app/delete-conversation/delete-conversation.component';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { UserService } from 'src/app/services/user.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-selected-message',\r\n  templateUrl: './selected-message.component.html',\r\n  styleUrls: ['./selected-message.component.css'],\r\n})\r\nexport class SelectedMessageComponent implements OnInit, AfterViewChecked {\r\n\tconversation: Conversation;\r\n\tid: number;\r\n\tcurrentUser;\r\n\tfriend;\r\n\r\n    userId:number = this.userService.getUserIdOfLoggedIn();\r\n\r\n\t@ViewChild('scrollable') private scrollable: ElementRef;\r\n    disableScrollDown = false;\r\n\r\n\r\n\tposition = new FormControl('below');\r\n\r\n\tconstructor(private messageService: MessageService,\r\n        private userService: UserService,\r\n\t\tprivate router: Router,\r\n\t\tprivate route: ActivatedRoute,\r\n\t\tpublic dialog: MatDialog) { }\r\n\r\n  \tngOnInit(): void {\r\n\t\tthis.route.params\r\n\t\t\t.subscribe(\r\n\t\t\t\t(params: Params) => {\r\n\t\t\t\t\tthis.id = +params['conversationId'];\r\n\t\r\n\t\t\t\t\tthis.getConversation();\r\n\t\t\t\t}\r\n\t\t)\t\r\n\t}\r\n\t\r\n\t\t//open dialog for deleting conversation\r\n\t\topenDialogDeleteConversation(conversation: Conversation){\r\n\t\t\tconst dialogRef = this.dialog.open(DeleteConversationComponent, {\r\n\t\t\tmaxWidth: '50%',\r\n\t\t\tdata: {conversation: conversation}\r\n\t\t\t}); \r\n\t\t\tdialogRef.afterClosed()\r\n\t\t\t.subscribe(res => {\r\n\t\t\t\tthis.conversation = null;\r\n\r\n\t\t\t\tthis.messageService.setInfo('Conversation is deleted');\r\n\t\t\t\t\r\n\t\t\t\tthis.router.navigate(['/messages']);\r\n\t\t\t});\r\n\t\r\n\t\t}\r\n\r\n\r\n    ngAfterViewChecked() {\r\n        this.scrollToBottom();\r\n    }\r\n\r\n\t// Format tooltip date as (Nov 19, 2020 2:42 AM)\r\n\tgetTooltipDate(date) {\r\n\t\tdate = moment(date).format('lll');\r\n\t\treturn date;\r\n\t}\r\n\r\n\t// Convert date and time from UTC to local\r\n\tgetLocalDate(date) {\r\n\t\tvar gmtDateTime = moment.utc(date, \"YYYY-MM-DD HH:mm\")\r\n\t\tvar local = gmtDateTime.local().format('YYYY-MMM-DD HH:mm');\r\n\r\n\t\treturn local;\r\n\t}\r\n\r\n\r\n\tgetConversation() {\r\n\t\tthis.messageService.get(this.id)\r\n\t\t\t.subscribe((data) => {\r\n\t\t\t\tthis.conversation = <Conversation>data;\r\n\r\n                // console.log(\"CON \" + this.conversation.firstUser.id + \" \" + this.conversation.secondUser.id)\r\n\r\n                if(this.conversation.messages.length > 0) {\r\n                    // Get users\r\n    \t\t\t\tthis.currentUser = (this.conversation.messages[0].receiver.id == this.userId) ? this.conversation.messages[0].receiver : this.conversation.messages[0].sender;\r\n    \t\t\t\tthis.friend = (this.conversation.messages[0].receiver.id == this.userId) ? this.conversation.messages[0].sender : this.conversation.messages[0].receiver;\r\n                }\r\n                else {\r\n                    this.currentUser = (this.userId == this.conversation.firstUser.id) ? this.conversation.firstUser : this.conversation.secondUser;\r\n                    this.friend = (this.userId == this.conversation.firstUser.id) ? this.conversation.secondUser : this.conversation.firstUser;\r\n                }\r\n\r\n\t\t\t})\r\n\t}\r\n\r\n\r\n    // Scroll\r\n    onScroll() {\r\n        let element = this.scrollable.nativeElement;\r\n        let atBottom = element.scrollHeight - element.scrollTop === element.clientHeight;\r\n        if (this.disableScrollDown && atBottom) {\r\n            this.disableScrollDown = false;\r\n        } else {\r\n            this.disableScrollDown = true;\r\n        }\r\n    }\r\n\r\n\r\n    private scrollToBottom(): void {\r\n        if (this.disableScrollDown) {\r\n            return\r\n        }\r\n        try {\r\n            this.scrollable.nativeElement.scrollTop = this.scrollable.nativeElement.scrollHeight;\r\n        } catch(err) { }\r\n    }\r\n\r\n\r\n\t// Send message\r\n\tsubmit(f) {\r\n\t\tlet newMessage = {\r\n\t\t\tconversationId: this.conversation.id,\r\n\t\t\tsender: this.currentUser,\r\n\t\t\treceiver: this.friend,\r\n\t\t\tcontent: f.value.message\r\n\t\t}\r\n\r\n\t\tthis.messageService.create(newMessage)\r\n\t\t\t.subscribe(() => {\r\n\t\t\t\tthis.getConversation();\r\n\r\n\t\t\t\tf.reset();\r\n\r\n                this.scrollable.nativeElement.scrollTop = this.scrollable.nativeElement.scrollHeight;\r\n\t\t\t});\r\n\t}\r\n\r\n}\r\n","<img class=\"firend-img\"\r\n    [src]=\"friend?.image\"\r\n    onerror=\"this.src='assets/placeholder.png'\">\r\n<mat-icon \r\n        class=\"float-right\"\r\n        aria-hidden=\"false\" \r\n        aria-label=\"Example remove_circle_outline icon\" \r\n        matTooltip=\"Delete chat\" \r\n        [matTooltipPosition]=\"position.value\"\r\n        (click)=\"openDialogDeleteConversation(conversation)\">\r\n        remove_circle_outline\r\n</mat-icon>\r\n\r\n<h3 class=\"friend-name\"> {{ friend?.firstName }} {{ friend?.lastName }}</h3>\r\n<hr>\r\n\r\n<div class=\"scroll-viewport\" #scrollable (scroll)=\"onScroll()\">  \r\n    <!-- Loop over conversation -->\r\n    <div class=\"chat-container\">\r\n        <div *ngFor=\"let message of conversation?.messages\">\r\n            <div class=\"message\">\r\n                <div class=\"sender\">{{message?.sender.firstName}} {{message?.sender.lastName}}\r\n                    <span class=\"time\" \r\n                        [matTooltip]=\"getTooltipDate(getLocalDate(message.dateTime) | slice:0:19)\"\r\n\t\t\t\t\t\t[matTooltipPosition]=\"position.value\">\r\n                        {{ getLocalDate(message.dateTime) | slice:0:19 | dateAgo }}\r\n                    </span>\r\n                </div>\r\n                <div class=\"message-content\">\r\n                        {{message?.content}}\r\n                </div>\r\n            </div>\r\n            <hr class=\"conversation-divider\">\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n\r\n<form class=\"example-form\" #f=\"ngForm\" (ngSubmit)=\"submit(f)\">\r\n    <mat-form-field appearance=\"outline\" class=\"full-width-field\">\r\n        <mat-label>Send a message</mat-label>\r\n        <textarea matInput ngModel name=\"message\" #message=\"ngModel\"></textarea>\r\n    </mat-form-field>\r\n    <button mat-raised-button color=\"accent\" id=\"send-message\" [disabled]=\"!message.value?.trim()\">Send</button>\r\n</form>","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { PostsService} from '../services/posts.service';\r\nimport { Moment } from 'moment';\r\n\r\nexport interface Post {\r\n  content: string;\r\n  date: string;\r\n  id: number;\r\n  userId: number;\r\n}\r\nexport interface Comment {\r\n  content: string;\r\n  date: string;\r\n  id: number;\r\n  userId: number;\r\n  postId: number;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-post-details',\r\n  templateUrl: './post-details.component.html',\r\n  styleUrls: ['./post-details.component.css']\r\n})\r\nexport class PostDetailsComponent implements OnInit {\r\n\r\n  constructor(private route: ActivatedRoute,\r\n              private postService: PostsService) { }\r\n\r\n  postId = 0;\r\n  post: Post; \r\n  comments: Comment[];\r\n  content : String;\r\n  data = {};\r\n  time : Moment;\r\n\r\n  createComment() {\r\n    this.data = {\r\n      \"content\": this.content,\r\n      \"date\": \"2020-10-20\",\r\n      \"id\": 0,\r\n      \"postId\": this.postId,\r\n      \"userId\": 1\r\n      };\r\n    this.postService.newComment(<JSON>this.data);\r\n    window.location.reload()\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.postId = parseInt(this.route.snapshot.paramMap.get('id'));\r\n    console.log(this.postId);\r\n    this.postService.getPost(this.postId)\r\n     .subscribe((data)=>{\r\n     console.log(data);\r\n      this.post = <Post>data;\r\n   });\r\n   this.postService.getCommentsByPostId(this.postId)\r\n   .subscribe((data)=>{\r\n   console.log(data);\r\n    this.comments = <Comment[]>data;\r\n    });\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n    <br><br>\r\n    <br><br>\r\n    <div id=\"creatPostBlock\">\r\n        <p>user id: {{post.userId}}</p>\r\n        <h2>{{post.content}}</h2>\r\n        <p class=\"p-date\">{{post.date}}</p>\r\n        \r\n        <br>\r\n        \r\n    \r\n    \r\n    \r\n    </div>\r\n    <hr>\r\n    <br>\r\n    <br>\r\n  \r\n  </div>\r\n  <div class=\"container\">\r\n    <br>\r\n    <div id=\"creatPostBlock\">\r\n    <textarea [(ngModel)] = \"content\" placeholder=\"Your awesome comment...\" id = \"newPostText\"></textarea> <br>\r\n    <button (click) =\"createComment()\" class = \"postBtn\">Post</button>\r\n    <br><br>\r\n    <br><br>\r\n    \r\n    </div>\r\n  </div>\r\n  <div class=\"container\">\r\n    <div *ngFor=\"let comm of comments\">\r\n        <a>\r\n        <div class=\"post-block\">\r\n        \r\n        <p style=\"font-size: 11px;\">Comment left by user: {{comm.userId}}</p>\r\n        <h2>{{comm.content}}</h2>\r\n        <p class=\"p-date\">{{comm.date}}</p>\r\n        \r\n        <br>\r\n        \r\n        </div>\r\n        </a>\r\n      \r\n      </div>\r\n  </div>\r\n  ","import { DialogChangeDpComponent } from './dialog-change-dp/dialog-change-dp.component';\r\nimport { DialogAddSkillComponent } from './dialog-add-skill/dialog-add-skill.component';\r\nimport { DeleteExperienceComponent } from './../delete-experience/delete-experience.component';\r\nimport { DeleteEducationComponent } from './../delete-education/delete-education.component';\r\nimport { DeleteSkillComponent } from './../delete-skill/delete-skill.component';\r\nimport { UpdateProfileAboutComponent} from './../update-profile-about/update-profile-about.component';\r\nimport { UpdateProfileEducationComponent} from './../update-profile-education/update-profile-education.component';\r\nimport { UpdateProfileExperienceComponent} from './../update-profile-experience/update-profile-experience.component';\r\nimport { UserDTO } from './../classes/Profile/UserDTO';\r\nimport { DialogAddProfileComponent } from './dialog-add-profile/dialog-add-profile.component';\r\nimport { Contact } from '../classes/Contact';\r\nimport { Profile } from './../classes/Profile/Profile';\r\nimport { ContactService } from '../services/contact/contact.service';\r\nimport { Experience } from './../classes/Profile/Experience';\r\nimport { Education } from './../classes/Profile/Education';\r\nimport { Component, OnInit , Input } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { ProfileService } from '../services/profile/profile.service';\r\nimport { About } from '../classes/Profile/About';\r\nimport { Skill } from '../classes/Profile/Skill';\r\nimport { HttpHeaders } from '@angular/common/http';\r\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';\r\nimport { User } from '../classes/Profile/User';\r\nimport { NgbModalConfig, NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { Observable, interval, Subscription } from 'rxjs';\r\nimport { Router } from '@angular/router';\r\n\r\nimport {\r\n  MatSnackBar,\r\n  MatSnackBarHorizontalPosition,\r\n  MatSnackBarVerticalPosition,\r\n} from '@angular/material/snack-bar';\r\nimport { DialogAddExperienceComponent } from './dialog-add-experience/dialog-add-experience.component';\r\nimport { DialogAddEducationComponent } from './dialog-add-education/dialog-add-education.component';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { delay } from 'rxjs/operators';\r\nimport { strict } from 'assert';\r\nimport { stringify } from 'querystring';\r\nimport {DomSanitizer} from '@angular/platform-browser';\r\nimport { UserService } from '../services/user.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-profile',\r\n  templateUrl: './profile.component.html',\r\n  styleUrls: ['./profile.component.css']\r\n})\r\nexport class ProfileComponent implements OnInit {\r\n\r\n\r\n  loggedInUser: number = this.userService.getUserIdOfLoggedIn();\r\n  currentUser: UserDTO;\r\n  profileUser: UserDTO;\r\n  isConnected: boolean = false;\r\n  isRequestSent: boolean = false;\r\n  isRequestReceived: boolean = false;\r\n  contacts: Contact[];\r\n  contact: Contact;\r\n\r\n  userId : number = this.loggedInUser;\r\n  profileId: number;\r\n  \r\n  allowedToSee = { class: 'text-danger', message: 'Sorry you cant see this!' }; \r\n  errorMsgEdu: boolean;\r\n  errorMsgExp: boolean;\r\n  errorMsgSki: boolean;\r\n  \r\n  uploadForm: FormGroup; \r\n  @Input() expToAdd={};\r\n  selectedFile:File = null;\r\n  profileUrl: any;\r\n\r\n  // console.log(dataToAdd);\r\n  constructor(private profileService: ProfileService,\r\n              private contactService: ContactService,\r\n              private userService: UserService,\r\n               private route: ActivatedRoute,\r\n               public dialog: MatDialog,\r\n               private _snackBar: MatSnackBar,\r\n               private formBuilder: FormBuilder,\r\n               private sanitizer: DomSanitizer) { }\r\n            \r\n  profileData: Profile[]; \r\n  educations: Object[];\r\n  experiences: Experience[];\r\n  skills : Object[];\r\n  about: About[];\r\n             \r\n\r\n  //profileData: Profile[];\r\n  educationsList: Object[];\r\n  experiencesList: Object[];\r\n  skillsList : Object[];\r\n  aboutList: Object[];\r\n  foundUser: User;\r\n  educationToAdd = {};\r\n  experienceToAdd = {};\r\n  skillToAdd = {};\r\n  profileToAdd: {};\r\n  profileWithLangauge: {};\r\n  aboutToAdd: {};\r\n  newProfileId : number;\r\n  currentProfile:string = \"\";\r\n \r\n  \r\n\r\n  userFirstName:string;\r\n  userLastName:string;\r\n  userImage: string;\r\n \r\n  //these are needed to get ids fior deleting data\r\n  education: Education;\r\n  skill: Skill;\r\n  experience: Experience;\r\n  profile: Profile; \r\n  anotherUserId: number \r\n  sameUser: boolean;\r\n  \r\n  years = [\r\n    {year : 2010},\r\n    {year : 2011},\r\n    {year : 2012},\r\n    {year : 2013},\r\n    {year : 2014},\r\n    {year : 2015}\r\n    \r\n\r\n  ]\r\n  languages = [\r\n    {name: \"English\"},\r\n    {name: \"French\"},\r\n    {name: \"Spanish\"},\r\n    {name: \"Urdu\"}\r\n  ]\r\n\r\n  jobType = [\r\n    {name: \"FullTime\"},\r\n    {name: \"PartTime\"},\r\n    {name: \"FreeLancer\"}\r\n  ]\r\n  // onSubmitEducation(data)\r\n  // {\r\n    \r\n  //  this.educationToAdd = {\r\n  //    \"degreeEducation\": data.degreeEducation,\r\n  //    \"descriptionEducation\": data.descriptionEducation,\r\n  //    \"endYearEducation\": parseInt(data.startYearEducation),\r\n  //    \"fieldStudy\": data.fieldStudy,\r\n  //    \"profileId\": this.profileId,\r\n  //    \"school\": data.school,\r\n  //    \"startYearEducation\": parseInt(data.endYearEducation)\r\n  //    }\r\n  //    this.profileService.addEducation(<JSON>this.educationToAdd, this.userId, this.profileId)\r\n  //    this.ngOnInit();\r\n  // }\r\n\r\n\r\n  // onSubmitSkill(data)\r\n  // {\r\n    \r\n  //  this.skillToAdd = {\r\n  //       \"id\": 17,\r\n  //       \"name\": data.skill,\r\n  //       \"profileId\": this.profileId\r\n  //   }\r\n  //    this.profileService.addSkill(<JSON>this.skillToAdd, this.userId, this.profileId)\r\n  //    this.ngOnInit();\r\n  // }\r\n\r\n  // onSubmitExperience(data){\r\n   \r\n  //   this.experienceToAdd = {\r\n  //     \"company\": data.company,\r\n  //     \"descriptionExperience\": data.descriptionExperience,\r\n  //     \"employmentType\":data.employementType,\r\n  //     \"endDateExperience\": parseInt(data.endDateExperience),\r\n  //     // \"id\":453,\r\n  //     \"location\": data.locationId,\r\n  //     \"profileId\": this.profileId,\r\n  //     \"startDateExperience\": parseInt(data.startDateExperience),\r\n  //     \"title\": data.title\r\n  //      }\r\n  //      console.warn(this.experienceToAdd);\r\n  //      this.profileService.addExperience(<JSON>this.experienceToAdd, this.userId, this.profileId)\r\n  //      this.ngOnInit();\r\n       \r\n  // }\r\n  \r\n  \r\n//   onSubmitProfile(data){\r\n    \r\n  \r\n//     this.profileToAdd = {\r\n//       \"language\": data.language,\r\n//       \"userId\": this.userId\r\n//     }\r\n//     this.profileService.addProfile(<JSON>this.profileToAdd, this.userId)\r\n//       .subscribe(\r\n//         newProfile => {\r\n          \r\n//           console.log(\"New Profile Added ----------------\");\r\n//           console.log(newProfile);\r\n\r\n//           this.aboutToAdd = {\r\n//             \"content\": data.about,\r\n//             \"profileId\": newProfile\r\n//         }\r\n          \r\n//           this.profileService.addAbout(<JSON>this.aboutToAdd,  this.userId, newProfile)\r\n//           console.log(\"test about\");\r\n//           console.log(this.aboutToAdd);\r\n          \r\n//           //this.isConnected = true;\r\n//         },(error: Response) => {\r\n//           if(error.status === 409){\r\n//             this._snackBar.open('Given Language already exist Exists!', 'End now', {\r\n//               duration: 2000,\r\n//             });\r\n//             }  else if(error.status === 401){\r\n//               console.log(\"sorry not sorry\");\r\n//               this.showAllowedToSee();\r\n//             } \r\n//             else \r\n//             {\r\n//               alert('error')\r\n//             }\r\n//         });\r\n      \r\n//  // window.location.reload();\r\n \r\n//  this.ngOnInit();\r\n//  //this.refresh();\r\n// }\r\n\r\n\r\nonFileSelect(event) {\r\n  if (event.target.files.length > 0) {\r\n    const file = event.target.files[0];\r\n    this.uploadForm.get('profile').setValue(file);\r\n    console.log(\"yes aadded\")\r\n  }\r\n}\r\n\r\n\r\nopenDialogDp(): void {\r\n  const dialogRef = this.dialog.open(DialogChangeDpComponent, {\r\n    width: '50%',\r\n    data: {User: this.foundUser},\r\n    panelClass: ['custom-modalbox','animate__animated','animate__slideInLeft']\r\n    }) \r\n  dialogRef.afterClosed()\r\n    .subscribe(res => {\r\n    this.getAllExperience();  \r\n  });\r\n}\r\n\r\nopenDialogProfile(): void {\r\n  const dialogRef = this.dialog.open(DialogAddProfileComponent, {\r\n    width: '50%',\r\n    data: {User: this.foundUser},\r\n    panelClass: ['custom-modalbox','animate__animated','animate__slideInLeft']\r\n    }) \r\n  dialogRef.afterClosed()\r\n    .subscribe(res => {\r\n    this.getAllExperience();  \r\n  });\r\n}\r\n\r\nopenDialogExperience(): void {\r\n  const dialogRef = this.dialog.open(DialogAddExperienceComponent, {\r\n    width: '50%',\r\n    data: {User: this.foundUser, Profile: this.profileId},\r\n    panelClass: ['custom-modalbox','animate__animated','animate__slideInLeft']\r\n\r\n  }); \r\n  dialogRef.afterClosed()\r\n    .subscribe(res => {\r\n    this.getAllExperience();  \r\n  });\r\n}\r\nopenDialogEducation() : void{\r\n  const dialogRef = this.dialog.open(DialogAddEducationComponent,{\r\n    width: '50%',\r\n    data: {User: this.foundUser,Profile: this.profileId},\r\n    panelClass: ['custom-modalbox','animate__animated','animate__slideInLeft']\r\n\r\n  }); \r\n  dialogRef.afterClosed()\r\n    .subscribe(res => {\r\n    this.getAllEducation();  \r\n  });\r\n}\r\nopenSkillDialog() : void{\r\n  const dialogRef = this.dialog.open(DialogAddSkillComponent,{\r\n    maxWidth: '50%',\r\n    data: {User: this.foundUser,  Profile: this.profileId},\r\n    panelClass: ['custom-modalbox','animate__animated','animate__slideInLeft']\r\n\r\n  }); \r\n  dialogRef.afterClosed()\r\n    .subscribe(res => {\r\n    this.getAllSkills();  \r\n  });\r\n}\r\n\r\n  // get all skills \r\n  getAllSkills() {\r\n    this.profileService.getSkillsById(this.userId, this.profileId)\r\n    .subscribe(\r\n      data => {\r\n        this.skills = <Object[]>data;\r\n        this.ngOnInit();\r\n      }\r\n    )\r\n  }\r\n\r\n  //open dialog for skills\r\n  openDialogSkill(skill: Skill): void {\r\n    console.log(skill);\r\n    const dialogRef = this.dialog.open(DeleteSkillComponent, {\r\n      maxWidth: '50%',\r\n      data: {skill: skill}\r\n    }); \r\n    dialogRef.afterClosed()\r\n      .subscribe(res => {\r\n\r\n        this.getAllSkills();  \r\n        this.ngOnInit();\r\n    });\r\n\r\n  }\r\n\r\n  // get all Education\r\n  getAllEducation() {\r\n    this.profileService.getEducationsById(this.userId, this.profileId)\r\n    .subscribe(\r\n      data => {\r\n        this.educations = <Education[]>data;\r\n        this.ngOnInit();\r\n      }\r\n    )\r\n  }\r\n\r\n  //open dialog for education\r\n  openDialogEdu(education: Education): void {\r\n    console.log(education);\r\n    const dialogRef = this.dialog.open(DeleteEducationComponent, {\r\n      maxWidth: '50%',\r\n      data: {education: education}\r\n    }); \r\n    dialogRef.afterClosed()\r\n      .subscribe(res => {\r\n\r\n        this.getAllEducation();  \r\n    });\r\n\r\n  }\r\n\r\n  // get all Experience\r\n  getAllExperience() {\r\n    this.profileService.getExperienceById(this.userId, this.profileId)\r\n    .subscribe(\r\n      data => {\r\n        this.experiences = <Experience[]>data;\r\n        this.ngOnInit();\r\n      }\r\n    )\r\n  } \r\n\r\n  //open dialog for experience\r\n  openDialogExp(experience: Experience): void {\r\n    console.log(experience);\r\n    const dialogRef = this.dialog.open(DeleteExperienceComponent, {\r\n      maxWidth: '50%',\r\n      data: {experience: experience}\r\n    }); \r\n    dialogRef.afterClosed()\r\n      .subscribe(res => {\r\n\r\n        this.getAllExperience();  \r\n    });\r\n\r\n  }\r\n\r\n  GetAllAbout(){\r\n    this.profileService.getAboutById(this.userId, this.profileId).subscribe((data)=>\r\n    {\r\n      this.about=<About[]>data;\r\n      this.ngOnInit();\r\n      console.log(this.about);\r\n      this.ngOnInit();\r\n\r\n    }); \r\n  }\r\n\r\n  openDialogAbout(about: About): void {\r\n  \r\n    const dialogRef = this.dialog.open(UpdateProfileAboutComponent, {\r\n      maxWidth: '50%',\r\n      data: {about: about}\r\n    }); \r\n    dialogRef.afterClosed()\r\n      .subscribe(res => {\r\n\r\n        this.GetAllAbout();\r\n    });\r\n\r\n  }\r\n  \r\n  openDialogUpdateEdu(education: Education): void {\r\n\r\n    const dialogRef = this.dialog.open(UpdateProfileEducationComponent, {\r\n      maxWidth: '50%',\r\n      data: {education: education}\r\n    }); \r\n    dialogRef.afterClosed()\r\n      .subscribe(res => {\r\n\r\n        this.getAllEducation(); \r\n    });\r\n\r\n  }\r\n  openDialogUpdateExp(experience: Experience): void {\r\n    const dialogRef = this.dialog.open(UpdateProfileExperienceComponent, {\r\n      maxWidth: '50%',\r\n      data: {experience: experience}\r\n    }); \r\n    dialogRef.afterClosed()\r\n      .subscribe(res => {\r\n\r\n        this.getAllExperience();  \r\n    });\r\n\r\n  }\r\n\r\n  refresh(): void {\r\n  window.location.reload();\r\n  }\r\n\r\n \r\n       \r\n\r\n  clickMethod(name: string) {\r\n    if(confirm(\"Are you sure to delete \"+name)) {\r\n      console.log(\"Implement delete functionality here\");\r\n    }\r\n  }\r\n\r\n  CurrentProfile(idG){\r\n   \r\n    var self = this;\r\n    this.profileData.forEach(function (value) {\r\n   \r\n      if(value.id == idG){\r\n         self.currentProfile = value.language;\r\n        // console.log(this.tempProfile)\r\n      }\r\n    });\r\n    console.log(\"Language\");\r\n    \r\n    console.log(this.currentProfile);\r\n  }\r\n  refreshProfile(){\r\n    \r\n    this.profileService.getProfile(this.userId).\r\n    subscribe(\r\n      data=> {\r\n      this.profileData=<Profile[]>data;\r\n      console.log(\"Total profiles are\")\r\n      console.log(this.profileData);\r\n    });\r\n\r\n  \r\n\r\n    this.profileService.getUser(this.userId)\r\n    .subscribe((data)=>\r\n    {\r\n     \r\n      this.foundUser=<User>data;\r\n      this.userFirstName = this.foundUser.firstName;\r\n      this.userLastName = this.foundUser.lastName;\r\n      if(this.foundUser.image == \"\"){\r\n        this.profileUrl = \"https://lh5.googleusercontent.com/proxy/HRnHradLWE7OZ2OZqlQI6puaWBYYxL0M9hK4zdYCyy64DowTsbZfWtzEt5PmlEbD_-lsEEJ2JpulUqQhJwX2lrx5q3sIT00R4IB6QZttREX8WGVztVqCJuHxKHA4Dhh2vRXOeIasK-8lN6Xq1rjE2dbq6ps=w1200-h630-p-k-no-nu\";\r\n      console.log(this.profileUrl);\r\n        \r\n      }\r\n      else{\r\n        this.profileUrl = this.foundUser.image;\r\n\r\n      }\r\n      // this.profileUrl = this.sanitizer.bypassSecurityTrustUrl(this.profileUrl);\r\n      // this.userImage = this.foundUser.userImage;\r\n      console.log(\"Found User\");\r\n      console.log(this.foundUser);\r\n      console.log(\"Found img\");\r\n      console.log(this.profileUrl);\r\n\r\n    });\r\n  \r\n   \r\n\r\n    this.profileService.getEducationsById(this.userId, this.profileId).subscribe((data)=>\r\n      {\r\n        \r\n        this.errorMsgEdu = false;\r\n        this.educationsList=<Object[]>data;\r\n        console.log(this.educationsList);\r\n        console.log(\"profile id\");\r\n        console.log(this.profileId);\r\n        this.CurrentProfile(this.profileId);\r\n      }\r\n    //   ,\r\n    //   (error: Response) => {\r\n    //     if(error.status === 404){\r\n    //       this._snackBar.open('Id is wrong!!', 'End now', {\r\n    //         duration: 1000,\r\n    //       });\r\n    //       }  else if(error.status === 401){\r\n    //         console.log(\"sorry not sorry\");\r\n    //         this.errorMsgEdu = true;\r\n    //       } \r\n    //   }\r\n      );\r\n    this.profileService.getExperienceById(this.userId, this.profileId).subscribe((data)=>\r\n    {\r\n     \r\n      this.errorMsgExp = false;\r\n      this.experiencesList=<Object[]>data;\r\n      console.log(this.experiencesList);\r\n    }\r\n    // ,\r\n    // (error: Response) => {\r\n    //   if(error.status === 404){\r\n    //     this._snackBar.open('Id is wrong!!', 'End now', {\r\n    //       duration: 1000,\r\n    //      });\r\n    //    } else if(error.status === 401){\r\n    //     console.log(\"sorry not sorry\");\r\n    //     this.errorMsgExp = true;\r\n    //   }  \r\n    // }\r\n    );\r\n    this.profileService.getSkillsById(this.userId, this.profileId).subscribe((data)=>\r\n    {\r\n    \r\n      this.errorMsgSki = false;\r\n      this.skillsList=<Object[]>data;\r\n      console.log(this.skillsList);\r\n    }\r\n    // ,\r\n    // (error: Response) => {\r\n    //   if(error.status === 404){\r\n    //     this._snackBar.open('Id is wrong!!', 'End now', {\r\n    //       duration: 1000,\r\n    //      });\r\n    //    }\r\n    //    else if(error.status === 401){\r\n    //      console.log(\"sorry not sorry\");\r\n    //      this.errorMsgSki = true;\r\n    //    }\r\n    // }\r\n    );\r\n    this.profileService.getAboutById(this.userId, this.profileId).subscribe((data)=>\r\n    {\r\n      \r\n      this.aboutList=<Object[]>data;\r\n      console.log(this.aboutList);\r\n    }\r\n    // ,\r\n    // (error: Response) => {\r\n    //   if(error.status === 404){\r\n    //     this._snackBar.open('Id is wrong!!', 'End now', {\r\n    //       duration: 1000,\r\n    //      });\r\n    //    } \r\n    // }\r\n    );\r\n  }\r\n\r\n  url: string;\r\n    onSelectFile(event) { // called each time file input changes\r\n        if (event.target.files && event.target.files[0]) {\r\n          var reader = new FileReader();\r\n\r\n          reader.readAsDataURL(event.target.files[0]); // read file as data url\r\n\r\n          reader.onload = (event: any) => { // called once readAsDataURL is completed\r\n            this.url = <string>event.target.result;\r\n            console.log(\"text for image\");\r\n            console.log(this.url);\r\n          }\r\n        }\r\n    }\r\n\r\n\r\n  ngOnInit(): void {\r\n    \r\n    let profileUserId: number = +this.route.snapshot.paramMap.get('id');\r\n    this.anotherUserId = +this.route.snapshot.paramMap.get('id');\r\n\r\n    console.log(\"Another User Profile id \" + this.anotherUserId)\r\n    console.log(\"Your Profile id \" + this.userId)\r\n    if(this.userId == this.anotherUserId){\r\n      this.sameUser = true;\r\n    }\r\n\r\n    this.profileService.getUser(profileUserId)\r\n      .subscribe((data)=> {        \r\n        this.profileUser = <UserDTO>data;\r\n\r\n        console.log(\"Profile user \" + this.profileUser.profileId)\r\n      });\r\n      // this.profileService.getPicture().subscribe(response=>{\r\n      //   console.log(\"------------------\");\r\n        \r\n      //   console.log(response);\r\n\r\n      // });\r\n     \r\n      \r\n   //this.profileUser = +this.route.snapshot.paramMap.get('id');\r\n\r\n    this.userId = +this.route.snapshot.paramMap.get('id');\r\n    this.profileId = +this.route.snapshot.paramMap.get('profileId');\r\n\r\n    console.log(this.profileId);\r\n    console.log(this.userId);\r\n\r\n    console.log(this.profileUser);\r\n\r\n\r\n    this.refreshProfile();\r\n    \r\n\r\n    // GET ALL CONTACTS\r\n    this.contactService.getAll()\r\n    .subscribe(\r\n      contacts => {\r\n        this.contacts = <Contact[]>contacts;\r\n\r\n        console.log(\"CONTACTS \" + contacts);\r\n        if(this.contacts.length > 0) {\r\n       this.contacts.forEach(contact => {\r\n          // Logged in user sent request or other user sent request, status isAccepted true\r\n          if(((contact.user.id == this.loggedInUser && contact.friend.id == this.profileUser?.id) || (contact.user.id == this.profileUser?.id && contact.friend.id == this.loggedInUser)) && contact.isAccepted == true) {\r\n            this.isRequestSent = true;\r\n            this.isConnected = true;\r\n            this.contact = contact;\r\n            return;\r\n          }\r\n          // Logged in user sent request, status isAccepted false, status isAccepted false\r\n          else if(((contact.user.id == this.loggedInUser && contact.friend.id == this.profileUser?.id) && !contact.isAccepted)) {\r\n            this.isRequestSent = true;\r\n            this.isConnected = false;\r\n            this.contact = contact;\r\n\r\n            return;\r\n          }\r\n          else if(((contact.friend.id == this.loggedInUser && contact.user.id == this.profileUser?.id) && !contact.isAccepted)){\r\n            this.isRequestReceived = true;\r\n            this.isConnected = false;\r\n            this.contact = contact;\r\n\r\n            return;\r\n          }\r\n\r\n        });\r\n        }\r\n\r\n        this.getUserDTO();\r\n\r\n\r\n      }\r\n    )\r\n   \r\n    \r\n  }\r\n\r\n  getUserDTO() {\r\n    this.profileService.getUser(this.loggedInUser)\r\n    .subscribe((data)=>\r\n    {\r\n      this.currentUser = <UserDTO>data;\r\n      console.log(\"CURRENT \" + this.currentUser);\r\n    });\r\n  }\r\n\r\n    //deleting skill data\r\n    deleteSkill(){\r\n      this.profileService.deleteSkill(this.profile.userId, this.skill.profileId, this.skill.id).subscribe((data)=>\r\n      {\r\n        this.skillsList = <Object[]>data;\r\n        console.log(this.skillsList);\r\n      });\r\n    }\r\n  \r\n    //deleting experience data\r\n    deleteEducation(){\r\n      this.profileService.deleteEducation(this.profile.userId, this.education.profileId, this.education.id).subscribe((data)=>\r\n      {\r\n        this.educationsList = <Object[]>data;\r\n        console.log(this.educationsList);\r\n      });\r\n    }\r\n  \r\n    //deleting experience data\r\n    deleteExperience(experineceId){\r\n      this.profileService.deleteExperience(this.userId, this.profileId, experineceId).subscribe(data => {\r\n        console.log(data);\r\n      });\r\n    }\r\n\r\n//  constructor(private route: ActivatedRoute) {\r\n//     this.route.params.subscribe(params => console.log(params))\r\n//    }\r\n\r\n//  // educations: Education[];\r\n//   ngOnInit(): void {\r\n//     // this.profileService.getProfile().subscribe((data)=>\r\n//     // {\r\n//     //   console.log(data);\r\n//     //   t his.educations=<Education[]>data;\r\n//   // });\r\n\r\n\r\n\r\n          /*------------------------------------------------------ CONTACTS -------------------------------------------------------- */\r\n  getContacts() {\r\n    this.contactService.getAll()\r\n      .subscribe(\r\n        contacts => {\r\n          this.contacts = <Contact[]>contacts;\r\n        }\r\n      )\r\n  }\r\n  \r\n\r\n  createContact() {\r\n    let user: UserDTO;\r\n\r\n    this.contacts.forEach(contact => {\r\n      if(contact.user.id == this.loggedInUser) {\r\n        user = contact.user;\r\n        return;\r\n      }\r\n      else if(contact.friend.id == this.loggedInUser) {\r\n        user = contact.friend;\r\n        return;\r\n      }\r\n    });\r\n\r\n    user = this.currentUser;\r\n\r\n    // get logged in user id from auth and friendId from url\r\n    let contact : {} = { user: user, friend: this.profileUser, isAccepted: false};\r\n\r\n    this.contactService.create(contact)\r\n      .subscribe(\r\n        newContact => {\r\n          this.isRequestSent = true;\r\n        }\r\n      )\r\n  }\r\n\r\n  // deleteContact() {\r\n  //   // get logged in user id from auth and contatcId from link\r\n  //   this.contactService.delete(1)\r\n  //     .subscribe();\r\n  // }\r\n\r\n    // ACCEPT REQUEST\r\n    acceptContact() {\r\n      this.contact.isAccepted = true;\r\n  \r\n      this.contactService.update(this.contact)\r\n        .subscribe(\r\n          updatedContact => {\r\n            this.isConnected = true;\r\n          }\r\n        )\r\n    }\r\n \r\n   \r\n   \r\n\r\n}\r\n","<div class=\"container\">\r\n    <div class=\"clearfix\">\r\n      <div class=\"float-right add-new-profile clearfix\">\r\n     \r\n        <div *ngIf=\"!sameUser; else isSameUser\">\r\n          <!-- empty because this is another user -->\r\n         </div>\r\n         <ng-template #isSameUser>\r\n          <div> <button type=\"button\" class=\"btn add-new-profile-button float-right\" routerLink=\"/export/{{profileId}}\">Export</button></div>\r\n          <button type=\"button\"\r\n            class=\"btn add-new-profile-button float-right\"\r\n            (click)=\"openDialogProfile()\">\r\n              Add New Profile\r\n          </button>\r\n         </ng-template>\r\n     </div>\r\n    \r\n    </div>  \r\n\r\n\r\n    <div class=\"container big-container border clearfix mat-elevation-z3\">\r\n      <div class=\"float-right\">\r\n        <!-- Connect button -->\r\n        <ng-container *ngIf=\"loggedInUser != profileUser?.id\">\r\n          <button mat-raised-button\r\n                  id=\"contact\"\r\n                  *ngIf=\"isConnected\"\r\n                  class=\"float-right\">\r\n            Connected\r\n          </button>\r\n          <button mat-raised-button\r\n                  id=\"contact\"\r\n                  *ngIf=\"!isConnected && isRequestSent\"\r\n                  class=\"float-right\">\r\n            Request sent\r\n          </button>\r\n          <button mat-raised-button\r\n                  id=\"contact\"\r\n                  *ngIf=\"!isConnected && !isRequestSent && !isRequestReceived\"\r\n                  (click)=\"createContact()\"\r\n                  class=\"float-right\">\r\n            Connect\r\n          </button>\r\n          <button mat-raised-button\r\n                  id=\"contact\"\r\n                  *ngIf=\"!isConnected && isRequestReceived\"\r\n                  (click)=\"acceptContact()\"\r\n                  class=\"float-right\">\r\n            Accept\r\n          </button>\r\n        </ng-container>\r\n        <div class=\"dropdown\">\r\n          <button class=\"dropbtn dropdown-toggle switch-profile-button\">{{currentProfile}}</button>\r\n          <div class=\"dropdown-content\">\r\n            <li *ngFor=\"let p of profileData\">\r\n              <a class=\"dropdown-item switch-profile\" href=\"/users/{{p.userId}}/profiles/{{p.id}}\"> {{p.language}}</a>\r\n            </li>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div id=\"pdfTable\" #pdfTable>\r\n        \r\n        <div class=\"name\" ng-controller=\"userImage, userFirstName, userLastName\">\r\n          <div *ngIf=\"profileUrl?.length> 0; else noProfilePicture\">\r\n             <!-- The purpose of looping through about list is: to make it more specific for this location, and\r\n          if you remove this loop then it will show you the buttons from one of the first ifs, like Export and Add New Profile -->\r\n          <ul id=\"test\" class=\"edit\" *ngFor=\"let p of aboutList\">\r\n            \r\n            <div *ngIf=\"!sameUser; else isSameUser\">\r\n             <!-- empty because this is another user -->\r\n             <img width=\"100%\" src=\"{{profileUrl}}\" class=\"zoom\">\r\n            </div>\r\n            <ng-template #isSameUser>\r\n              <img width=\"100%\" src=\"{{profileUrl}}\" (click)=\"openDialogDp()\" class=\"zoom\"> \r\n            </ng-template>\r\n           \r\n          </ul>\r\n             \r\n          </div>\r\n          <ng-template #noProfilePicture>\r\n           \r\n          <ul id=\"test\" class=\"edit\" *ngFor=\"let p of aboutList\">\r\n            \r\n            <div *ngIf=\"!sameUser; else isSameUser\">\r\n             <!-- empty because this is another user -->\r\n            </div>\r\n            <ng-template #isSameUser>\r\n              <button (click)=\"openDialogDp()\">Upload Profile Picture</button>\r\n            </ng-template>\r\n           \r\n          </ul>\r\n           \r\n          </ng-template>\r\n         \r\n          <h1> {{userFirstName}} {{userLastName}} </h1>\r\n        </div>\r\n        <div class=\"container p-3 my-3 border  block-profile\">\r\n\r\n          <h1> About </h1>\r\n          \r\n          <ul id=\"test\" class=\"edit\" *ngFor=\"let p of aboutList\">\r\n            {{p.content}}\r\n            <div *ngIf=\"!sameUser; else isSameUser\">\r\n             <!-- empty because this is another user -->\r\n            </div>\r\n            <ng-template #isSameUser>\r\n              <button class=\"edit-icon icons\" mat-icon-button ria-label=\"\" (click)=\"openDialogAbout(p)\">\r\n                <mat-icon>border_color</mat-icon>\r\n              </button>\r\n            </ng-template>\r\n           \r\n          </ul>\r\n\r\n        </div>\r\n\r\n        <div class=\"container p-3 my-3 border block-profile\">\r\n          \r\n          <!-- The purpose of looping through about list is: to make it more specific for this location, and\r\n          if you remove this loop then it will show you the buttons from one of the first ifs, like Export and Add New Profile -->\r\n          <ul id=\"test\" class=\"edit\" *ngFor=\"let p of aboutList\">\r\n            \r\n            <div *ngIf=\"!sameUser; else isSameUser\">\r\n             <!-- empty because this is another user -->\r\n            </div>\r\n            <ng-template #isSameUser>\r\n              <mat-icon class=\"icons float-right add-icon\"\r\n                    aria-hidden=\"false\"\r\n                    aria-label=\"Example add icon\"\r\n                    (click)=\"openDialogExperience()\"\r\n                    id=\"buttonAdd\">add</mat-icon>\r\n            </ng-template>\r\n           \r\n          </ul>\r\n\r\n           \r\n\r\n          <h1>Experience</h1>\r\n          <table class=\"table table-striped\">\r\n            <thead>\r\n              <span *ngIf=\"errorMsgExp\">\r\n                <i class=\"fas fa-exclamation-circle {{allowedToSee.class}}\"></i>\r\n                {{allowedToSee.message}}\r\n              </span>\r\n            </thead>\r\n            <tbody>\r\n              <tr id=\"test\" *ngFor=\"let p of experiencesList\">\r\n\r\n                <td class=\"font-italic\">\r\n                  <h3>{{p.title | uppercase}} </h3>\r\n                  {{p.company}} . {{p.employmentType}} <br>\r\n                  {{p.startDateExperience}} - {{p.endDateExperience}} <br>\r\n                  {{p.descriptionExperience}} <br>\r\n                  {{p.location}}  <br>\r\n                </td>\r\n                <div *ngIf=\"!sameUser; else differentUser\">\r\n                  <!-- empty because this is another user -->\r\n                 </div>\r\n                 <ng-template #differentUser>\r\n                  <td class=\"icons\">\r\n                    <button mat-icon-button ria-label=\"\" (click)=\"openDialogUpdateExp(p)\">\r\n                      <mat-icon>border_color</mat-icon>\r\n                    </button>\r\n                    <button class=\"float-right\" mat-icon-button ria-label=\"\" (click)=\"openDialogExp(p)\">\r\n                      <mat-icon>remove_circle_outline</mat-icon>\r\n                    </button>\r\n                  </td>\r\n                 </ng-template>\r\n           </tr>\r\n\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n\r\n        <div class=\"container p-3 my-3 border block-profile\">\r\n           <!-- The purpose of looping through about list is: to make it more specific for this location, and\r\n          if you remove this loop then it will show you the buttons from one of the first ifs, like Export and Add New Profile -->\r\n          <ul id=\"test\" class=\"edit\" *ngFor=\"let p of aboutList\">\r\n            \r\n            <div *ngIf=\"!sameUser; else isSameUser\">\r\n             <!-- empty because this is another user -->\r\n            </div>\r\n            <ng-template #isSameUser>\r\n              <mat-icon class=\"icons float-right add-icon\"\r\n                aria-hidden=\"false\"\r\n                aria-label=\"Example add icon\"\r\n                (click)=\"openDialogEducation()\"\r\n                id=\"buttonAdd\">add</mat-icon>\r\n            </ng-template>\r\n           \r\n          </ul>\r\n         \r\n\r\n          <h1>Educations</h1>\r\n          <table class=\"table table-striped\">\r\n            <thead>\r\n              <span *ngIf=\"errorMsgEdu\">\r\n                <i class=\"fas fa-exclamation-circle {{allowedToSee.class}}\"></i>\r\n                {{allowedToSee.message}}\r\n              </span>\r\n            </thead>\r\n            <tbody>\r\n              <tr id=\"test\" *ngFor=\"let p of educationsList\">\r\n                <td>\r\n                  <h3> {{p.school}} </h3>\r\n                  {{p.degreeEducation}}, {{p.fieldStudy}} <br>\r\n                  {{p.startYearEducation}} - {{p.endYearEducation}} <br>\r\n                  {{p.descriptionEducation}}\r\n                </td>\r\n                <div *ngIf=\"!sameUser; else differentUser\">\r\n                  <!-- empty because this is another user -->\r\n                 </div>\r\n                 <ng-template #differentUser>\r\n                  <td class=\"icons\">\r\n                    <button mat-icon-button ria-label=\"\" (click)=\"openDialogUpdateEdu(p)\">\r\n                      <mat-icon>border_color</mat-icon>\r\n                    </button>\r\n                    <button class=\"float-right\" mat-icon-button ria-label=\"\" (click)=\"openDialogEdu(p)\">\r\n                      <mat-icon>remove_circle_outline</mat-icon>\r\n                    </button>\r\n                  </td>\r\n                 </ng-template>\r\n                 \r\n              </tr>\r\n\r\n            </tbody>\r\n\r\n          </table>\r\n        </div>\r\n\r\n        <div class=\"container p-3 my-3 border block-profile\">\r\n\r\n         <!-- The purpose of looping through about list is: to make it more specific for this location, and\r\n          if you remove this loop then it will show you the buttons from one of the first ifs, like Export and Add New Profile -->\r\n          <ul id=\"test\" class=\"edit\" *ngFor=\"let p of aboutList\">\r\n            \r\n            <div *ngIf=\"!sameUser; else isSameUser\">\r\n             <!-- empty because this is another user -->\r\n            </div>\r\n            <ng-template #isSameUser>\r\n              <mat-icon class=\"icons float-right add-icon\"\r\n                aria-hidden=\"false\"\r\n                aria-label=\"Example add icon\"\r\n                (click)=\"openSkillDialog()\"\r\n                id=\"buttonAdd\">add</mat-icon>\r\n            </ng-template>\r\n           \r\n          </ul>\r\n          \r\n\r\n          <h1>Skills</h1>\r\n          <span *ngIf=\"errorMsgSki\">\r\n            <i class=\"fas fa-exclamation-circle {{allowedToSee.class}}\"></i>\r\n            {{allowedToSee.message}}\r\n          </span>\r\n\r\n          <table class=\"table table-striped\">\r\n            <tbody>\r\n              <tr id=\"test\" *ngFor=\"let s of skillsList\">\r\n\r\n                <td>{{s.name}}</td>\r\n                <div *ngIf=\"!sameUser; else isSameUser\">\r\n                  <!-- empty because this is another user -->\r\n                 </div>\r\n                 <ng-template #isSameUser>\r\n                  <td class=\"icons\">\r\n                    <button class=\"float-right\" mat-icon-button ria-label=\"\" (click)=\"openDialogSkill(s)\">\r\n                      <mat-icon>remove_circle_outline</mat-icon>\r\n                    </button>\r\n                  </td>\r\n                 </ng-template>\r\n\r\n             \r\n\r\n              </tr>\r\n\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n</div> \r\n\r\n\r\n<!-- <div class=\"Experience\">\r\n    <h1> Experience </h1>\r\n    {{p?.company}}\r\n</div>\r\n<div class=\"Education\">\r\n    <h1> Education </h1>\r\n    {{p?.degree}}\r\n</div>\r\n<div class=\"Skills\">\r\n    <h1> Skills </h1>\r\n    {{p?.name}}\r\n</div> -->\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-unexpected-error',\r\n  templateUrl: './unexpected-error.component.html',\r\n  styleUrls: ['./unexpected-error.component.css']\r\n})\r\nexport class UnexpectedErrorComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<section>\r\n    <div id=\"content\">\r\n        <img src=\"assets/unexpected-error.png\" alt=\"\">\r\n        <h2>Something went wrong</h2>\r\n        <p class=\"type\">Please try again later.</p>\r\n    </div>\r\n</section>","import { Component, Inject, InjectionToken } from '@angular/core';\r\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';\r\nimport { ContactService } from '../services/contact/contact.service';\r\n\r\n// expect const DIALOG_DATA = new InjectionToken('DIALOG_DATA');\r\n\r\n@Component({\r\n  selector: 'app-delete-connection',\r\n  templateUrl: './delete-connection.component.html',\r\n  styleUrls: ['./delete-connection.component.css']\r\n})\r\nexport class DeleteConnectionComponent {\r\n  loggedInUser = 1;\r\n\r\n  constructor(\r\n    private contactService: ContactService,\r\n    public dialogRef: MatDialogRef<DeleteConnectionComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any) {\r\n      console.log(\"Data \" + data.connectionId)\r\n    }\r\n\r\n  onNoClick(): void {\r\n    // Close dialog\r\n    this.dialogRef.close();\r\n  }\r\n\r\n\r\n  delete() {\r\n    // Delete connection\r\n    console.log(\"DELETING ID: \" + this.data.connection);\r\n    console.log(\"DELETING ID: \" + this.data.connection.firstName);\r\n\r\n    this.contactService.delete(this.data.connection.id)\r\n    .subscribe();\r\n\r\n    // Close dialog\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  \r\n}\r\n","<!-- <h1 mat-dialog-title>Hi {{data.name}}</h1> -->\r\n<div id=\"question\" mat-dialog-content>\r\n  <p>Are you sure you want to delete {{ loggedInUser == data.connection.user.id? data.connection.friend.firstName + ' ' +  data.connection.friend.lastName: data.connection.user.firstName + ' ' +  data.connection.user.lastName}}?</p>\r\n</div>\r\n<div mat-dialog-actions>\r\n    <button mat-raised-button cdkFocusInitial (click)=\"delete()\">Yes</button>\r\n    <button mat-raised-button (click)=\"onNoClick()\">No</button>\r\n</div>","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { PostsService } from 'src/app/services/posts.service';\r\nimport {\r\n  MatSnackBar,\r\n  MatSnackBarHorizontalPosition,\r\n  MatSnackBarVerticalPosition,\r\n} from '@angular/material/snack-bar';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\n\r\n\r\nexport interface Post {\r\n  content: string;\r\n  date: string;\r\n  id: number;\r\n  userId: number;\r\n  image: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-update-post-dialog',\r\n  templateUrl: './update-post-dialog.component.html',\r\n  styleUrls: ['./update-post-dialog.component.css']\r\n})\r\nexport class UpdatePostDialogComponent implements OnInit {\r\n\r\n  constructor(private postService: PostsService,private formBuilder: FormBuilder,\r\n    public dialogRef: MatDialogRef<UpdatePostDialogComponent>,\r\n               @Inject(MAT_DIALOG_DATA) public data: any) { }\r\n\r\n    postId = 0;\r\n  post: Post;\r\n  newContent: String;\r\n  data1 = {};\r\n  uploadForm: FormGroup;\r\n  postUrl : string;\r\n\r\n  saveVal(item){\r\n    this.newContent = item.target.value;\r\n    console.log(this.newContent);\r\n  }\r\n\r\n  updatePost(){\r\n\r\n    const formData = new FormData();\r\n    formData.append('file', this.uploadForm.get('profile').value);\r\n    \r\n   this.postService.uploadPicture(localStorage.getItem(\"userId\"), formData).subscribe((data)=>\r\n   { \r\n    \r\n       this.postUrl =<string> data;\r\n       console.log(\"data\");\r\n    console.log(this.postUrl);\r\n       \r\n   });\r\n\r\n    console.log(this.lenImg());\r\n    if(this.lenImg()){\r\n      this.data = {\r\n        \"content\": this.newContent,\r\n        \"date\": this.post.date,\r\n        \"id\": this.post?.id,\r\n        \"userId\": localStorage.getItem(\"userId\"),\r\n        \"image\": \"assets/\"+localStorage.getItem(\"userId\")+this.uploadForm.get('profile').value.name\r\n        };\r\n    } else{\r\n      this.data = {\r\n        \"content\": this.newContent,\r\n        \"date\": this.post.date,\r\n        \"id\": this.post?.id,\r\n        \"userId\": localStorage.getItem(\"userId\"),\r\n        \"image\": this.post?.image\r\n        };\r\n    }\r\n    console.log(this.data);\r\n    console.log(this.postId);\r\n    this.postService.updatePost(<JSON>this.data,this.post?.id);\r\n    \r\n     \r\n    \r\n  }\r\n  CloseDialog(){\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  lenImg(){\r\n    if(this.postUrl?.length >0){\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  closeImg(){\r\n    this.postUrl = \"\";\r\n  }\r\n\r\n  onFileSelect(event) {\r\n    if (event.target.files.length > 0) {\r\n      const file = event.target.files[0];\r\n      this.uploadForm.get('profile').setValue(file);\r\n\r\n      \r\n      var reader = new FileReader();\r\n      reader.onload = (event: any) => {\r\n        this.postUrl = event.target.result;\r\n      }\r\n      reader.readAsDataURL(event.target.files[0]);\r\n    }\r\n    this.post.image = \"\";\r\n    \r\n  }\r\n\r\n\r\n  ngOnInit(): void {\r\n   \r\n    this.post = this.data.p;\r\n    this.newContent = this.post.content;\r\n    console.log(this.post);\r\n    this.uploadForm = this.formBuilder.group({\r\n      profile: ['']\r\n    });\r\n  }\r\n\r\n}\r\n","<div class=\"update-block\">\r\n    <h2>Update your post!</h2><br>\r\n <div> \r\n<textarea #newContent placeholder=\"Your awesome post...\" id = \"newPostText\" (keyup)=\"saveVal($event)\">{{post.content}}</textarea> <br><br>\r\n\r\n<form [formGroup]=\"uploadForm\" >\r\n         \r\n       \r\n <div>\r\n     <input style=\"display: none;\" type=\"file\" name=\"profile\" (change)=\"onFileSelect($event)\" #selectPicture />\r\n </div>\r\n <div class=\"buttons\">\r\n     <button class=\"uploadBtn\" type=\"button\" rounded=\"true\" (click)=\"selectPicture.click()\"></button>\r\n     \r\n </div>\r\n <br><br>\r\n <div style=\"text-align: center;\">\r\n     <div *ngIf=\"lenImg()\"> <a style=\"float: right;\" (click)=\"closeImg()\">x</a></div>\r\n <img src=\"{{postUrl}}\" class=\"post-img\">\r\n \r\n </div>\r\n \r\n </form>\r\n </div>\r\n<img src=\"{{post.image}}\" class=\"post-img\"><br>\r\n <button (click)=\"updatePost()\" class = \"postBtn\">Update</button><button (click)=\"CloseDialog()\" class = \"closeBtn\">Close</button>\r\n <br>\r\n</div>","import { Directive, ElementRef, HostListener, Input, Renderer2, OnChanges, SimpleChanges } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[appMaterialElevation]'\r\n})\r\n// Create shadow around elements\r\nexport class MaterialElevationDirective implements OnChanges {\r\n\r\n  @Input()\r\n  defaultElevation = 2;\r\n\r\n  @Input()\r\n  raisedElevation = 8;\r\n\r\n  constructor(\r\n    private element: ElementRef,\r\n    private renderer: Renderer2\r\n  ) {\r\n    this.setElevation(this.defaultElevation);\r\n  }\r\n\r\n  ngOnChanges(_changes: SimpleChanges) {\r\n    this.setElevation(this.defaultElevation);\r\n  }\r\n\r\n  @HostListener('mouseenter')\r\n  onMouseEnter() {\r\n    this.setElevation(this.raisedElevation);\r\n  }\r\n\r\n  @HostListener('mouseleave')\r\n  onMouseLeave() {\r\n    this.setElevation(this.defaultElevation);\r\n  }\r\n\r\n  setElevation(amount: number) {\r\n    // remove all elevation classes\r\n    const classesToRemove = Array.from((<HTMLElement>this.element.nativeElement).classList).filter(c => c.startsWith('mat-elevation-z'));\r\n    classesToRemove.forEach((c) => {\r\n      this.renderer.removeClass(this.element.nativeElement, c);\r\n    });\r\n\r\n    // add the given elevation class\r\n    const newClass = `mat-elevation-z${amount}`;\r\n    this.renderer.addClass(this.element.nativeElement, newClass);\r\n  }\r\n}\r\n","import { MessageService } from './services/message/message.service';\r\nimport { AddInformationComponent } from './profile/add-information/add-information.component';\r\nimport { DataService } from './services/data.service';\r\nimport { ContactService } from './services/contact/contact.service';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { ErrorHandler, NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { UserComponent } from './user/user.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { ProfileComponent } from './profile/profile.component';\r\nimport { PostComponent } from './post/post.component';\r\nimport { UpdatePostComponent } from './update-post/update-post.component';\r\nimport { PostDetailsComponent } from './post-details/post-details.component';\r\n\r\nimport { MDBBootstrapModule } from 'angular-bootstrap-md';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {MatListModule} from '@angular/material/list';\r\nimport {MatDividerModule} from '@angular/material/divider';\r\nimport {MatGridListModule} from '@angular/material/grid-list';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\r\nimport {MatTabsModule} from '@angular/material/tabs';\r\nimport {MatTooltipModule} from '@angular/material/tooltip';\r\nimport {MatBadgeModule} from '@angular/material/badge';\r\nimport {ClipboardModule} from '@angular/cdk/clipboard';\r\nimport {DragDropModule} from '@angular/cdk/drag-drop';\r\nimport {PortalModule} from '@angular/cdk/portal';\r\nimport {ScrollingModule} from '@angular/cdk/scrolling';\r\nimport {CdkStepperModule} from '@angular/cdk/stepper';\r\nimport {CdkTableModule} from '@angular/cdk/table';\r\nimport {CdkTreeModule} from '@angular/cdk/tree';\r\nimport {MatBottomSheetModule} from '@angular/material/bottom-sheet';\r\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\r\nimport {MatCardModule} from '@angular/material/card';\r\nimport {MatCheckboxModule} from '@angular/material/checkbox';\r\nimport {MatChipsModule} from '@angular/material/chips';\r\nimport {MatStepperModule} from '@angular/material/stepper';\r\nimport {MatDatepickerModule} from '@angular/material/datepicker';\r\nimport {MatExpansionModule} from '@angular/material/expansion';\r\nimport {MatNativeDateModule, MatRippleModule} from '@angular/material/core';\r\nimport {MatPaginatorModule} from '@angular/material/paginator';\r\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\r\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\r\nimport {MatRadioModule} from '@angular/material/radio';\r\nimport {MatSidenavModule} from '@angular/material/sidenav';\r\nimport {MatSliderModule} from '@angular/material/slider';\r\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\r\nimport {MatSortModule} from '@angular/material/sort';\r\nimport {MatToolbarModule} from '@angular/material/toolbar';\r\nimport {MatTreeModule} from '@angular/material/tree';\r\nimport {OverlayModule} from '@angular/cdk/overlay';\r\n\r\n\r\n\r\nimport { HeaderComponent } from './header/header.component';\r\nimport { UserSettingsComponent } from './user-settings/user-settings.component';\r\nimport { UpdateProfileEducationComponent } from './update-profile-education/update-profile-education.component';\r\nimport { UpdateProfileExperienceComponent } from './update-profile-experience/update-profile-experience.component';\r\nimport { UpdateProfileAboutComponent } from './update-profile-about/update-profile-about.component';\r\nimport { ConnectionComponent } from './connection/connection.component';\r\nimport { DeleteConnectionComponent } from './delete-connection/delete-connection.component';\r\nimport { DeleteSkillComponent } from './delete-skill/delete-skill.component';\r\nimport { DeleteExperienceComponent } from './delete-experience/delete-experience.component';\r\nimport { DeleteEducationComponent } from './delete-education/delete-education.component';\r\n\r\n\r\nimport { FilterPipe } from './pipes/filter.pipe';\r\nimport { MaterialElevationDirective } from './directives/material-elevation.directive'; // -> imported filter pipe\r\nimport { FilterUsersComponent } from './filter-users/filter-users.component';\r\nimport { A11yModule } from '@angular/cdk/a11y';\r\n\r\nimport {MatTableModule} from '@angular/material/table';\r\nimport {MatFormFieldModule} from '@angular/material/form-field';\r\nimport {MatInputModule} from '@angular/material/input';\r\n\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport {MatSelectModule} from '@angular/material/select';\r\nimport {MatMenuModule} from '@angular/material/menu';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport {MatDialogModule} from '@angular/material/dialog';\r\nimport { DialogAddProfileComponent } from './profile/dialog-add-profile/dialog-add-profile.component';\r\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\r\nimport { DialogAddExperienceComponent } from './profile/dialog-add-experience/dialog-add-experience.component';\r\nimport { DialogAddEducationComponent } from './profile/dialog-add-education/dialog-add-education.component';\r\nimport { DialogAddSkillComponent } from './profile/dialog-add-skill/dialog-add-skill.component';\r\nimport { SearchPipe } from './pipes/search.pipe';\r\nimport { NewsfeedComponent } from './newsfeed/newsfeed.component';\r\nimport { MessagesComponent } from './messages/messages.component';\r\nimport { SelectedMessageComponent } from './messages/selected-message/selected-message.component';\r\nimport { DateAgoPipe } from './pipes/date-ago.pipe';\r\nimport { PerfectScrollbarModule } from 'ngx-perfect-scrollbar';\r\nimport { PERFECT_SCROLLBAR_CONFIG } from 'ngx-perfect-scrollbar';\r\nimport { PerfectScrollbarConfigInterface } from 'ngx-perfect-scrollbar';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { DialogChangeDpComponent } from './profile/dialog-change-dp/dialog-change-dp.component';\r\nimport { RegistrationComponent } from './registration/registration.component';\r\nimport { CommentUsernameComponent } from './comment-username/comment-username.component';\r\nimport { DeleteConversationComponent } from './delete-conversation/delete-conversation.component';\r\nimport { StartConversationComponent } from './start-conversation/start-conversation.component';\r\nimport { UpdatePostDialogComponent } from './post/update-post-dialog/update-post-dialog.component';\r\n\r\nimport {CvBuilderComponent} from  './cv-builder/cv-builder.component';\r\nimport { ServerErrorInterceptor } from './errors/server-error.interceptor';\r\nimport { NotFoundComponent } from './errors/not-found/not-found.component';\r\nimport { ForbiddenComponent } from './errors/forbidden/forbidden.component';\r\nimport { UnexpectedErrorComponent } from './errors/unexpected-error/unexpected-error.component';\r\nimport { BadRequestComponent } from './errors/bad-request/bad-request.component';\r\nimport { OfflineComponent } from './errors/offline/offline.component';\r\nimport { InternalServerErrorComponent } from './errors/internal-server-error/internal-server-error.component';\r\n// const DEFAULT_PERFECT_SCROLLBAR_CONFIG: PerfectScrollbarConfigInterface = {\r\n//   wheelPropagation: true\r\n// };\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    UserComponent,\r\n    HomeComponent,\r\n    ProfileComponent,\r\n    UpdatePostComponent,\r\n    PostDetailsComponent,\r\n    HeaderComponent,\r\n    UserSettingsComponent,\r\n    UpdateProfileEducationComponent,\r\n    UpdateProfileExperienceComponent,\r\n    UpdateProfileAboutComponent,\r\n    ConnectionComponent,\r\n    DeleteConnectionComponent,\r\n    FilterPipe, // -> added filter pipe to use it inside the component\r\n    MaterialElevationDirective,  // -> adds shadow\r\n    DeleteSkillComponent,\r\n    DeleteEducationComponent,\r\n    DeleteExperienceComponent,\r\n    FilterUsersComponent,\r\n    ProfileComponent, \r\n    // UpdateProfileComponent,\r\n    PostComponent,\r\n    AddInformationComponent,\r\n    DialogAddProfileComponent,\r\n    DialogAddExperienceComponent,\r\n    DialogAddEducationComponent,\r\n    DialogAddSkillComponent,\r\n    SearchPipe,\r\n    NewsfeedComponent,\r\n    MessagesComponent,\r\n    SelectedMessageComponent,\r\n    DateAgoPipe,\r\n    LoginComponent,    \r\n    DialogChangeDpComponent,\r\n    RegistrationComponent,\r\n    CommentUsernameComponent,\r\n    DeleteConversationComponent,\r\n    StartConversationComponent,\r\n    UpdatePostDialogComponent,    \r\n    CvBuilderComponent, NotFoundComponent, ForbiddenComponent, UnexpectedErrorComponent, BadRequestComponent, OfflineComponent, InternalServerErrorComponent,    \r\n \r\n  ],\r\n  entryComponents:[DialogAddProfileComponent],\r\n  imports: [\r\n    BrowserModule,\r\n    HttpClientModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    RouterModule,\r\n    MDBBootstrapModule.forRoot(),\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    HttpClientModule,\r\n    MatButtonModule,\r\n    MatListModule,\r\n    MatDividerModule,\r\n    MatGridListModule,\r\n    MatInputModule,\r\n    MatIconModule,\r\n    MatDialogModule,\r\n    MatFormFieldModule,\r\n    // MatAutocompleteModule,\r\n    MatTabsModule,\r\n    MatTooltipModule,\r\n    MatBadgeModule,\r\n    BrowserAnimationsModule,\r\n    MatIconModule,\r\n    MatDialogModule,\r\n    FormsModule,\r\n    MatListModule,\r\n    MatFormFieldModule,\r\n    A11yModule,\r\n    ClipboardModule,\r\n    CdkStepperModule,\r\n    CdkTableModule,\r\n    CdkTreeModule,\r\n    DragDropModule,\r\n    MatBottomSheetModule,\r\n    MatButtonToggleModule,\r\n    MatCardModule,\r\n    MatCheckboxModule,\r\n    MatChipsModule,\r\n    MatStepperModule,\r\n    MatDatepickerModule,\r\n    MatExpansionModule,\r\n    MatMenuModule,\r\n    MatNativeDateModule,\r\n    MatPaginatorModule,\r\n    MatProgressBarModule,\r\n    MatProgressSpinnerModule,\r\n    MatRadioModule,\r\n    MatRippleModule,\r\n    MatSelectModule,\r\n    MatSidenavModule,\r\n    MatSliderModule,\r\n    MatSlideToggleModule,\r\n    MatSnackBarModule,\r\n    MatSortModule,\r\n    MatTableModule,\r\n    MatToolbarModule,\r\n    MatTreeModule,\r\n    OverlayModule,\r\n    PortalModule,\r\n    ScrollingModule,\r\n    MatTableModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatSelectModule,\r\n    MatMenuModule,\r\n    MatDialogModule,\r\n    MatSnackBarModule,\r\n    BrowserAnimationsModule,\r\n    NgbModule,\r\n    // PerfectScrollbarModule,\r\n\r\n  ],\r\n  providers: [\r\n    DataService,\r\n    ContactService,\r\n    FormsModule,\r\n    MessageService,\r\n    {\r\n        provide: HTTP_INTERCEPTORS,\r\n        useClass: ServerErrorInterceptor,\r\n        multi: true\r\n    }\r\n    //     {\r\n    //   provide: PERFECT_SCROLLBAR_CONFIG,\r\n    //   useValue: DEFAULT_PERFECT_SCROLLBAR_CONFIG\r\n    // }\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Education } from './../classes/Profile/Education';\r\nimport { Component, Inject, OnInit } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { ProfileService } from '../services/profile/profile.service';\r\n\r\n@Component({\r\n  selector: 'app-delete-education',\r\n  templateUrl: './delete-education.component.html',\r\n  styleUrls: ['./delete-education.component.css']\r\n})\r\nexport class DeleteEducationComponent implements OnInit {\r\n\r\n  loggedInUser: number = 5;\r\n\r\n  constructor(\r\n    private profileService: ProfileService,\r\n    public dialogRef: MatDialogRef<DeleteEducationComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any) {\r\n      console.log(data);\r\n    }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  //close dialog \r\n  noClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  //delete education\r\n  deleteEducation() {\r\n    this.profileService.deleteEducation(this.loggedInUser, this.data.education.profileId, this.data.education.id).subscribe();\r\n    console.log(this.loggedInUser + \" \" + this.data.education.profileId + \" \" + this.data.education.id);\r\n\r\n    // Close dialog\r\n    this.dialogRef.close();\r\n  }\r\n\r\n}\r\n","<div id=\"confirm\" mat-dialog-content>\r\n    <p> Do you want to delete this Education?</p>\r\n  </div>\r\n  <div mat-dialog-actions>\r\n      <button mat-raised-button cdkFocusInitial (click)=\"deleteEducation()\">Yes</button>\r\n      <button mat-raised-button (click)=\"noClick()\">No</button>  \r\n  </div> \r\n","import { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Injectable } from '@angular/core';\r\nimport { JsonPipe } from '@angular/common';\r\nimport { Education } from 'src/app/classes/Profile/Education';\r\nimport { Observable } from 'rxjs';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { map } from 'rxjs/operators';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProfileService {\r\n\r\n\r\n  readLocalStorageValue() {\r\n    if(localStorage.getItem(\"userToken\") != null){\r\n      this.httpOptions.headers = this.httpOptions.headers.set('Authorization', localStorage.getItem(\"userToken\"));\r\n    };\r\n}\r\n  httpOptions = {\r\n    headers: new HttpHeaders({\r\n      'Content-Type': 'application/json'\r\n    })\r\n  };\r\n\r\n  constructor(private httpClient: HttpClient, \r\n    private _snackBar: MatSnackBar) {this.readLocalStorageValue(); }\r\n\r\n  public getAllUsers(){\r\n    return this.httpClient.get('http://localhost:9090/users/', this.httpOptions)\r\n  }\r\n  public getProfile(userId){\r\n    return this.httpClient.get( 'http://localhost:9090/users/'+ userId + '/profiles', this.httpOptions)\r\n  }\r\n  public getUser(userId){\r\n    return this.httpClient.get('http://localhost:9090/users/' + userId, this.httpOptions)\r\n  }\r\n  public getUserById(userId){\r\n    console.log(\"GETTING USER BY ID\")\r\n    return this.httpClient.get('http://localhost:9090/users/p/' + userId, this.httpOptions)\r\n  }\r\n\r\n  public getExperienceById(userId, profileId){  \r\n    this.httpOptions.headers = this.httpOptions.headers.set('visitorId', '5');\r\n    console.log(this.httpOptions.headers);\r\n    return this.httpClient.get('http://localhost:9090/users/' + userId + '/profiles/' + profileId + '/experiences', this.httpOptions)\r\n  }\r\n\r\n  public getEducationsById(userId, profileId){\r\n    this.httpOptions.headers = this.httpOptions.headers.set('visitorId', '2');\r\n    console.log(this.httpOptions.headers);\r\n    return this.httpClient.get('http://localhost:9090/users/' + userId + '/profiles/' + profileId + '/educations', this.httpOptions)\r\n  }\r\n\r\n  public getSkillsById(userId, profileId){ \r\n    this.httpOptions.headers = this.httpOptions.headers.set('visitorId', '2');\r\n    console.log(this.httpOptions.headers);\r\n    return this.httpClient.get('http://localhost:9090/users/' + userId + '/profiles/' + profileId + '/skills', this.httpOptions)\r\n  }\r\n  public getAboutById(userId, profileId){\r\n    return this.httpClient.get('http://localhost:9090/users/' + userId + '/profiles/' + profileId + '/abouts', this.httpOptions)\r\n  }\r\n  public addAbout(data, userId, profileId){\r\n    return this.httpClient.post('http://localhost:9090/users/' + userId + '/profiles/' + profileId + '/abouts/new', data, this.httpOptions);\r\n  }\r\n  public addEducation(data, userId, profileId){\r\n    return this.httpClient.post('http://localhost:9090/users/' + userId + '/profiles/' + profileId + '/educations/new', data, this.httpOptions).toPromise().then(data => {\r\n      console.log(data);\r\n    })\r\n  }\r\n  public addExperience(data, userId, profileId){\r\n    return this.httpClient.post('http://localhost:9090/users/' + userId + '/profiles/' + profileId + '/experiences/new', data, this.httpOptions).subscribe((data)=>\r\n    {\r\n     \r\n    },\r\n    (error: Response) => {\r\n      \r\n      if(error.status === 409){\r\n        this._snackBar.open('Already Exist!!', 'End now', {\r\n          duration: 1000,\r\n        });\r\n        } \r\n        else \r\n        {\r\n          alert(error.status)\r\n        }\r\n    });\r\n      \r\n  }\r\n  public addSkill(data, userId, profileId){\r\n    return this.httpClient.post('http://localhost:9090/users/' + userId + '/profiles/' + profileId + '/skills/new', data, this.httpOptions).subscribe((data)=>\r\n    { \r\n      \r\n    },\r\n    (error: Response) => {\r\n      if(error.status === 409){\r\n        this._snackBar.open('Already Exist!!', 'End now', {\r\n          duration: 1000,\r\n        });\r\n        } \r\n        else \r\n        {\r\n          alert('error')\r\n        }\r\n    });\r\n      \r\n  }\r\n\r\n  public addProfile(resource: {}, userId) {\r\n    //console.log(this.url);\r\n    return this.httpClient.post('http://localhost:9090/users/' + userId + '/profiles/new', JSON.stringify(resource), this.httpOptions)\r\n      .pipe(\r\n        map(response => response)\r\n      )\r\n  }\r\n\r\n  // public addProfile(data, userId){\r\n  //   return this.httpClient.post('http://localhost:9090/users/' + userId + '/profiles/new', data).subscribe((data)=>\r\n  //   {\r\n     \r\n  //   },\r\n  //   (error: Response) => {\r\n  //     if(error.status === 409){\r\n  //       this._snackBar.open('Already Exist!!', 'End now', {\r\n  //         duration: 1000,\r\n  //       });\r\n  //       } \r\n  //       else \r\n  //       {\r\n  //         alert('error')\r\n  //       }\r\n  //   });\r\n  // }\r\n\r\n    //delete data in profile page\r\n    public deleteEducation(userId, profileId, educationId){\r\n      return this.httpClient.delete('http://localhost:9090/users/' + userId + '/profiles/' + profileId + '/educations/' + educationId, this.httpOptions);\r\n    }\r\n  \r\n    public deleteExperience(userId, profileId, experienceId){\r\n      return this.httpClient.delete('http://localhost:9090/users/' + userId + '/profiles/' + profileId + '/experiences/' + experienceId, this.httpOptions);\r\n    }\r\n  \r\n    public deleteSkill(userId, profileId, skillId){\r\n      return this.httpClient.delete('http://localhost:9090/users/' + userId + '/profiles/' + profileId + '/skills/' + skillId, this.httpOptions);\r\n    }\r\n    \r\n\r\n    public GetOneEducation(id){\r\n      const url = 'http://localhost:9090/users/profile/education/' + id;\r\n      return this.httpClient.get(url, this.httpOptions);\r\n    }\r\n\r\n    public GetOneExperience(id){\r\n      const url = 'http://localhost:9090/users/profile/experience/' + id;\r\n      return this.httpClient.get(url, this.httpOptions);\r\n      \r\n    }\r\n    public GetOneAbout(id){\r\n      const url = 'http://localhost:9090/users/profile/about/' + id;\r\n      return this.httpClient.get(url, this.httpOptions);\r\n      \r\n    }\r\n    public GetOneAddress(id){\r\n      const url = 'http://localhost:9090/users/address/' + id;\r\n      return this.httpClient.get(url, this.httpOptions);\r\n      \r\n    }\r\n    public GetOneUser(id){\r\n      const url = 'http://localhost:9090/users/user/' + id;\r\n      return this.httpClient.get(url, this.httpOptions);\r\n      \r\n    }\r\n\r\n    updateEducation(model, id) {\r\n      const url = 'http://localhost:9090/users/profile/education/' + id;\r\n      return this.httpClient.put(url, model, this.httpOptions);\r\n    }\r\n\r\n  \r\n    updateExperience(model, id) {\r\n      const url = 'http://localhost:9090/users/profile/experience/' + id;\r\n      return this.httpClient.put(url, model, this.httpOptions);\r\n    }\r\n    \r\n  updateAbout(model, id) {\r\n    const url = 'http://localhost:9090/users/profile/about/' + id;\r\n    return this.httpClient.put(url, model, this.httpOptions);\r\n  }\r\n\r\n  updateAddress(model, id) {\r\n    const url = 'http://localhost:9090/users/address/' + id;\r\n    return this.httpClient.put(url, model, this.httpOptions);\r\n  }\r\n  updatePhoneNumber(model, id) {\r\n    const url = 'http://localhost:9090/users/' + id;\r\n    return this.httpClient.put(url, model, this.httpOptions);\r\n  }\r\n  public GetOnePrivacy(){\r\n    const url = 'http://localhost:9090/users/privacy/me';\r\n    return this.httpClient.get(url, this.httpOptions);\r\n    \r\n  }\r\n\r\n  updatePrivacy(model) {\r\n    const url = 'http://localhost:9090/users/privacy/' + model.id;\r\n    return this.httpClient.put(url, model, this.httpOptions);\r\n  }\r\n\r\n  public uploadPicture(userId, data){\r\n    return this.httpClient.put('http://localhost:9090/upload/'+userId+'/uploadPicture', data, {responseType: 'text'})\r\n  }\r\n\r\n  public getFontysLocations(){\r\n    return this.httpClient.get('http://localhost:9090/users/fontysLocations');\r\n  }\r\n\r\n  public getFontysDepartments(){\r\n    return this.httpClient.get('http://localhost:9090/users/fontysDepartments');\r\n  }\r\n  public addAddress(data){\r\n    return this.httpClient.post('http://localhost:9090/users/newAddress', data);\r\n  }\r\n\r\n  public addNewUser(data){\r\n    return this.httpClient.post('http://localhost:9090/users/new', data);\r\n  }\r\n\r\n  // public getPicture(){\r\n  //   return this.httpClient.get('http://localhost:9090/upload/picture', this.httpOptions);\r\n  // }\r\n}\r\n","import { Component, Inject, InjectionToken } from '@angular/core';\r\nimport { ProfileService } from '../services/profile/profile.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Education } from './../classes/Profile/Education';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\n\r\n\r\n@Component({\r\n  selector: 'app-update-profile-education',\r\n  templateUrl: './update-profile-education.component.html',\r\n  styleUrls: ['./update-profile-education.component.css']\r\n})\r\nexport class UpdateProfileEducationComponent {\r\n  id: number;\r\n  notification = null; \r\n  constructor( private service: ProfileService,  public dialogRef: MatDialogRef<UpdateProfileEducationComponent>,@Inject(MAT_DIALOG_DATA) public data: any) { }\r\n  \r\n  years = [\r\n    {year : 2010},\r\n    {year : 2011},\r\n    {year : 2012},\r\n    {year : 2013},\r\n    {year : 2014},\r\n    {year : 2015},\r\n    {year : 2016},\r\n    {year : 2017},\r\n    {year : 2018},\r\n    {year : 2019},\r\n    {year : 2020},\r\n    {year : 2021},\r\n    {year : 2022},\r\n    {year : 2023},\r\n    {year : 2024},\r\n    {year : 2025},\r\n    \r\n\r\n  ]\r\n  education = new Education(1,1,\"fontys\", 1999, 2000, \"ICT\", \"It\", \"Description idk\");\r\n\r\n  ngOnInit(): void {\r\n    console.log(this.data.education.id);\r\n    this.id = this.data.education.id;\r\n    this.service.GetOneEducation(this.id)\r\n    .subscribe((data)=>{\r\n      console.log(data);\r\n    this.education = <Education>data;\r\n    });\r\n  }\r\n  updateEducation(){\r\n    this.service.updateEducation(this.education, this.id).subscribe(\r\n      (res: any) => {\r\n        console.log(\"updated\");\r\n      });\r\n      this.dialogRef.close();\r\n    }\r\n}\r\n","\r\n<div class=\"container h-100 d-flex justify-content-center\">\r\n    <form (ngSubmit)=\"updateEducation()\" #EducationForm=\"ngForm\">\r\n    <div class=\"d-flex justify-content-between align-items-center mb-3\">\r\n        <h2 >Edit your Education</h2>\r\n    </div>\r\n    \r\n    <div class=\"row mt-3\">\r\n        <div class=\"col-md-12\"><label class=\"labels\">School</label>\r\n            <input type=\"text\" class=\"form-control\" id=\"school\"\r\n            required\r\n            [(ngModel)]=\"education.school\" name=\"school\"\r\n            #school=\"ngModel\">\r\n        </div>\r\n        <div class=\"col-md-12\"><label class=\"labels\">Start year</label>\r\n            <select id=\"startYearEducation\" name=\"startYearEducation\" [(ngModel)]=\"education.startYearEducation\"\r\n                    class=\"form-control\">\r\n                    <option *ngFor=\"let y of years\" [value]=\"y.year\">\r\n                    {{y.year}}\r\n                    </option>\r\n                    </select>\r\n        </div>\r\n        <div class=\"col-md-12\"><label class=\"labels\">End year</label>\r\n            <select id=\"endYearEducation\" name=\"endYearEducation\" [(ngModel)]=\"education.endYearEducation\"\r\n            class=\"form-control\">\r\n            <option *ngFor=\"let y of years\" [value]=\"y.year\">\r\n            {{y.year}}\r\n            </option>\r\n            </select>\r\n        </div>\r\n    </div>\r\n    <div class=\"row mt-3\">\r\n        <div class=\"col-md-12\"><label class=\"labels\">Degree</label>\r\n            <input type=\"text\" class=\"form-control\" id=\"degreeEducation\"\r\n            required\r\n            [(ngModel)]=\"education.degreeEducation\" name=\"degreeEducation\"\r\n            #degreeEducation=\"ngModel\">\r\n        </div>\r\n        <div class=\"col-md-12\"><label class=\"labels\">Field of study</label>\r\n            <input type=\"text\" class=\"form-control\" id=\"fieldStudy\"\r\n            required\r\n            [(ngModel)]=\"education.fieldStudy\" name=\"fieldStudy\"\r\n            #fieldStudy=\"ngModel\">\r\n        </div>\r\n        <div class=\"col-md-12\"><label class=\"labels\">Description</label>\r\n            <input type=\"text\" class=\"form-control\" id=\"descriptionEducation\"\r\n            required\r\n            [(ngModel)]=\"education.descriptionEducation\" name=\"descriptionEducation\"\r\n            #descriptionEducation=\"ngModel\">\r\n        </div>\r\n    </div>\r\n    <div class=\"mt-5 text-center\"><button class=\"btn btn-primary profile-button\" type=\"submit\" >Save</button></div>\r\n\r\n</form>","import { User } from './../../classes/Profile/User';\r\nimport { ProfileService } from './../../services/profile/profile.service';\r\nimport { Component, Inject, OnInit } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport {\r\n  MatSnackBar,\r\n  MatSnackBarHorizontalPosition,\r\n  MatSnackBarVerticalPosition,\r\n} from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-dialog-add-profile',\r\n  templateUrl: './dialog-add-profile.component.html',\r\n  styleUrls: ['./dialog-add-profile.component.css']\r\n})\r\nexport class DialogAddProfileComponent implements OnInit {\r\n\r\n  constructor(private profileService: ProfileService,  \r\n              public dialogRef: MatDialogRef<DialogAddProfileComponent>,\r\n              @Inject(MAT_DIALOG_DATA) public data: any,\r\n              private _snackBar: MatSnackBar,\r\n              private router: Router) { }\r\n  profileToAdd: {};\r\n  aboutToAdd : {};\r\n  userId: number = parseInt(localStorage.getItem('userId'));\r\n  //User = new User(1, \"adsf\");\r\n  languages = [\r\n    {name: \"English\"},\r\n    {name: \"French\"},\r\n    {name: \"Spanish\"},\r\n    {name: \"Urdu\"}\r\n  ]\r\n\r\n  CloseDialog(){\r\n    this.dialogRef.close();\r\n  }\r\n  submit(pId){\r\n    this.router.navigate(['users/',this.userId, 'profiles', pId]);\r\n    this.CloseDialog();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    // this.userId = this.data.User.id;\r\n    console.log(\"in diload add profile\");\r\n    console.log(this.userId)\r\n  }\r\n\r\n  onSubmitProfile(data){\r\n    this.profileToAdd = {\r\n      \"language\": data.language,\r\n      \"userId\": this.userId\r\n    }\r\n    this.profileService.addProfile(<JSON>this.profileToAdd, this.userId)\r\n      .subscribe(\r\n        newProfile => {\r\n          \r\n          console.log(\"New Profile Added ----------------\");\r\n          console.log(newProfile);\r\n\r\n          this.aboutToAdd = {\r\n            \"content\": data.about,\r\n            \"profileId\": newProfile\r\n            }\r\n          \r\n          this.profileService.addAbout(<JSON>this.aboutToAdd,  this.userId, newProfile).subscribe(data=>{\r\n\r\n          console.log(\"test about\");\r\n          console.log(this.aboutToAdd);\r\n          this.submit(newProfile);\r\n         \r\n          })\r\n          //  this.CloseDialog();\r\n        }\r\n        , \r\n        (error: Response) => {\r\n          if(error.status === 409){\r\n            this._snackBar.open('Given Language already exist Exists!', 'End now', {\r\n              duration: 2000,\r\n            });\r\n            } \r\n             else if(error.status === 401)\r\n            {\r\n              console.log(\"sorry not sorry\");\r\n            } \r\n            else \r\n            {\r\n              alert('error')\r\n            }\r\n        });\r\n        \r\n       \r\n  }\r\n}\r\n","\r\n<h1>Add Profile</h1>\r\n\r\n<form class=\"text-center\" #userProfile=\"ngForm\" (ngSubmit)=\"onSubmitProfile(userProfile.value)\">\r\n<!-- <div class=\"form-group\"> -->\r\n        <!-- <label for=\"language\"> Language</label> -->\r\n\r\n        <mat-form-field appearance=\"fill\">\r\n            <mat-label>Language</mat-label>\r\n            <mat-select name=\"language\" ngModel>\r\n                <mat-option value=\"\" disabled>Choose a language</mat-option>\r\n                <mat-option *ngFor = \"let l of languages\" [value]=\"l.name\">\r\n                    {{l.name}}\r\n                </mat-option>\r\n            </mat-select>\r\n        </mat-form-field>\r\n    <!-- </div> -->\r\n\r\n<div class=\"form-group\">\r\n    <label for=\"about\">About </label>\r\n    <textarea \r\n            required \r\n            minlength=\"25\" \r\n            maxlength=\"200\" \r\n            ngModel \r\n            name=\"about\"  \r\n            #about =\"ngModel\" \r\n            id=\"about\" \r\n            cols=\"25\" \r\n            rows=\"10\" \r\n            class=\"form-control\">\r\n    </textarea>\r\n\r\n    <div class=\"alert alert-danger\" \r\n    *ngIf=\"about.touched && !about.valid\">\r\n            <div *ngIf=\"about.errors.required\">\r\n                About is required\r\n            </div>   \r\n            <div *ngIf=\"about.errors.minlength\"> \r\n                minimum length is  {{about.errors.minlength.requiredLength}}\r\n            </div>\r\n    </div>\r\n    </div> \r\n    <button \r\n        mdbBtn \r\n        type=\"submit\"  \r\n        rounded=\"true\" \r\n        id=\"submitButton\" > submit\r\n    </button>\r\n    <button mdbBtn type=\"button\" class=\"closeButton\" (click)=\"CloseDialog()\">Close</button>   \r\n\r\n</form>\r\n","import { UserType } from './UserType';\r\n\r\nexport class User {\r\n    id: number;\r\n    firstName: string;\r\n    lastName: string;\r\n    userEmail: string;\r\n    email:string;\r\n    password: string;; \r\n    phoneNumbar: string;; \r\n    addressId: number;\r\n    locationId: number;\r\n    departmentId: number; \r\n    userNumber: string; \r\n    image: string;\r\n    userType: UserType;\r\n    \r\n    constructor(\r\n        public id: number\r\n    ) {  }\r\n}","\r\nexport class About{\r\n    constructor(\r\n        public id: number,\r\n        public profileId: number,\r\n        public content: string,\r\n    ) {  }\r\n}\r\n\r\n","import { Profile } from './../classes/Profile/Profile';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { User } from '../classes/Profile/User';\r\nimport { UserDTO } from '../classes/Profile/UserDTO';\r\nimport { ProfileService } from '../services/profile/profile.service';\r\nimport { UserService } from '../services/user.service';\r\nimport { forEachChild } from 'typescript';\r\nimport { DialogAddProfileComponent } from '../profile/dialog-add-profile/dialog-add-profile.component';\r\nimport { MatDialog } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.css']\r\n})\r\nexport class HeaderComponent implements OnInit {\r\n\r\n  searchText='';\r\n\r\n  userId: number = this.service.getUserIdOfLoggedIn();\r\n\r\n  profileId : number;\r\n  profiles : Profile[];\r\n  constructor(private service: UserService,\r\n      private profileService: ProfileService,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    public dialog: MatDialog,) { }\r\n    users: UserDTO[];\r\n    \r\n    \r\n    submit(){\r\n      this.router.navigate(['users/',this.userId, 'profiles', this.profileId])\r\n    //   window.location.href = 'users/'+this.userId+'/profiles/'+this.profileId;\r\n    }\r\n    \r\n    openDialogProfile(): void {\r\n      const dialogRef = this.dialog.open(DialogAddProfileComponent, {\r\n        width: '50%',\r\n        data: {Id: this.userId},\r\n        panelClass: ['custom-modalbox','animate__animated','animate__slideInLeft']\r\n        }) \r\n      dialogRef.afterClosed()\r\n        .subscribe(res => {\r\n          location.reload(); \r\n      });\r\n    }\r\n    ngOnInit(): void {\r\n     \r\n\r\n    this.profileService.getProfile(this.userId).subscribe(response =>{\r\n      this.profiles = <Profile[]>response;\r\n      // this.userId = parseInt(localStorage.getItem(\"userId\"));\r\n      this.profileId = this.profiles[0]?.id;\r\n    });\r\n    this.profileService.getAllUsers().subscribe(data =>{\r\n      this.users=<UserDTO[]>data;\r\n      console.log(data);\r\n    });\r\n  }\r\n  logout(){\r\n   \r\n    localStorage.clear();\r\n    this.service.logout();\r\n  }\r\n  \r\n\r\n}\r\n","<!--Navbar-->\r\n<mdb-navbar class=\"customNav\" SideClass=\"navbar navbar-expand-lg navbar-dark\" [containerInside]=\"false\">\r\n\r\n  <!-- Navbar brand -->\r\n  <mdb-navbar-brand><a class=\"navbar-brand\" href=\"#\">FontysIN</a></mdb-navbar-brand>\r\n\r\n  <!-- Collapsible content -->\r\n  <links>\r\n\r\n    <!-- Links -->\r\n    <ul class=\"navbar-nav mr-auto\">\r\n      <li class=\"nav-item\" routerLinkActive=\"active\">\r\n        <a class=\"nav-link waves-light\" href=\"/\" mdbWavesEffect>Home<span class=\"sr-only\">(current)</span></a>\r\n      </li>\r\n      <div *ngIf=\"profiles?.length> 0; else noProfile\">\r\n      <li class=\"nav-item\" routerLinkActive=\"active\">\r\n        <a class=\"nav-link waves-light\"\r\n        (click)=\"submit()\"\r\n        mdbWavesEffect>Profile</a>\r\n      </li>\r\n      </div>\r\n      <ng-template #noProfile>\r\n        <li class=\"nav-item\" routerLinkActive=\"active\">\r\n          <a class=\"nav-link waves-light\"\r\n          (click) = \"openDialogProfile()\"\r\n          mdbWavesEffect>Profile</a>\r\n        </li>\r\n      </ng-template>\r\n      <li class=\"nav-item\" routerLinkActive=\"active\">\r\n        <a class=\"nav-link \r\n            waves-light\" \r\n            href=\"#\" \r\n            mdbWavesEffect\r\n            [routerLink]=\"['/messages']\">Messages</a>\r\n      </li>\r\n      <li class=\"nav-item\" routerLinkActive=\"active\">\r\n        <a class=\"nav-link waves-light\"\r\n           [routerLink]=\"['/users', 1, 'connections']\"\r\n           mdbWavesEffect>\r\n          Connections\r\n        </a>\r\n      </li>\r\n\r\n\r\n\r\n    </ul>\r\n    <!-- Links -->\r\n\r\n    <ul class=\"navbar-nav ml-auto nav-flex-icons\">\r\n      <!-- Dropdown -->\r\n      <li class=\"nav-item dropdown\" dropdown>\r\n        <a dropdownToggle mdbWavesEffect type=\"button\" class=\"nav-link dropdown-toggle waves-light\" mdbWavesEffect>\r\n          Account<span class=\"caret\"></span>\r\n        </a>\r\n        <div *dropdownMenu class=\"dropdown-menu dropdown dropdown-primary\" role=\"menu\">\r\n          <a class=\"dropdown-item waves-light\" mdbWavesEffect href=\"settings\">Settings</a>\r\n        \r\n          <div class=\"divider dropdown-divider\"></div>\r\n          <a class=\"dropdown-item\" routerLink=\"/\"(click)=\"logout()\">Log out</a>\r\n        </div>\r\n      </li>\r\n\r\n      <form class=\"form-inline waves-light\" mdbWavesEffect>\r\n        <div class=\"md-form my-0\">\r\n          <input list=\"browsers\" id=\"search-text\" [(ngModel)]=\"searchText\" name=\"searchText\" class=\"form-control mr-sm-2\" \r\n          type=\"search\" placeholder=\"Search\" autofocus>\r\n\r\n          <datalist id=\"browsers\">\r\n          \r\n            <div *ngFor=\"let user of users | search: searchText\">\r\n              <option> \r\n                <td class=\"font-italic\"> \r\n                  <div [routerLink]=\"['/users', user.id, 'profiles', user.profileId]\">\r\n                    {{user.firstName}}  {{user.lastName}}\r\n                  </div>\r\n                </td>\r\n            </div>\r\n            \r\n          </datalist>\r\n\r\n        </div>\r\n\r\n      </form>\r\n\r\n      <form class=\"form-inline waves-light\" mdbWavesEffect>\r\n        <div class=\"example-button-container\">\r\n          <button mat-mini-fab aria-label=\"Example icon button with a filter alt icon\" [routerLink]=\"['/users', 'filter']\">\r\n            <mat-icon>filter_alt</mat-icon>\r\n          </button>\r\n        </div>\r\n      </form>\r\n      \r\n    </ul>\r\n  </links>\r\n  <!-- Collapsible content -->\r\n\r\n</mdb-navbar>\r\n\r\n","import { Component, Input, OnInit } from '@angular/core';\r\n\r\nimport { Router } from '@angular/router';\r\nimport { PostsService} from '../services/posts.service';\r\nimport { Moment } from 'moment';\r\nimport { User } from '../classes/Profile/User';\r\nimport { ProfileService } from '../services/profile/profile.service';\r\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';\r\nimport {\r\n  MatSnackBar,\r\n  MatSnackBarHorizontalPosition,\r\n  MatSnackBarVerticalPosition,\r\n} from '@angular/material/snack-bar';\r\nimport { UpdatePostDialogComponent } from './update-post-dialog/update-post-dialog.component';\r\nimport { PostValidator} from './post.validator';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { FormControl, Validators } from '@angular/forms';\r\nimport { UserService } from '../services/user.service'\r\n\r\nexport interface Post {\r\n  content: string;\r\n  date: string;\r\n  id: number;\r\n  userId: number;\r\n  image: string;\r\n}\r\nexport interface Like {\r\n  id: number;\r\n  postId: number;\r\n  userId: number;\r\n}\r\nexport interface Comment {\r\n  content: string;\r\n  date: string;\r\n  id: number;\r\n  userId: number;\r\n  postId: number;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-post',\r\n  templateUrl: './post.component.html',\r\n  styleUrls: ['./post.component.css']\r\n})\r\nexport class PostComponent implements OnInit {\r\n\r\n  form = new FormGroup({\r\n    postText: new FormControl('', [Validators.required, PostValidator.cannotContainSpace]),\r\n    \r\n    \r\n   });\r\n\r\n  @Input()  post : Post;\r\n  checked: boolean;\r\n  comments: Comment[];\r\n  userId :number = this.userService.getUserIdOfLoggedIn();\r\n  @Input() id ;\r\n  constructor( private postService: PostsService, private profileService: ProfileService,private router: Router,public dialog: MatDialog,\r\n    private _snackBar: MatSnackBar,  private userService : UserService) { }\r\n  data = {};\r\n  content : String;\r\n  commentContent : String;\r\n  commentData = {};\r\n  likeData = {};\r\n  time : Moment;\r\n  user: User;\r\n  likeCount = 0;\r\n  userLikeOnPost : Like;\r\n  wasClicked = true;\r\n  clicked = false;\r\n\r\n \r\n\r\n  getUserById(id){\r\n    user: User;\r\n    this.profileService.getUser(this.post.userId)\r\n    .subscribe((data)=>\r\n    {\r\n     \r\n      return <User>data;\r\n\r\n    });\r\n\r\n  }\r\n\r\n  createComment(id) {\r\n    this.commentData = {\r\n      \"content\": this.commentContent,\r\n      \"id\": 0,\r\n      \"postId\": id,\r\n      \"userId\": this.userId\r\n      };\r\n    this.postService.newComment(<JSON>this.commentData);\r\n    // window.location.reload();\r\n    \r\n  }\r\n\r\n  checkIds(){\r\n    console.log(\"compare to ids\");\r\n    console.log(this.userId);\r\n    console.log( this.post?.userId);\r\n    if( this.userId == this.post?.userId){\r\n      this.checked = true;\r\n    } else {\r\n      this.checked = false;\r\n    }\r\n    console.log(this.checked);\r\n  }\r\n\r\n  createPost() {\r\n    this.data = {\r\n      \"content\": this.content,\r\n      \"id\": 5,\r\n      \"userId\": this.userId\r\n      };\r\n    this.postService.newPost(<JSON>this.data);\r\n    window.location.reload()\r\n  }\r\n\r\n  deletePost(id){\r\n    this.postService.deletePost(id);\r\n    window.location.reload()\r\n  }\r\n\r\n  likePost(){\r\n    this.likeData = {\r\n      \"id\":1,\r\n      \"likerId\": this.userId,\r\n      \"postId\": this.id\r\n    }\r\n    this.postService.newLikeOnPost(this.id,this.likeData);\r\n    this.likeCount += 1;\r\n    \r\n  }\r\n\r\n  openUpdateDialog(){\r\n    const dialogRef = this.dialog.open(UpdatePostDialogComponent, {\r\n      width: '50%',\r\n      data: {p: this.post},\r\n      panelClass: ['custom-modalbox','animate__animated','animate__slideInLeft']\r\n  \r\n    }); \r\n    dialogRef.afterClosed();\r\n  }\r\n  postUrl : string;\r\n  lenImg(){\r\n    if(this.postUrl?.length >0){\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n\r\n  ngOnInit(): void {\r\n    this.postService.getPostLikesCount(this.id)\r\n    .subscribe((data)=>\r\n    {\r\n      \r\n      this.likeCount=<number>data;\r\n\r\n    });\r\n    this.postService.getPostLikeByUser(this.id,this.userId)\r\n     .subscribe((data)=>{\r\n     \r\n      this.userLikeOnPost = <Like>data;\r\n   });\r\n   this.checkIds();\r\n   this.postService.getCommentsByPostId(this.id)\r\n   .subscribe((data)=>{\r\n   console.log(data);\r\n    this.comments = <Comment[]>data;\r\n    });\r\n    this.profileService.getUser(this.post.userId)\r\n    .subscribe((data)=>\r\n    {\r\n      console.log(data);\r\n      this.user=<User>data;\r\n\r\n    });\r\n    this.postUrl = this.post.image;\r\n  }\r\n\r\n}\r\n","\r\n\r\n<div class=\"container\">\r\n    \r\n        \r\n    <div class=\"post-block\">\r\n    \r\n\r\n    <div *ngIf=\"checked; then thenB else elseB\"></div>\r\n        <ng-template #thenB>\r\n            <div class=\"icons\">\r\n            <button class=\"float-right\" mat-icon-button ria-label=\"\" (click)=\"deletePost(post.id)\">\r\n                <mat-icon>remove_circle_outline</mat-icon>\r\n              </button>\r\n              <button mat-icon-button ria-label=\"\" (click)=\"openUpdateDialog()\" class=\"float-right\">\r\n                <mat-icon>border_color</mat-icon>\r\n              </button>\r\n            </div>\r\n        </ng-template>\r\n        <ng-template #elseB></ng-template>\r\n\r\n       \r\n        \r\n          \r\n    \r\n    <p style=\"font-size: 11px;\">Post created by <a [routerLink]=\"['/users', post.userId, 'profiles', 1]\" target=\"_blank\" style=\"text-decoration: underline;\">\r\n       <app-comment-username [userId]=\"post.userId\"></app-comment-username> \r\n    </a></p>\r\n    \r\n    <h2>{{post.content}}</h2>\r\n    <div *ngIf=\"lenImg()\"> <img src=\"{{post.image}}\" class=\"post-img\"></div>\r\n    <br>\r\n    <p class=\"p-date\">{{post.date.substring(0,10)}} {{post.date.substring(11,16)}}</p>\r\n    <p></p>\r\n    \r\n\r\n    \r\n    \r\n    <div *ngIf=\"userLikeOnPost; then thenBlock else elseBlock\"></div>\r\n    <ng-template #thenBlock><button disabled class=\"liked_btn\"   ></button></ng-template>\r\n    <ng-template #elseBlock>\r\n        <button disabled class=\"liked_btn\"   ></button>\r\n        <button class=\"like_btn\" [hidden]=\"clicked\" (click) = \"likePost(); clicked = true;\"  [class.test]=\"wasClicked\"></button></ng-template>\r\n    <input class=\"like_input\" disabled [(ngModel)] = \"likeCount\">\r\n    <br>\r\n    <hr>\r\n        <div class=\"comment-block\">\r\n\r\n            \r\n\r\n            <div id=\"creatPostBlock\">\r\n                \r\n                <form name=\"form\" [formGroup]=\"form\" (ngSubmit)=\"form.valid\">\r\n                    <div class=\"form-group\">\r\n                        \r\n                        <textarea [(ngModel)] = \"commentContent\" placeholder=\"Your awesome comment...\" id = \"newPostText\" formControlName=\"postText\" [ngClass]=\"{'is-invalid':form.get('postText').touched && form.get('postText').invalid}\" required></textarea> <br>\r\n               \r\n                        <div class=\"invalid-feedback\">\r\n                            <div>You need to write something first</div>\r\n                        </div>\r\n                    </div>\r\n                    <button (click) =\"createComment(post.id)\" class = \"postBtn\" [disabled]=\"!form.valid\" >Post</button>\r\n                    \r\n                </form>\r\n                <br><br>\r\n                <br><br>\r\n                \r\n                </div>\r\n\r\n        <div *ngFor=\"let comm of comments\">\r\n            <a>\r\n            <br>\r\n            <hr>\r\n            <p style=\"font-size: 11px;\">Comment left by user: <a [routerLink]=\"['/users', comm.userId, 'profiles', 1]\" target=\"_blank\" style=\"text-decoration: underline;\"><app-comment-username [userId]=\"post.userId\"></app-comment-username> </a> </p>\r\n            <h2>{{comm.content}}</h2>\r\n            <p class=\"p-date\">{{post.date.substring(0,10)}} {{post.date.substring(11,16)}}</p>\r\n            \r\n            <br>\r\n            \r\n            \r\n            </a>\r\n          \r\n          </div>\r\n        </div>\r\n    </div>\r\n    \r\n  \r\n  \r\n</div>\r\n\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-bad-request',\r\n  templateUrl: './bad-request.component.html',\r\n  styleUrls: ['./bad-request.component.css']\r\n})\r\nexport class BadRequestComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<section>\r\n    <div id=\"content\">\r\n    <h1>400</h1>\r\n    <p class=\"type\">Error: 400 Bad Request</p>\r\n    <h2>The request cannot be fulfilled due to bad syntax.</h2>\r\n    </div>\r\n</section>","export class Resume {\r\n    profilePic: string;\r\n    name: string;\r\n    address: string;\r\n    contactNo: number;\r\n    email: string;\r\n    socialProfile: string;\r\n    experiences: Experience[] = [];\r\n    educations: Education[] = [];\r\n    otherDetails: string;\r\n    skills: Skill[] = [];\r\n    constructor() {\r\n        this.experiences.push(new Experience());\r\n        this.educations.push(new Education());\r\n        this.skills.push(new Skill());\r\n    }\r\n}\r\nexport class Experience {\r\n    employer: string;\r\n    jobTitle: string;\r\n    jobDescription: string;\r\n    startDate: string;\r\n    experience: number;\r\n}\r\nexport class Education {\r\n    degree: string;\r\n    college: string;\r\n    passingYear: string;\r\n    percentage: number;\r\n}\r\nexport class Skill {\r\n    value: string;\r\n}","\r\n\r\nenum EmplymentType {\r\n    FullTime,\r\n    PartTime,\r\n    FreeLancer\r\n}\r\n\r\nexport class Experience{\r\n    constructor( \r\n        public id: number,\r\n        public  profileId: number,\r\n        public  title: string,\r\n        public  company:string,\r\n        public  employmentType : string,\r\n        public  location: string,\r\n        public  startDateExperience: number,\r\n        public  endDateExperience: number,\r\n        public  descriptionExperience: string,\r\n      ) {  }\r\n}","import { ProfileService } from './../services/profile/profile.service';\r\nimport { Skill } from './../classes/Profile/Skill';\r\nimport { Component, OnInit, Inject } from '@angular/core';\r\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';\r\nimport { ProfileComponent } from '../profile/profile.component';\r\n\r\n\r\n@Component({\r\n  selector: 'app-delete-skill',\r\n  templateUrl: './delete-skill.component.html',\r\n  styleUrls: ['./delete-skill.component.css']\r\n})\r\nexport class DeleteSkillComponent implements OnInit {\r\n\r\n  loggedInUser: number = 5;\r\n\r\n  constructor(\r\n    private profileService: ProfileService,\r\n    public dialogRef: MatDialogRef<DeleteSkillComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any) {\r\n      console.log(data);\r\n    }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  //close dialog \r\n  noClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  //delete skill\r\n  deleteSkill() {\r\n    this.profileService.deleteSkill(this.loggedInUser, this.data.skill.profileId, this.data.skill.id).subscribe();\r\n    console.log(this.loggedInUser + \" \" + this.data.skill.profileId + \" \" + this.data.skill.id);\r\n\r\n    // Close dialog\r\n    this.dialogRef.close();\r\n  }\r\n\r\n}\r\n","<div id=\"confirm\" mat-dialog-content>\r\n  <p> Do you want to delete this skill?</p>\r\n</div>\r\n<div mat-dialog-actions>\r\n    <button mat-raised-button cdkFocusInitial (click)=\"deleteSkill()\">Yes</button>\r\n    <button mat-raised-button (click)=\"noClick()\">No</button>  \r\n</div> ","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHandler, HttpHeaders } from '@angular/common/http';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PostsService {\r\n\r\n  constructor(private httpClient: HttpClient) { this.readLocalStorageValue(); }\r\n  readLocalStorageValue() {\r\n    if(localStorage.getItem(\"userToken\") != null){\r\n      this.httpOptions.headers = this.httpOptions.headers.set('Authorization', localStorage.getItem(\"userToken\"));\r\n    };\r\n}\r\n  httpOptions = {\r\n    headers: new HttpHeaders({\r\n      'Content-Type': 'application/json'\r\n    })\r\n  };\r\n  public getPosts(){\r\n   return this.httpClient.get('http://localhost:9090/posts/user/'+ 1, this.httpOptions);\r\n  }\r\n\r\n  public getPostLikes(id){\r\n    return this.httpClient.get('http://localhost:9090/posts/'+id+\"/likes\", this.httpOptions);\r\n   } \r\n\r\n  public newLikeOnPost(id,data){\r\n    return this.httpClient.post('http://localhost:9090/posts/'+id+\"/likes\", data, this.httpOptions).toPromise().then(data => {\r\n      console.log(data);\r\n    });\r\n  }\r\n   public getPostLikeByUser(id,userid){\r\n    return this.httpClient.get('http://localhost:9090/posts/'+id+\"/likes/user/\"+userid, this.httpOptions);\r\n   }\r\n  public getPostLikesCount(id){\r\n    return this.httpClient.get('http://localhost:9090/posts/'+id+\"/likes/count\", this.httpOptions);\r\n   }\r\n\r\n  public getNewsfeed(id){\r\n    return this.httpClient.get('http://localhost:9090/posts/newsfeed/'+id,this.httpOptions);\r\n   }\r\n\r\n  public getPost(id){\r\n    return this.httpClient.get('http://localhost:9090/posts/'+id, this.httpOptions);\r\n   }\r\n\r\n  public newPost(data){\r\n    return this.httpClient.post('http://localhost:9090/posts', data, this.httpOptions).toPromise().then(data => {\r\n      console.log(data);\r\n    });\r\n    \r\n  }\r\n\r\n  public updatePost(data,id){\r\n    return this.httpClient.put('http://localhost:9090/posts/'+id, data, this.httpOptions).toPromise().then(data => {\r\n      console.log(data);\r\n    });\r\n    \r\n  }\r\n\r\n  public deletePost(id){\r\n    return this.httpClient.delete('http://localhost:9090/posts/'+id, this.httpOptions).toPromise().then(data => {\r\n      console.log(data);\r\n    });\r\n  }\r\n\r\n  public getCommentsByPostId(id){\r\n    return this.httpClient.get('http://localhost:9090/comments/post/'+id, this.httpOptions);\r\n  }\r\n  \r\n  public uploadPicture(userId, data){\r\n    return this.httpClient.put('http://localhost:9090/posts/'+userId+'/uploadPicture', data, {responseType: 'text'})\r\n  }\r\n\r\n  public newComment(data){\r\n    return this.httpClient.post('http://localhost:9090/comments', data, this.httpOptions).toPromise().then(data => {\r\n      console.log(data);\r\n    });\r\n    \r\n  }\r\n  \r\n}\r\n","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { employmentType } from 'src/app/classes/Profile/EmploymentType';\r\nimport { Experience } from 'src/app/classes/Profile/Experience';\r\nimport { ProfileService } from 'src/app/services/profile/profile.service';\r\nimport { UpdateProfileExperienceComponent } from 'src/app/update-profile-experience/update-profile-experience.component';\r\n\r\n@Component({\r\n  selector: 'app-dialog-add-experience',\r\n  templateUrl: './dialog-add-experience.component.html',\r\n  styleUrls: ['./dialog-add-experience.component.css']\r\n})\r\nexport class DialogAddExperienceComponent implements OnInit {\r\n\r\n  userId: number;\r\n  profileId: number;\r\n  experienceToAdd: {};\r\n\r\n  years = [\r\n    {year : 2010},\r\n    {year : 2011},\r\n    {year : 2012},\r\n    {year : 2013},\r\n    {year : 2014},\r\n    {year : 2015}\r\n  ]\r\n  languages = [\r\n    {name: \"English\"},\r\n    {name: \"French\"},\r\n    {name: \"Spanish\"},\r\n    {name: \"Urdu\"}\r\n  ]\r\n\r\n  jobType = [\r\n    {name: \"FullTime\"},\r\n    {name: \"PartTime\"},\r\n    {name: \"FreeLancer\"}\r\n  ]\r\n\r\n  constructor( private profileService: ProfileService,  \r\n               public dialogRef: MatDialogRef<DialogAddExperienceComponent>,\r\n               @Inject(MAT_DIALOG_DATA) public data: any) { }\r\n \r\n  CloseDialog(){\r\n    this.dialogRef.close();\r\n  }\r\n  ngOnInit(): void {\r\n    this.userId = this.data.User.id;\r\n    this.profileId = this.data.Profile;\r\n\r\n    console.log(this.userId);\r\n    console.log(this.profileId);\r\n\r\n  }\r\n  onSubmitExperience(data){\r\n   \r\n    this.experienceToAdd = {\r\n      \"company\": data.company,\r\n      \"descriptionExperience\": data.descriptionExperience,\r\n      \"employmentType\":data.employementType,\r\n      \"endDateExperience\": parseInt(data.endDateExperience),\r\n      // \"id\":453,\r\n      \"location\": data.locationId,\r\n      \"profileId\": this.profileId,\r\n      \"startDateExperience\": parseInt(data.startDateExperience),\r\n      \"title\": data.title\r\n       }\r\n       console.warn(this.experienceToAdd);\r\n       this.profileService.addExperience(<JSON>this.experienceToAdd, this.userId, this.profileId)\r\n       this.CloseDialog();\r\n       \r\n  }\r\n  \r\n}\r\n","\r\n<h1> Add Experience </h1>\r\n<form  class=\"text-center border-silver\" #userExperience=\"ngForm\" (ngSubmit)=\"onSubmitExperience(userExperience.value)\"> \r\n    <mat-form-field class=\"input-full-width\">\r\n    <input required matInput type=\"text\" name=\"company\" ngModel placeholder=\"Company\"> \r\n    </mat-form-field>\r\n    \r\n    <br>\r\n\r\n    <mat-form-field class=\"input-full-width\">\r\n    <input required matInput type=\"text\" name=\"title\" ngModel placeholder=\"Title\"> \r\n    </mat-form-field><br>\r\n\r\n    <mat-form-field class=\"input-full-width\">     \r\n    <mat-select required name=\"employementType\" ngModel>\r\n        <mat-option value=\"\" disabled>Job Type </mat-option>\r\n        <mat-option *ngFor = \"let l of jobType\" [value]=\"l.name\">\r\n            {{l.name}}\r\n        </mat-option>\r\n    </mat-select>\r\n    </mat-form-field>  \r\n    <br>\r\n\r\n    <mat-form-field class=\"input-full-width\"> \r\n    <input required matInput type=\"text\" name=\"locationId\" ngModel placeholder=\"London, United Kingdom\"> \r\n    </mat-form-field>\r\n    <br>\r\n    <mat-form-field class=\"input-full-width\">\r\n        <mat-select required name=\"startDateExperience\" ngModel>\r\n            <mat-option value=\"\" disabled>Starting Year </mat-option>\r\n            <mat-option *ngFor = \"let l of years\" [value]=\"l.year\">\r\n                {{l.year}}\r\n            </mat-option>\r\n        </mat-select>\r\n\r\n    <!-- <input matInput type=\"text\" name=\"startDateExperience\" ngModel placeholder=\"ex: 2016\"> -->\r\n    </mat-form-field>\r\n    <br>\r\n\r\n    \r\n    <mat-form-field class=\"input-full-width\">\r\n\r\n        <mat-select required name=\"endDateExperience\" ngModel >\r\n            <mat-option value=\"\" disabled>Ending Year </mat-option>\r\n            <mat-option *ngFor = \"let l of years\" [value]=\"l.year\">\r\n                {{l.year}}\r\n            </mat-option>\r\n        </mat-select>\r\n\r\n    <!-- <input matInput type=\"text\" name=\"endDateExperience\" ngModel placeholder=\"ex: 2020\">  -->\r\n    </mat-form-field>\r\n    <br>\r\n\r\n    <mat-form-field class=\"input-full-width\">\r\n    <input required matInput type=\"text\" name=\"descriptionExperience\" ngModel placeholder=\"Ex: I have had a very good experience\"> \r\n    </mat-form-field>\r\n    <br>\r\n    <button \r\n        [disabled] = \"!userExperience.valid\" \r\n        mdbBtn \r\n        type=\"submit\"  \r\n        rounded=\"true\" \r\n        id=\"submitButton\"\r\n        id=\"submitButton\" > submit\r\n    </button>\r\n    <button mdbBtn type=\"button\" class=\"closeButton\" (click)=\"CloseDialog()\">Close</button>   \r\n\r\n</form>","import { Component, Input, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { PostsService} from '../services/posts.service';\r\nimport { Moment } from 'moment';\r\nimport { User } from '../classes/Profile/User';\r\nimport { ProfileService } from '../services/profile/profile.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-comment-username',\r\n  templateUrl: './comment-username.component.html',\r\n  styleUrls: ['./comment-username.component.css']\r\n})\r\nexport class CommentUsernameComponent implements OnInit {\r\n\r\n  constructor(private postService: PostsService, private profileService: ProfileService) { }\r\n\r\n  user : User;\r\n  @Input() userId ;\r\n  ngOnInit(): void {\r\n    this.profileService.getUser(this.userId)\r\n    .subscribe((data)=>\r\n    {\r\n     \r\n      this.user=<User>data;\r\n\r\n    });\r\n  }\r\n\r\n}\r\n","{{user?.firstName}} {{user?.lastName}} \r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHandler, HttpHeaders } from '@angular/common/http';\r\nimport jwt_decode from 'jwt-decode';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserService {\r\n\r\n  constructor(private httpClient: HttpClient) {  this.readLocalStorageValue(); }\r\n\r\n  readLocalStorageValue() {\r\n    if(localStorage.getItem(\"userToken\") != null){\r\n      this.httpOptions.headers = this.httpOptions.headers.set('Authorization',  localStorage.getItem(\"userToken\"));\r\n    };\r\n}\r\n  httpOptions = {\r\n    headers: new HttpHeaders({\r\n      'Content-Type': 'application/json'\r\n    })\r\n  };\r\n\r\n  \r\n  login(email, password){\r\n   \r\n    const body = email+\":\"+password;\r\n    return this.httpClient.post('http://localhost:9090/users/login', body, {responseType: 'text'});\r\n   }\r\n \r\n   logout(){\r\n     this.httpOptions.headers = this.httpOptions.headers.delete('Authorization');\r\n   }\r\n   getDecodedAccessToken(token: string): any {\r\n    try{\r\n        return jwt_decode(token);\r\n    }\r\n    catch(Error){\r\n        return null;\r\n    }\r\n  }\r\n\r\n  getUserIdOfLoggedIn(){\r\n    var decoded = this.getDecodedAccessToken(localStorage.getItem(\"userToken\"))\r\n    var userId = decoded['jti'];\r\n    return userId;\r\n  }\r\n \r\n\r\n}\r\n","import { Injectable, NgZone } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NotificationService {\n\n  constructor(\n    public snackBar: MatSnackBar,\n    private zone: NgZone) { }\n\n  showSuccess(message: string): void {\n    // Had an issue with the snackbar being ran outside of angular's zone.\n    this.zone.run(() => {\n      this.snackBar.open(message);\n    });\n  }\n\n  showError(message: string): void {\n    this.zone.run(() => {\n      // The second parameter is the text in the button. \n      // In the third, we send in the css class for the snack bar.\n      this.snackBar.open(message, 'X', {panelClass: ['error']});\n    });\n  }\n}\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { DataService } from '../data.service';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class FilterService {\r\n  readLocalStorageValue() {\r\n    if(localStorage.getItem(\"userToken\") != null){\r\n      this.httpOptions.headers = this.httpOptions.headers.set('Authorization',localStorage.getItem(\"userToken\"));\r\n    };\r\n}\r\n  httpOptions = {\r\n    headers: new HttpHeaders({\r\n      'Content-Type': 'application/json'\r\n    })\r\n  };\r\n  constructor(private httpClient: HttpClient) {this.readLocalStorageValue(); }\r\n\r\n  public filterByUserType(userType){\r\n    return this.httpClient.get('http://localhost:9090/users?type=' + userType, this.httpOptions);\r\n  }\r\n\r\n  public filterUsersByStartStudyYear(year){\r\n    return this.httpClient.get('http://localhost:9090/users?studyYear=' + year, this.httpOptions);\r\n  }\r\n\r\n  public filterUserByLocation(location){\r\n    return this.httpClient.get('http://localhost:9090/users?location=' + location, this.httpOptions);\r\n  }\r\n\r\n  public filterUserByDepartment(department){\r\n    return this.httpClient.get('http://localhost:9090/users?department=' + department, this.httpOptions);\r\n  }\r\n\r\n  public filterUsersByStartWorkYear(year){\r\n    return this.httpClient.get('http://localhost:9090/users?workingYear=' + year, this.httpOptions);\r\n  }\r\n\r\n  public filterUsersByName(name){\r\n    return this.httpClient.get('http://localhost:9090/users?firstName=' + name, this.httpOptions);\r\n  }\r\n\r\n  public filterUsersByTypeLocationDepartment(type, locId, depId){\r\n    return this.httpClient.get('http://localhost:9090/users?type=' + type + '&location=' + locId + '&department=' + depId, this.httpOptions);\r\n  }\r\n\r\n  public filterUsersByTypeLocationDepartmentStudyYear(type, year, locId, depId){\r\n    return this.httpClient.get('http://localhost:9090/users?type=' + type + '&studyYear=' + year + '&location=' + locId + '&department=' + depId, this.httpOptions );\r\n  }\r\n\r\n  public filterUsersByTypeLocationDepartmentWorkYearFontysStaff(type, year, locId, depId){\r\n    return this.httpClient.get('http://localhost:9090/users?type=' + type + '&workingYear=' + year + '&location=' + locId + '&department=' + depId, this.httpOptions );\r\n  }\r\n\r\n  public filterUsersByTypeLocationDepartmentName(name, locId, depId, type){\r\n    return this.httpClient.get('http://localhost:9090/users?firstName=' + name + '&location=' + locId + '&department=' + depId + '&type=' + type, this.httpOptions);\r\n  }\r\n\r\n}\r\n","import { Experience } from './../classes/Profile/Experience';\r\nimport { Component, Inject, OnInit } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { ProfileService } from '../services/profile/profile.service';\r\n\r\n@Component({\r\n  selector: 'app-delete-experience',\r\n  templateUrl: './delete-experience.component.html',\r\n  styleUrls: ['./delete-experience.component.css']\r\n})\r\nexport class DeleteExperienceComponent implements OnInit {\r\n\r\n  loggedInUser: number = 5;\r\n\r\n  constructor(\r\n    private profileService: ProfileService,\r\n    public dialogRef: MatDialogRef<DeleteExperienceComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any) {\r\n      console.log(data);\r\n    }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  //close dialog \r\n  noClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  //delete experience\r\n  deleteExperience() {\r\n    this.profileService.deleteExperience(this.loggedInUser, this.data.experience.profileId, this.data.experience.id).subscribe();\r\n    console.log(this.loggedInUser + \" \" + this.data.experience.profileId + \" \" + this.data.experience.id);\r\n\r\n    // Close dialog\r\n    this.dialogRef.close();\r\n  }\r\n\r\n}\r\n","<div id=\"confirm\" mat-dialog-content>\r\n    <p> Do you want to delete this Experience?</p>\r\n  </div>\r\n  <div mat-dialog-actions>\r\n      <button mat-raised-button cdkFocusInitial (click)=\"deleteExperience()\">Yes</button>\r\n      <button mat-raised-button (click)=\"noClick()\">No</button>  \r\n  </div> ","import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { DataService } from '../data.service';\r\nimport { Injectable } from '@angular/core';\r\nimport { map } from 'rxjs/operators';\r\nimport { UserService } from '../user.service';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ContactService extends DataService {\r\n\thttpOptions = {\r\n\t\theaders: new HttpHeaders({'Content-Type': 'application/json'})\r\n\t}\r\n  \treadLocalStorageValue() {\r\n\t\tif(localStorage.getItem(\"userToken\") != null){\r\n\t\t  this.httpOptions.headers = this.httpOptions.headers.set('Authorization', localStorage.getItem(\"userToken\"));\r\n\t\t};\r\n\t}\r\n\r\n    constructor(http: HttpClient, \r\n                private userService: UserService) {\r\n    super('http://localhost:9090/users/' + userService.getUserIdOfLoggedIn() + '/contacts', http);\r\n    this.readLocalStorageValue();\r\n    }\r\n\r\n  \tgetId() {\r\n\t\tlet id = this.userService.getUserIdOfLoggedIn();\r\n\r\n\t\treturn id;\r\n\t}\r\n\r\n  getContactRequests() {\r\n\treturn this.http.get('http://localhost:9090/users/' + this.getId() + '/requests', this.httpOptions)\r\n\t  .pipe(\r\n\t\tmap(response => response)\r\n\t  )\r\n  }\r\n\r\n  \tgetAcceptedContacts() {\r\n\t\treturn this.http.get('http://localhost:9090/users/' + this.getId() + '/acceptedContacts', this.httpOptions)\r\n\t\t.pipe(\r\n\t\t  map(response => response)\r\n\t\t)\r\n\t}\r\n}\r\n","import { BadRequestComponent } from './errors/bad-request/bad-request.component';\r\nimport { DialogAddProfileComponent } from './profile/dialog-add-profile/dialog-add-profile.component';\r\nimport { SelectedMessageComponent } from './messages/selected-message/selected-message.component';\r\nimport { MessagesComponent } from './messages/messages.component';\r\nimport { RegistrationComponent } from './registration/registration.component';\r\nimport { ConnectionComponent } from './connection/connection.component';\r\nimport { ProfileComponent } from './profile/profile.component';\r\nimport { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport {HomeComponent} from './home/home.component';\r\nimport {UserComponent} from './user/user.component';\r\n\r\nimport {PostComponent} from './post/post.component';\r\nimport {UpdatePostComponent} from './update-post/update-post.component';\r\nimport {PostDetailsComponent} from './post-details/post-details.component'\r\n\r\n\r\nimport {UserSettingsComponent} from './user-settings/user-settings.component';\r\nimport { FilterUsersComponent } from './filter-users/filter-users.component';\r\nimport { NewsfeedComponent } from './newsfeed/newsfeed.component';\r\nimport {LoginComponent} from './login/login.component';\r\nimport { AuthGuard } from  './auth/auth.guard';\r\nimport {CvBuilderComponent} from './cv-builder/cv-builder.component';\r\nimport { NotFoundComponent } from './errors/not-found/not-found.component';\r\nimport { ForbiddenComponent } from './errors/forbidden/forbidden.component';\r\nimport { UnexpectedErrorComponent } from './errors/unexpected-error/unexpected-error.component';\r\nimport { OfflineComponent } from './errors/offline/offline.component';\r\nimport { InternalServerErrorComponent } from './errors/internal-server-error/internal-server-error.component';\r\nconst routes: Routes = [\r\n\t{\r\n\t  path: '',\r\n\t  component: LoginComponent\r\n\t},\r\n\t{\r\n\t  path: 'export/:profileId',\r\n\t  component: CvBuilderComponent,\r\n\t  //canActivate: [ AuthGuard ]\r\n\t},\r\n\t{\r\n\t  path: 'users/:id/profiles/:profileId', \r\n\t  component: ProfileComponent,\r\n\t  canActivate: [ AuthGuard ]\r\n\t},{\r\n\t  path: 'posts', \r\n\t  component: NewsfeedComponent,\r\n\t  canActivate: [ AuthGuard ]\r\n\t},\r\n\t{\r\n\t  path: 'update-post/:id',\r\n\t  component: UpdatePostComponent,\r\n\t  canActivate: [ AuthGuard ]\r\n\t},\r\n\t{\r\n\t  path: 'post/:id',\r\n\t  component: PostDetailsComponent,\r\n\t  canActivate: [ AuthGuard ]\r\n\t},\r\n\t  {\r\n\t\tpath: 'users/:id/connections',\r\n\t\tcomponent: ConnectionComponent,\r\n\t\tcanActivate: [ AuthGuard ]\r\n\t  },\r\n\t  {\r\n\t\tpath: 'users/:id/messages',\r\n\t\tcomponent: HomeComponent,\r\n\t\tcanActivate: [ AuthGuard ] // MessageComponent\r\n\t},\r\n\t{\r\n\t  path: 'settings',\r\n\t  component: UserSettingsComponent,\r\n\t  canActivate: [ AuthGuard ]\r\n\t},\r\n\t{\r\n\t  path: 'users/filter',\r\n\t  component: FilterUsersComponent,\r\n\t  canActivate: [ AuthGuard ]\r\n\t},\r\n\t{\r\n\t  path:'register', \r\n\t  component: RegistrationComponent\r\n\t},\r\n\t{\r\n\t  path: 'messages',\r\n\t  component: MessagesComponent,\r\n\t\tchildren: [\r\n\t\t\t{\r\n\t\t\t\tpath: ':conversationId',\r\n\t\t\t\tcomponent: SelectedMessageComponent,\r\n\t\t\t\tcanActivate: [ AuthGuard ]\r\n\t\t\t}\r\n\t\t],\r\n\t\tcanActivate: [ AuthGuard ]\r\n\t},\r\n\t{\r\n\t  path: 'addProfile',\r\n\t  component: DialogAddProfileComponent,\r\n\t  canActivate: [ AuthGuard ]\r\n\t},\r\n\t{\r\n\t\tpath: 'forbidden',\r\n\t\tcomponent: ForbiddenComponent,\r\n\t},\r\n\t{\r\n\t\tpath: 'unexpected-error',\r\n\t\tcomponent: UnexpectedErrorComponent,\r\n\t},\r\n\t{\r\n\t\tpath: 'bad-request',\r\n\t\tcomponent: BadRequestComponent,\r\n\t},\r\n\t{\r\n\t\tpath: 'offline',\r\n\t\tcomponent: OfflineComponent\r\n\t},\r\n\t{\r\n\t\tpath: 'internal-server-error',\r\n\t\tcomponent: InternalServerErrorComponent\r\n\t},\r\n\t{\r\n\t\tpath: '**',\r\n\t\tcomponent: NotFoundComponent\r\n\t}\r\n]\r\n\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { User } from '../classes/Profile/User';\r\nimport { Router } from '@angular/router';\r\nimport { UserService } from '../services/user.service';\r\nimport jwt_decode from 'jwt-decode';\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  token:string;\r\n  loggedIn:boolean;\r\n  isLoginError : boolean = false;\r\n  user = new User(3);\r\n  constructor(private service: UserService,private router : Router) { }\r\n\r\n  ngOnInit(): void {\r\n    if(this.readLocalStorageValue() != null){\r\n      this.loggedIn= true;\r\n      this.router.navigate(['/posts']);\r\n    }else{\r\n      this.loggedIn = false;\r\n      \r\n    }\r\n\r\n  }\r\n\r\n  getDecodedAccessToken(token: string): any {\r\n    try{\r\n        return jwt_decode(token);\r\n    }\r\n    catch(Error){\r\n        return null;\r\n    }\r\n  }\r\n  OnSubmit(email,password){\r\n   \r\n  this.service.login(email, password)\r\n  .subscribe(\r\n    (res: any) => {\r\n      console.log(res);\r\n    \r\n     localStorage.setItem('userToken', res);\r\n   \r\n     location.reload();\r\n    this.router.navigate(['/posts']);\r\n    },\r\n    (error: Response) => {\r\n      if(error.status === 404){\r\n        console.log(\"not found\");\r\n        this.isLoginError = true;\r\n       }\r\n      }\r\n);\r\n}\r\nreadLocalStorageValue() {\r\n  return localStorage.getItem('userToken');\r\n}\r\n\r\n\r\n}\r\n","<!DOCTYPE html>\r\n<html>\r\n<head>\r\n\t<title>Login Page</title>\r\n  \r\n</head>\r\n<body>\r\n<div class=\"container\">\r\n\t<div class=\"d-flex justify-content-center h-100\">\r\n\t\t<div class=\"card\">\r\n\t\t\t<div class=\"card-header\">\r\n\t\t\t\t<h3>Sign In</h3>\r\n\t\t\t\t\r\n\t\t\t</div>\r\n\t\t\t<div class=\"card-body\">\r\n\t\t\t\t<div *ngIf=\"isLoginError\" class=\"red-text center error-message\">\r\n\t\t\t\t\t<i class=\"material-icons\">error</i> Incorrect username or password\r\n\t\t\t\t</div>\r\n\t\t\t\t<form #loginForm=\"ngForm\" (ngSubmit)=\"OnSubmit(email.value,password.value)\">\r\n\t\t\t\t\t<div class=\"input-group form-group\">\r\n\t\t\t\t\t\t<div class=\"input-group-prepend\">\r\n\t\t\t\t\t\t\t<span class=\"input-group-text\"><i class=\"fas fa-user\"></i></span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<input type=\"text\" #email ngModel name=\"email\" placeholder=\"email\" required>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class=\"input-group form-group\">\r\n\t\t\t\t\t\t<div class=\"input-group-prepend\">\r\n\t\t\t\t\t\t\t<span class=\"input-group-text\"><i class=\"fas fa-key\"></i></span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<input type=\"password\" #password ngModel name=\"password\" placeholder=\"password\" required>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t\r\n\t\t\t\t\t<div class=\"form-group\">\r\n\t\t\t\t\t\t<button [disabled]=\"!loginForm.valid\" class=\"btn-large btn-submit\" type=\"submit\">Login</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</form>\r\n\t\t\t</div>\r\n\t\t\t<div class=\"card-footer\">\r\n\t\t\t\t<div class=\"d-flex justify-content-center links\">\r\n\t\t\t\t\tDon't have an account?<a href=\"/register\">Sign Up</a>\r\n\t\t\t\t</div>\r\n\t\t\t\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-internal-server-error',\r\n  templateUrl: './internal-server-error.component.html',\r\n  styleUrls: ['./internal-server-error.component.css']\r\n})\r\nexport class InternalServerErrorComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<section>\r\n    <div id=\"content\">\r\n        <h1>500</h1>\r\n        <p class=\"type\">Error: 500 Internal Server Error</p>\r\n        <h2>The server is currently unable to handle this request</h2>\r\n        <p>Please try again later.</p>\r\n    </div>\r\n</section>","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'search'\r\n})\r\nexport class SearchPipe implements PipeTransform {\r\n  /**\r\n   * Transform\r\n   *\r\n   * @param {any[]} items\r\n   * @param {string} searchText\r\n   * @returns {any[]}\r\n   */\r\n  transform(items: any[], searchText: string): any[] {\r\n    // let loggedInUser = 1;\r\n    if (!items) {\r\n      return [];\r\n    }\r\n    if (!searchText) {\r\n      return items;\r\n    }\r\n    searchText = searchText.toString().toLowerCase();\r\n    console.log(searchText);\r\n\r\n    // return items.filter(it => {\r\n    //   let fullName = it.firstName + ' ' + it.lastName;\r\n    //   console.log(fullName.toString().toLowerCase());\r\n    //   return fullName.toString().toLowerCase().indexOf(searchText) == 0;\r\n    // });\r\n\r\n  return items.filter(it => {\r\n      let fullName = it.firstName + ' ' + it.lastName;\r\n      console.log(fullName);\r\n      return fullName.toString().toLowerCase().indexOf(searchText) >= 0;\r\n    });\r\n  }\r\n\r\n}\r\n","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { Conversation } from '../classes/Message/Conversation';\r\nimport { ConversationDTO } from '../classes/Message/ConversationDTO';\r\nimport { UserDTO } from '../classes/Profile/UserDTO';\r\nimport { FilterService } from '../services/filter/filter.service';\r\nimport { MessageService } from '../services/message/message.service';\r\n\r\n@Component({\r\n  selector: 'app-start-conversation',\r\n  templateUrl: './start-conversation.component.html',\r\n  styleUrls: ['./start-conversation.component.css']\r\n})\r\nexport class StartConversationComponent implements OnInit {\r\n\r\n  searchText= \"\";\r\n  users: UserDTO[]; \r\n  user: UserDTO;\r\n  conversation: Conversation;\r\n  conversationDTO: ConversationDTO; \r\n  logId: string;\r\n\r\n  \r\n  constructor(\r\n    private messageService: MessageService,\r\n    private filterService: FilterService,\r\n    public dialogRef: MatDialogRef<StartConversationComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any) {\r\n      console.log(data);\r\n    }\r\n\r\n  ngOnInit(): void {\r\n    this.logId = localStorage.getItem('userId');\r\n  }\r\n\r\n  //get user by type letters of his/her name\r\n  getUsersByFirstNameChars(){\r\n\r\n    if (this.searchText != null){\r\n      this.filterService.filterUsersByName(this.searchText).subscribe((data)=>\r\n      {\r\n       this.users=<UserDTO[]>data;\r\n        console.log(this.users);     \r\n      });\r\n    }\r\n\r\n  }\r\n\r\n  //close dialog\r\n  Close(){\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  // Send message\r\n\tstartNewConversation(id: number) {\r\n    \r\n    console.log(\"In start conversation method --- second user=  \" + id + \"first user id= \" + this.logId);\r\n\r\n\r\n    let newConversation = {\r\n      firstUserId: this.logId,\r\n      secondUserId: id\r\n    }\r\n\r\n    this.messageService.startConversation(newConversation);\r\n    console.log(\"Added\" + newConversation);\r\n      \r\n    this.Close();\r\n\t}\r\n\r\n}\r\n","<div class=\"col-sm\">\r\n    <mat-card class=\"found-card\">\r\n\r\n      <form class=\"example-form float-right\">\r\n        <mat-form-field class=\"example-full-width\">\r\n          <mat-label>Search</mat-label>\r\n          <input type=\"text\" matInput placeholder=\"Search for new contact\"\r\n          id=\"search-text\" \r\n          aria-describedby=\"search-text\" \r\n          name=\"searchText\"\r\n          [(ngModel)]=\"searchText\" \r\n          autofocus>\r\n        </mat-form-field>\r\n\r\n        <button class=\"float-right\" mat-icon-button ria-label=\"\" (click)=\"getUsersByFirstNameChars()\">\r\n          <mat-icon>search</mat-icon>\r\n        </button>\r\n\r\n      </form>\r\n\r\n      <mat-card-header>\r\n          <br>\r\n          <br>\r\n      </mat-card-header>\r\n\r\n\r\n        <mat-list>  \r\n             \r\n            <tr id=\"testUser\"  *ngFor=\"let user of users\">\r\n          \r\n              <td class=\"font-italic\"> \r\n\r\n                <div [routerLink]=\"['/users', user.id, 'profiles', user.profileId]\" >\r\n\r\n                  <mat-icon> account_circle </mat-icon>\r\n                  {{user.firstName}} {{user.lastName}} \r\n                  <br>\r\n            \r\n                </div>\r\n\r\n                <div>\r\n                  <button class = \"btn\" mat-icon-button ria-label=\"\" (click)=\"startNewConversation(user.id)\"><mat-icon matTooltip=\"Add New Conversation\"> add_circle </mat-icon></button>\r\n                </div>\r\n\r\n                <mat-divider></mat-divider>\r\n                <br>\r\n              </td>\r\n\r\n            </tr>\r\n          \r\n        </mat-list>\r\n\r\n      <mat-card-content>\r\n\r\n\r\n      </mat-card-content>\r\n\r\n    </mat-card> \r\n  </div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport pdfMake from 'pdfmake/build/pdfmake';\r\nimport pdfFonts from 'pdfmake/build/vfs_fonts';\r\nimport { User } from '../classes/Profile/User';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Resume, Experience, Education, Skill } from '../classes/Profile/Resume';\r\nimport { ProfileService } from '../services/profile/profile.service';\r\nexport class Experience2{\r\n  constructor( \r\n      public id: number,\r\n      public  profileId: number,\r\n      public  title: string,\r\n      public  company:string,\r\n      public  employmentType : string,\r\n      public  location: string,\r\n      public  startDateExperience: number,\r\n      public  endDateExperience: number,\r\n      public  descriptionExperience: string,\r\n    ) {  }\r\n}\r\nexport class Education2{\r\n  constructor( \r\n      public id: number,\r\n      public   profileId: number,\r\n      public  school: string,\r\n      public  startYearEducation: number,\r\n      public  endYearEducation: number,\r\n      public   degreeEducation: string,\r\n      public   fieldStudy: string,\r\n      public   descriptionEducation: string,\r\n    ) {  }\r\n}\r\n\r\nexport class Skill2{\r\n\r\n  id: number;\r\n  profileId: number;\r\n  name: string;\r\n  \r\n}\r\n\r\npdfMake.vfs = pdfFonts.pdfMake.vfs;\r\n@Component({\r\n  selector: 'app-cv-builder',\r\n  templateUrl: './cv-builder.component.html',\r\n  styleUrls: ['./cv-builder.component.css']\r\n})\r\nexport class CvBuilderComponent implements OnInit {\r\n  educations2: Education2[];\r\n  experiences2: Experience2[];\r\n  skills2 : Skill2[];\r\n  useExisting:boolean;\r\n  resume = new Resume();\r\n  degrees = ['B.E.', 'M.E.', 'B.Com', 'M.Com'];\r\n  user = new User(3);\r\n  id:string;\r\n  profileId:number;\r\n  \r\nuseExist(){\r\n  if(this.useExisting){\r\n    \r\n    this.resume.skills = [];\r\n    \r\n   this.skills2.forEach(ski => {\r\n    \r\n     var newSkill = new Skill();\r\n     newSkill.value = ski.name;\r\n   \r\n     this.resume.skills.push(newSkill);\r\n    \r\n   });\r\n   console.log(this.resume.skills);\r\n }else{\r\n   console.log(\"false\");\r\n   console.log(this.resume.skills);\r\n }\r\n}\r\n\r\n\r\n  constructor(private profileService: ProfileService,private route: ActivatedRoute,) {\r\n    this.resume = JSON.parse(sessionStorage.getItem('resume')) || new Resume();\r\n    if (!this.resume.experiences || this.resume.experiences.length === 0) {\r\n      this.resume.experiences = [];\r\n      this.resume.experiences.push(new Experience());\r\n    }\r\n    if (!this.resume.educations || this.resume.educations.length === 0) {\r\n      this.resume.educations = [];\r\n      this.resume.educations.push(new Education());\r\n    }\r\n    if (!this.resume.skills || this.resume.skills.length === 0) {\r\n      this.resume.skills = [];\r\n      this.resume.skills.push(new Skill());\r\n    }\r\n  }\r\n  addExperience() {\r\n    this.resume.experiences.push(new Experience());\r\n  }\r\n  addEducation() {\r\n    this.resume.educations.push(new Education());\r\n  }\r\n  generatePdf(action = 'open') {\r\n    const documentDefinition = this.getDocumentDefinition();\r\n    switch (action) {\r\n      case 'open': pdfMake.createPdf(documentDefinition).open(); break;\r\n      case 'print': pdfMake.createPdf(documentDefinition).print(); break;\r\n      case 'download': pdfMake.createPdf(documentDefinition).download(); break;\r\n      default: pdfMake.createPdf(documentDefinition).open(); break;\r\n    }\r\n  }\r\n  resetForm() {\r\n    this.resume = new Resume();\r\n  }\r\n  getDocumentDefinition() {\r\n   console.log(this.user.firstName);\r\n   console.log(this.user.email);\r\n  this.useExist();\r\n\r\n    sessionStorage.setItem('resume', JSON.stringify(this.resume));\r\n    return {\r\n      content: [\r\n        {\r\n          text: 'RESUME',\r\n          bold: true,\r\n          fontSize: 20,\r\n          alignment: 'center',\r\n          margin: [0, 0, 0, 20]\r\n        },\r\n        {\r\n          columns: [\r\n            [{\r\n              text: this.user.firstName+' '+this.user.lastName, //this.user.name\r\n              style: 'name'\r\n            },\r\n            {\r\n              text: this.resume.address\r\n            },\r\n            {\r\n              text: 'Email : ' + this.user.email, // this.user.email\r\n            },\r\n            {\r\n              text: 'Phonenumber : ' + this.resume.contactNo,\r\n            },\r\n            {\r\n              text: 'GitHub: ' + this.resume.socialProfile,\r\n              link: this.resume.socialProfile,\r\n              color: 'blue',\r\n            }\r\n            ],\r\n            [\r\n              this.getProfilePicObject()\r\n            ]\r\n          ]\r\n        },\r\n        {\r\n          text: 'Skills',\r\n          style: 'header'\r\n        },\r\n        {\r\n          columns : [\r\n            {\r\n              ul : [\r\n                ...this.resume.skills.filter((value, index) => index % 3 === 0).map(s => s.value)\r\n              ]\r\n            },\r\n            {\r\n              ul : [\r\n                ...this.resume.skills.filter((value, index) => index % 3 === 1).map(s => s.value)\r\n              ]\r\n            },\r\n            {\r\n              ul : [\r\n                ...this.resume.skills.filter((value, index) => index % 3 === 2).map(s => s.value)\r\n              ]\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          text: 'Experience',\r\n          style: 'header'\r\n        },\r\n        this.getExperienceObject(this.resume.experiences),\r\n        {\r\n          text: 'Education',\r\n          style: 'header'\r\n        },\r\n        this.getEducationObject(this.resume.educations),\r\n        {\r\n          text: 'Other Details',\r\n          style: 'header'\r\n        },\r\n        {\r\n          text: this.resume.otherDetails\r\n        },\r\n        {\r\n          text: 'Signature',\r\n          style: 'sign'\r\n        },\r\n        {\r\n          columns : [\r\n              { qr: this.user.firstName+' '+this.user.lastName + ', Phone number : ' + this.resume.contactNo, fit : 100 },\r\n              {\r\n              text: `${this.user.firstName+' '+this.user.lastName}`,\r\n              alignment: 'right',\r\n              }\r\n          ]\r\n        }\r\n      ],\r\n      info: {\r\n        title: this.user.firstName+' '+this.user.lastName + '_RESUME',\r\n        author: this.user.firstName+' '+this.user.lastName,\r\n        subject: 'RESUME',\r\n        keywords: 'RESUME, ONLINE RESUME',\r\n      },\r\n        styles: {\r\n          header: {\r\n            fontSize: 18,\r\n            bold: true,\r\n            margin: [0, 20, 0, 10],\r\n            decoration: 'underline'\r\n          },\r\n          name: {\r\n            fontSize: 16,\r\n            bold: true\r\n          },\r\n          jobTitle: {\r\n            fontSize: 14,\r\n            bold: true,\r\n            italics: true\r\n          },\r\n          sign: {\r\n            margin: [0, 50, 0, 10],\r\n            alignment: 'right',\r\n            italics: true\r\n          },\r\n          tableHeader: {\r\n            bold: true,\r\n          }\r\n        }\r\n    };\r\n  }\r\n  getExperienceObject(experiences: Experience[]) {\r\n    if(this.useExisting){\r\n      if(this.experiences2.length < 1){\r\n        console.log(\"not enough\");\r\n        return null;\r\n      }\r\n      const exs = [];\r\n      this.experiences2.forEach(experience => {\r\n        exs.push(\r\n          [{\r\n            columns: [\r\n              [{\r\n                text: experience.title,\r\n                style: 'jobTitle'\r\n              },\r\n              {\r\n                text: experience.company,\r\n              },\r\n              {\r\n                text: experience.location,\r\n              }],\r\n              {\r\n                text: 'Start date: ' + experience.startDateExperience + ' End date ' + experience.endDateExperience,\r\n                alignment: 'right'\r\n              }\r\n            ]\r\n          }]\r\n        );\r\n      });\r\n      return {\r\n        table: {\r\n          widths: ['*'],\r\n          body: [\r\n            ...exs\r\n          ]\r\n        }\r\n      };\r\n    }else{\r\n      const exs = [];\r\n      experiences.forEach(experience => {\r\n        exs.push(\r\n          [{\r\n            columns: [\r\n              [{\r\n                text: experience.jobTitle,\r\n                style: 'jobTitle'\r\n              },\r\n              {\r\n                text: experience.employer,\r\n              },\r\n              {\r\n                text: experience.jobDescription,\r\n              }],\r\n              {\r\n                text: 'Experience : ' + experience.experience + ' Months',\r\n                alignment: 'right'\r\n              }\r\n            ]\r\n          }]\r\n        );\r\n      });\r\n      return {\r\n        table: {\r\n          widths: ['*'],\r\n          body: [\r\n            ...exs\r\n          ]\r\n        }\r\n      };\r\n    }\r\n   \r\n   \r\n  }\r\n  getEducationObject(educations: Education[],) {\r\n    if(this.useExisting){\r\n      if(this.educations2.length < 1){\r\n        console.log(\"not enough\");\r\n        return null;\r\n      }\r\n      return {\r\n        table: {\r\n          widths: ['*', '*', '*', '*'],\r\n          body: [\r\n            [{\r\n              text: 'Degree',\r\n              style: 'tableHeader'\r\n            },\r\n            {\r\n              text: 'College',\r\n              style: 'tableHeader'\r\n            },\r\n            {\r\n              text: 'Start year',\r\n              style: 'tableHeader'\r\n            },\r\n            {\r\n              text: 'End Year',\r\n              style: 'tableHeader'\r\n            },\r\n            ],\r\n            ...this.educations2.map(ed => {\r\n              return [ed.degreeEducation, ed.school, ed.startYearEducation, ed.endYearEducation];\r\n            })\r\n          ]\r\n        }\r\n      };\r\n    }else{\r\n      return {\r\n        table: {\r\n          widths: ['*', '*', '*', '*'],\r\n          body: [\r\n            [{\r\n              text: 'Degree',\r\n              style: 'tableHeader'\r\n            },\r\n            {\r\n              text: 'College',\r\n              style: 'tableHeader'\r\n            },\r\n            {\r\n              text: 'Passing Year',\r\n              style: 'tableHeader'\r\n            },\r\n            {\r\n              text: 'Result',\r\n              style: 'tableHeader'\r\n            },\r\n            ],\r\n            ...educations.map(ed => {\r\n              return [ed.degree, ed.college, ed.passingYear, ed.percentage];\r\n            })\r\n          ]\r\n        }\r\n      };\r\n    }\r\n    \r\n  }\r\n  getProfilePicObject() {\r\n    if (this.resume.profilePic) {\r\n      return {\r\n        image: this.resume.profilePic ,\r\n        width: 75,\r\n        alignment : 'right'\r\n      };\r\n    }\r\n    return null;\r\n  }\r\n  fileChanged(e) {\r\n    const file = e.target.files[0];\r\n    this.getBase64(file);\r\n  }\r\n  getBase64(file) {\r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(file);\r\n    reader.onload = () => {\r\n      console.log(reader.result);\r\n      this.resume.profilePic = reader.result as string;\r\n    };\r\n    reader.onerror = (error) => {\r\n      console.log('Error: ', error);\r\n    };\r\n  }\r\n  addSkill() {\r\n    this.resume.skills.push(new Skill());\r\n  }\r\n  ngOnInit(): void {\r\n    this.id = localStorage.getItem('userId');\r\n    \r\n    this.profileId = +this.route.snapshot.paramMap.get('profileId');\r\n    this.profileService.GetOneUser(this.id)\r\n    .subscribe((data)=>{\r\n      console.log(data);\r\n    this.user = <User>data;\r\n   \r\n      this.profileService.getEducationsById(this.id, this.profileId)\r\n      .subscribe(\r\n        data => {\r\n          this.educations2 = <Education2[]>data;\r\n          \r\n        }\r\n      );\r\n      this.profileService.getSkillsById(this.id, this.profileId)\r\n    .subscribe(\r\n      data => {\r\n        this.skills2 = <Skill2[]>data;\r\n        console.log(this.skills2);\r\n      }\r\n    );\r\n    this.profileService.getExperienceById(this.id, this.profileId)\r\n    .subscribe(\r\n      data => {\r\n        this.experiences2 = <Experience2[]>data;\r\n        \r\n      }\r\n    )\r\n    \r\n  });\r\n  }\r\n\r\n}\r\n","<!-- I did not make this myself,it is taken from here: https://www.ngdevelop.tech/angular-8-export-to-pdf-using-pdfmake/ -->\r\n<br>\r\n<br>\r\n\r\n\r\n<br>\r\n\r\n  <div class=\"container-fluid\">\r\n\r\n    <h2> <mat-slide-toggle [(ngModel)]=\"useExisting\">Use my existing information</mat-slide-toggle></h2>\r\n    <form #resumeForm=\"ngForm\">\r\n      <div class=\"row\">\r\n        <div class=\"col-md-8\">\r\n          <div class=\"shadow-sm card\">\r\n            <div class=\"card-body\">\r\n              <h4 class=\"card-title d-flex align-items-center\">\r\n                <i class=\"material-icons\">\r\n                  account_circle\r\n                </i>\r\n                Personal Details</h4>\r\n              <div class=\"row\">\r\n                <div class=\"col-md-6\">\r\n                  <div class=\"form-group\">\r\n                    <input type=\"text\" class=\"form-control\" [disabled]=\"true\" [(ngModel)]=\"user.firstName\" name=\"name\" placeholder=\"Name\"\r\n                      #Name=\"ngModel\"\r\n                      [ngClass]=\"{'is-invalid': Name.invalid && (Name.touched || resumeForm.submitted) }\">\r\n                  </div>\r\n                  <div class=\"form-group\">\r\n                    <div class=\"form-group\">\r\n                      <textarea class=\"form-control\" [(ngModel)]=\"resume.address\" name=\"address\" rows=\"3\"\r\n                        placeholder=\"Address\" #Address=\"ngModel\" \r\n                        [ngClass]=\"{'is-invalid': Address.invalid && (Address.touched || resumeForm.submitted) }\"></textarea>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div class=\"col-md-6\">\r\n                  <div class=\"form-group\">\r\n                    <input type=\"text\" class=\"form-control\" [(ngModel)]=\"resume.contactNo\" name=\"contactNo\"\r\n                      placeholder=\"Contact No.\" #ContactNo=\"ngModel\" \r\n                      [ngClass]=\"{'is-invalid': ContactNo.invalid && (ContactNo.touched || resumeForm.submitted) }\">\r\n                  </div>\r\n                  <div class=\"form-group\">\r\n                    <input type=\"text\" class=\"form-control\"[disabled]=\"true\"  [(ngModel)]=\"user.email\" name=\"emailId\"\r\n                      placeholder=\"Email ID\" #Email=\"ngModel\" \r\n                      [ngClass]=\"{'is-invalid': Email.invalid && (Email.touched || resumeForm.submitted) }\">\r\n                  </div>\r\n                  <div class=\"form-group\">\r\n                    <input type=\"text\" class=\"form-control\" [(ngModel)]=\"resume.socialProfile\" name=\"socialProfile\"\r\n                      placeholder=\"Social Profile \">\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n  \r\n          <!-- Skills -->\r\n          <div class=\"shadow-sm card\">\r\n            <div class=\"card-body\">\r\n              <div class=\"d-flex justify-content-between card-title\">\r\n                <h4 class=\"d-flex align-items-center\">\r\n                  <i class=\"material-icons\">\r\n                    timeline\r\n                  </i>\r\n                  Skills</h4>\r\n                <button class=\"btn btn-primary\" [disabled]=\"useExisting\" (click)=\"addSkill()\">+</button>\r\n              </div>\r\n              <div class=\"row\">\r\n                <div class=\"col-md-4\" *ngFor=\"let s of resume.skills; let i=index\">\r\n                  <div class=\"form-group\">\r\n                    <input type=\"text\" class=\"form-control\"[disabled]=\"useExisting\" name=\"skill{{i}}\" [(ngModel)]=\"s.value\"\r\n                      placeholder=\"e.g. Java / Angular / .Net \" #Skill=\"ngModel\" \r\n                      [ngClass]=\"{'is-invalid': Skill.invalid && (Skill.touched || resumeForm.submitted) }\">\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n  \r\n  \r\n          <!-- Experience -->\r\n          <div class=\"shadow-sm card\">\r\n            <div class=\"card-body\">\r\n              <div class=\"d-flex justify-content-between card-title\">\r\n                <h4 class=\"d-flex align-items-center\">\r\n                  <i class=\"material-icons\">\r\n                    timeline\r\n                  </i>\r\n                  Experience</h4>\r\n                <button class=\"btn btn-primary\" [disabled]=\"useExisting\"(click)=\"addExperience()\">+</button>\r\n              </div>\r\n              <div class=\"row\" *ngFor=\"let ex of resume.experiences; let i=index\">\r\n                <div class=\"col-md-6\">\r\n                  <div class=\"form-group\">\r\n                    <input type=\"text\" class=\"form-control\"[disabled]=\"useExisting\" name=\"employer{{i}}\" [(ngModel)]=\"ex.employer\"\r\n                      placeholder=\"Employer\" #Employer=\"ngModel\" required\r\n                      [ngClass]=\"{'is-invalid': Employer.invalid && (Employer.touched || resumeForm.submitted) }\">\r\n                  </div>\r\n                  <div class=\"form-group\">\r\n                    <div class=\"form-group\">\r\n                      <textarea class=\"form-control\" [disabled]=\"useExisting\" name=\"jobDescription{{i}}\" [(ngModel)]=\"ex.jobDescription\" rows=\"3\"\r\n                        placeholder=\"Job Description\"></textarea>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div class=\"col-md-6\">\r\n                  <div class=\"form-group\">\r\n                    <input type=\"text\" class=\"form-control\"[disabled]=\"useExisting\" name=\"jobTitle{{i}}\" [(ngModel)]=\"ex.jobTitle\"\r\n                      placeholder=\"Job Title\" #JobTitle=\"ngModel\" required\r\n                      [ngClass]=\"{'is-invalid': JobTitle.invalid && (JobTitle.touched || resumeForm.submitted) }\">\r\n                  </div>\r\n                  <div class=\"form-group\">\r\n                    <input type=\"number\" class=\"form-control\"[disabled]=\"useExisting\" name=\"exInMonths{{i}}\" [(ngModel)]=\"ex.experience\"\r\n                      placeholder=\"Experience in months\" #Experience=\"ngModel\" required\r\n                      [ngClass]=\"{'is-invalid': Experience.invalid && (Experience.touched || resumeForm.submitted) }\">\r\n                  </div>\r\n                </div>\r\n              </div>\r\n  \r\n            </div>\r\n          </div>\r\n  \r\n          <!-- Education -->\r\n          <div class=\"shadow-sm card\">\r\n            <div class=\"card-body\">\r\n              <div class=\"d-flex justify-content-between card-title\">\r\n                <h4 class=\"d-flex align-items-center\">\r\n                  <i class=\"material-icons\">\r\n                    school\r\n                  </i>\r\n                  Education</h4>\r\n                <button class=\"btn btn-primary\" [disabled]=\"useExisting\"(click)=\"addEducation()\">+</button>\r\n              </div>\r\n              <div class=\"row\" *ngFor=\"let ed of resume.educations; let i=index\">\r\n                <div class=\"col-md-3\">\r\n                  <div class=\"form-group\">\r\n                    <select class=\"form-control\" placeholder=\"Degree\" [disabled]=\"useExisting\" name=\"degree{{i}}\" [(ngModel)]=\"ed.degree\"\r\n                      #Degree=\"ngModel\" required\r\n                      [ngClass]=\"{'is-invalid': Degree.invalid && (Degree.touched || resumeForm.submitted) }\">\r\n                      <option [value]=\"d\" *ngFor=\"let d of degrees\">{{d}}</option>\r\n                    </select>\r\n                  </div>\r\n                </div>\r\n                <div class=\"col-md-3\">\r\n                  <div class=\"form-group\">\r\n                    <input type=\"text\" class=\"form-control\"[disabled]=\"useExisting\" name=\"college{{i}}\" [(ngModel)]=\"ed.college\"\r\n                      placeholder=\"School/College\" #College=\"ngModel\" required\r\n                      [ngClass]=\"{'is-invalid': College.invalid && (College.touched || resumeForm.submitted) }\">\r\n                  </div>\r\n                </div>\r\n                <div class=\"col-md-3\">\r\n                  <div class=\"form-group\">\r\n                    <input type=\"number\" class=\"form-control\"[disabled]=\"useExisting\" name=\"passingYear{{i}}\" [(ngModel)]=\"ed.passingYear\"\r\n                      placeholder=\"Passing Year\" #PassingYear=\"ngModel\" required\r\n                      [ngClass]=\"{'is-invalid': PassingYear.invalid && (PassingYear.touched || resumeForm.submitted) }\">\r\n                  </div>\r\n                </div>\r\n                <div class=\"col-md-3\">\r\n                  <div class=\"form-group\">\r\n                    <input type=\"number\" class=\"form-control\"[disabled]=\"useExisting\" name=\"result{{i}}\" [(ngModel)]=\"ed.percentage\"\r\n                      placeholder=\"Percentage\" #Percentage=\"ngModel\" required\r\n                      [ngClass]=\"{'is-invalid': Percentage.invalid && (Percentage.touched || resumeForm.submitted) }\">\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n  \r\n          <!-- Other Details -->\r\n  \r\n          <div class=\"shadow-sm card\">\r\n            <div class=\"card-body\">\r\n              <h4 class=\"card-title d-flex align-items-center\">\r\n                <i class=\"material-icons\"> list </i>Other Details</h4>\r\n              <div class=\"row\">\r\n                <div class=\"col-md-12\">\r\n                  <div class=\"form-group\">\r\n                    <textarea type=\"text\" class=\"form-control\" [(ngModel)]=\"resume.otherDetails\" name=\"otherDetails\"\r\n                      rows=\"4\"></textarea>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n  \r\n        <div class=\"col-md-4\">\r\n          <div class=\"shadow-sm card action-buttons\">\r\n            <button (click)=\"resumeForm.valid ? generatePdf('open') : ''\"\r\n              class=\"btn btn-primary d-flex align-items-center justify-content-center\">\r\n              <i class=\"material-icons\">\r\n                picture_as_pdf\r\n              </i> <span>Open PDF</span></button>\r\n            <button (click)=\"resumeForm.valid ? generatePdf('download') : ''\"\r\n              class=\"btn btn-primary d-flex align-items-center justify-content-center\">\r\n              <i class=\"material-icons\">\r\n                cloud_download\r\n              </i><span>Download PDF</span></button>\r\n            <button (click)=\"resumeForm.valid ? generatePdf('print') : ''\"\r\n              class=\"btn btn-primary d-flex align-items-center justify-content-center\">\r\n              <i class=\"material-icons\">\r\n                print\r\n              </i><span>Print PDF</span></button>\r\n  \r\n            <button type='reset' (click)=\"resetForm()\"\r\n              class=\"btn btn-primary d-flex align-items-center justify-content-center\">\r\n              <i class=\"material-icons\">\r\n                clear\r\n              </i><span>Reset</span></button>\r\n              \r\n          </div>\r\n  \r\n          <div class=\"card p-4\">\r\n            <div class=\"form-group\">\r\n              <label class=\"h4 mb-3\" for=\"\">Show your picture in Resume</label>\r\n              <input type=\"file\" class=\"form-control-file\" (change)=\"fileChanged($event)\" aria-describedby=\"fileHelpId\">\r\n            </div>\r\n            <img *ngIf=\"resume.profilePic\" [src]=\"resume.profilePic\" class=\"img-thumbnail\">\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  </div>","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}